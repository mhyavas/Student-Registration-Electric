{"version":3,"sources":["app/msg_test.cljc"],"mappings":";AAeA,AACA,AAYA","names":[],"sourcesContent":["(ns app.msg-test\r\n  (:require clojure.edn\r\n            contrib.ednish\r\n            [hyperfiddle.electric-ui4 :as ui4]\r\n            #?(:clj [contrib.datomic-contrib :as dx])\r\n            #?(:cljs contrib.datomic-cloud-contrib)\r\n            [contrib.gridsheet :as gridsheet :refer [Explorer]]\r\n            [hyperfiddle.electric :as e]\r\n            [contrib.str :refer [empty->nil]]\r\n            [hyperfiddle.electric-dom2 :as dom]\r\n            [hyperfiddle.history :as history]\r\n            [missionary.core :as m]\r\n            #?(:clj [datomic.client.api :as dt])))\r\n\r\n\r\n(e/def conn)\r\n(e/def db)\r\n\r\n#?(:clj (defn reply_finder [db ref]\r\n          (dt/q '[:find (pull ?e [*])\r\n                  :in $ ?ref\r\n                  :where [?e :msg/reply_to ?ref]] db ref)))\r\n#?(:clj (defn replier [db m]\r\n          (if (nil? (:msg/reply_to (first m)))\r\n            (first m)\r\n            (dt/q '[:find (pull ?ref [*])\r\n                    :in $ ?ref\r\n                    :where [?ref :msg/title _]] db (:db/id (:msg/reply_to (first m)))))))\r\n(e/defn MessageTest []\r\n        (e/server\r\n          (binding [conn @(requiring-resolve 'user/datomic-conn)]\r\n            (binding [db (dt/db conn)]\r\n              (e/client\r\n                (e/for [msg (e/server (map (partial replier db) (dt/q '[:find (pull ?e [*])\r\n                                                                        :in $ ?title\r\n                                                                        :where [?e :msg/title ?title]\r\n                                                                        [?e :msg/timestamp ?timestamp]] db \"test3\")))]\r\n                       (dom/tr (dom/text msg) #_(dom/text (:msg/message (first msg)) \"--\" (:msg/timestamp (first msg))))))))))\r\n\r\n\r\n"]}