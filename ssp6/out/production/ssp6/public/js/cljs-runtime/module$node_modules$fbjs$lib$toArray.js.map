{
"version":3,
"file":"module$node_modules$fbjs$lib$toArray.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAejG,IAAIC,UAAYH,OAAA,CAAQ,wCAAR,CA0ChBC,OAAOC,CAAAA,OAAP,CA/BAE,QAAgB,CAACC,GAAD,CAAM,CACpB,IAAIC,OAASD,GAAIC,CAAAA,MAIdC,MAAMC,CAAAA,OAAN,CAAcH,GAAd,CAAH,EAAyC,QAAzC,GAA0B,MAAOA,IAAjC,EAAoE,UAApE,GAAqD,MAAOA,IAA5D,CAA2HF,SAAA,CAAU,CAAA,CAAV,CAAiB,qCAAjB,CAA3H,CAAwMM,IAAAA,EAEpL,SAApB,GAAE,MAAOH,OAAT,CAAwEH,SAAA,CAAU,CAAA,CAAV,CAAiB,yCAAjB,CAAxE,CAAyJM,IAAAA,EAE5I,EAAb,GAAEH,MAAF,EAAkBA,MAAlB,CAA2B,CAA3B,GAAgCD,IAAhC,CAAqKI,IAAAA,EAArK,CAA+EN,SAAA,CAAU,CAAA,CAAV,CAAiB,8CAAjB,CAK/E;GAAIE,GAAIK,CAAAA,cAAR,CACE,GAAI,CACF,MAAOH,MAAMI,CAAAA,SAAUC,CAAAA,KAAMC,CAAAA,IAAtB,CAA2BR,GAA3B,CADL,CAEF,MAAOS,CAAP,CAAU,EAQd,IADA,IAAIC,IAAMR,KAAA,CAAMD,MAAN,CAAV,CACSU,GAAK,CAAd,CAAiBA,EAAjB,CAAsBV,MAAtB,CAA8BU,EAAA,EAA9B,CACED,GAAA,CAAIC,EAAJ,CAAA,CAAUX,GAAA,CAAIW,EAAJ,CAEZ,OAAOD,IA5Ba,CA1B2E;",
"sources":["node_modules/fbjs/lib/toArray.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$toArray\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule toArray\n * @typechecks\n */\n\n'use strict';\n\nvar invariant = require('./invariant');\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in\n  // old versions of Safari).\n  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;\n\n  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;\n\n  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\nmodule.exports = toArray;\n};"],
"names":["shadow$provide","global","require","module","exports","invariant","toArray","obj","length","Array","isArray","undefined","hasOwnProperty","prototype","slice","call","e","ret","ii"]
}
