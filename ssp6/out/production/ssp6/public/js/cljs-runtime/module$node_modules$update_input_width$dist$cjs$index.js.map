{
"version":3,
"file":"module$node_modules$update_input_width$dist$cjs$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAUlHC,QAASA,iBAAgB,CAACC,OAAD,CAAU,CAC/B,GAAI,CAACA,OAAL,CACI,MAAO,EAEPC,QAAAA,CAAQC,MAAOC,CAAAA,gBAAP,CAAwBH,OAAxB,CACZ,IAAIC,OAAMG,CAAAA,IAAV,CACI,MAAOH,QAAMG,CAAAA,IAGjB,IADyC,EACzC,GADoBH,OAAMI,CAAAA,UAC1B,CACI,MAAO,EAEX,KAAIC,YAAcC,eAAgBC,CAAAA,QAAhB,CAAyBP,OAAMK,CAAAA,WAA/B,CAAA,CAA8CL,OAAMK,CAAAA,WAApD,CAAkE,QACpF,OAAO,EAAGG,CAAAA,MAAH,CAAUR,OAAMS,CAAAA,SAAhB,CAA2B,GAA3B,CAAgCD,CAAAA,MAAhC,CAAuCH,WAAvC,CAAoD,GAApD,CAAyDG,CAAAA,MAAzD,CAAgER,OAAMU,CAAAA,UAAtE,CAAkF,GAAlF,CAAuFF,CAAAA,MAAvF,CAA8FR,OAAMW,CAAAA,QAApG,CAA8G,KAA9G,CAAqHH,CAAAA,MAArH,CAA4HR,OAAMY,CAAAA,UAAlI;AAA8I,GAA9I,CAAmJJ,CAAAA,MAAnJ,CAA0JR,OAAMI,CAAAA,UAAhK,CAbwB,CAuBnCS,QAASA,YAAW,CAACC,IAAD,CAAOX,IAAP,CAAa,CAE7B,IAAIY,QAAiBC,CADRC,YACQD,GADSC,YACTD,CADwBE,QAASC,CAAAA,aAAT,CAAuB,QAAvB,CACxBH,GAAAA,UAAP,CAAkB,IAAlB,CAEd,IAAI,CAACD,OAAL,CACI,MAAO,KAEXA,QAAQZ,CAAAA,IAAR,CAAeA,IACXiB,KAAAA,CAAQL,OAAQF,CAAAA,WAAR,CAAoBC,IAApB,CAA0BM,CAAAA,KACtC,OAAOC,KAAKC,CAAAA,IAAL,CAAUF,IAAV,CATsB,CAgBjCG,QAASA,iBAAgB,CAACxB,OAAD,CAAU,CAC/B,GAAwB,WAAxB,GAAI,MAAOmB,SAAX,EAAuC,CAACnB,OAAxC,CACI,MAAO,KAEX,KAAII,KAAOL,gBAAA,CAAiBC,OAAjB,CAEPqB,KAAAA,CAAQP,WAAA,CADDd,OAAQyB,CAAAA,KACP,EADgBzB,OAAQ0B,CAAAA,WACxB,CAAkBtB,IAAlB,CACZ,IAAc,IAAd,GAAIiB,IAAJ,CACI,MAAO,KAEXrB,QAAQC,CAAAA,KAAMoB,CAAAA,KAAd,CAAsB,EAAGZ,CAAAA,MAAH,CAAUY,IAAV;AAAiB,IAAjB,CACtB,OAAOA,KAXwB,CA/CnCM,MAAOC,CAAAA,cAAP,CAAsB9B,OAAtB,CAA+B,YAA/B,CAA6C,CAAE2B,MAAO,CAAA,CAAT,CAA7C,CACA3B,QAAQ0B,CAAAA,gBAAR,CAA2B1B,OAAQgB,CAAAA,WAAnC,CAAiDhB,OAAQC,CAAAA,gBAAzD,CAA4E,IAAK,EACjF,KAAIQ,gBAAkB,CAAC,QAAD,CAAW,YAAX,CAqBtBT,QAAQC,CAAAA,gBAAR,CAA2BA,gBAC3B,KAAImB,YAkBJpB,QAAQgB,CAAAA,WAAR,CAAsBA,WAkBtBhB,QAAQ0B,CAAAA,gBAAR,CAA2BA,gBAC3B1B,QAAQ+B,CAAAA,OAAR,CAAkBL,gBA/DgG;",
"sources":["node_modules/update-input-width/dist/cjs/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$update_input_width$dist$cjs$index\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateInputWidth = exports.measureText = exports.getFontShorthand = void 0;\nvar allowedVariants = ['normal', 'small-caps'];\n/**\n * Gets font CSS shorthand property given element.\n *\n * @param {HTMLElement} element Element to get font CSS shorthand property from\n */\nfunction getFontShorthand(element) {\n    if (!element) {\n        return '';\n    }\n    var style = window.getComputedStyle(element);\n    if (style.font) {\n        return style.font;\n    }\n    var isFontDefined = style.fontFamily !== '';\n    if (!isFontDefined) {\n        return '';\n    }\n    var fontVariant = allowedVariants.includes(style.fontVariant) ? style.fontVariant : 'normal';\n    return \"\".concat(style.fontStyle, \" \").concat(fontVariant, \" \").concat(style.fontWeight, \" \").concat(style.fontSize, \" / \").concat(style.lineHeight, \" \").concat(style.fontFamily);\n}\nexports.getFontShorthand = getFontShorthand;\nvar cachedCanvas;\n/**\n * Measures text width given text and font CSS shorthand.\n *\n * @param {string} text Text to measure\n * @param {string} font Font to use when measuring the text\n */\nfunction measureText(text, font) {\n    var canvas = cachedCanvas || (cachedCanvas = document.createElement('canvas'));\n    var context = canvas.getContext('2d');\n    // Context type not supported\n    if (!context) {\n        return null;\n    }\n    context.font = font;\n    var width = context.measureText(text).width;\n    return Math.ceil(width);\n}\nexports.measureText = measureText;\n/**\n * Updates input element width to fit its content given input element\n * @param {HTMLInputElement} element\n */\nfunction updateInputWidth(element) {\n    if (typeof document === 'undefined' || !element) {\n        return null;\n    }\n    var font = getFontShorthand(element);\n    var text = element.value || element.placeholder;\n    var width = measureText(text, font);\n    if (width === null) {\n        return null;\n    }\n    element.style.width = \"\".concat(width, \"px\");\n    return width;\n}\nexports.updateInputWidth = updateInputWidth;\nexports.default = updateInputWidth;\n\n};"],
"names":["shadow$provide","global","require","module","exports","getFontShorthand","element","style","window","getComputedStyle","font","fontFamily","fontVariant","allowedVariants","includes","concat","fontStyle","fontWeight","fontSize","lineHeight","measureText","text","context","getContext","cachedCanvas","document","createElement","width","Math","ceil","updateInputWidth","value","placeholder","Object","defineProperty","default"]
}
