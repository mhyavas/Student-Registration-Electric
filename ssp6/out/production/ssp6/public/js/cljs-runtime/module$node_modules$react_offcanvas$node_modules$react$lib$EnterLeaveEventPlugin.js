shadow$provide.module$node_modules$react_offcanvas$node_modules$react$lib$EnterLeaveEventPlugin=function(global,require,module,exports){global=require("module$node_modules$react_offcanvas$node_modules$react$lib$EventConstants");var EventPropagators=require("module$node_modules$react_offcanvas$node_modules$react$lib$EventPropagators"),SyntheticMouseEvent=require("module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticMouseEvent"),ReactMount=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactMount");
require=require("module$node_modules$fbjs$lib$keyOf");var topLevelTypes=global.topLevelTypes,getFirstReactDOM=ReactMount.getFirstReactDOM,eventTypes={mouseEnter:{registrationName:require({onMouseEnter:null}),dependencies:[topLevelTypes.topMouseOut,topLevelTypes.topMouseOver]},mouseLeave:{registrationName:require({onMouseLeave:null}),dependencies:[topLevelTypes.topMouseOut,topLevelTypes.topMouseOver]}},extractedEvents=[null,null];module.exports={eventTypes,extractEvents:function(topLevelType,topLevelTarget,
topLevelTargetID,nativeEvent,nativeEventTarget){if(topLevelType===topLevelTypes.topMouseOver&&(nativeEvent.relatedTarget||nativeEvent.fromElement)||topLevelType!==topLevelTypes.topMouseOut&&topLevelType!==topLevelTypes.topMouseOver)return null;if(topLevelTarget.window===topLevelTarget)var win=topLevelTarget;else{var doc=topLevelTarget.ownerDocument;win=doc?doc.defaultView||doc.parentWindow:window}var toID=doc="";topLevelType===topLevelTypes.topMouseOut?(topLevelType=topLevelTarget,doc=topLevelTargetID,
(topLevelTarget=getFirstReactDOM(nativeEvent.relatedTarget||nativeEvent.toElement))?toID=ReactMount.getID(topLevelTarget):topLevelTarget=win,topLevelTarget=topLevelTarget||win):(topLevelType=win,toID=topLevelTargetID);if(topLevelType===topLevelTarget)return null;topLevelTargetID=SyntheticMouseEvent.getPooled(eventTypes.mouseLeave,doc,nativeEvent,nativeEventTarget);topLevelTargetID.type="mouseleave";topLevelTargetID.target=topLevelType;topLevelTargetID.relatedTarget=topLevelTarget;nativeEvent=SyntheticMouseEvent.getPooled(eventTypes.mouseEnter,
toID,nativeEvent,nativeEventTarget);nativeEvent.type="mouseenter";nativeEvent.target=topLevelTarget;nativeEvent.relatedTarget=topLevelType;EventPropagators.accumulateEnterLeaveDispatches(topLevelTargetID,nativeEvent,doc,toID);extractedEvents[0]=topLevelTargetID;extractedEvents[1]=nativeEvent;return extractedEvents}}}
//# sourceMappingURL=module$node_modules$react_offcanvas$node_modules$react$lib$EnterLeaveEventPlugin.js.map
