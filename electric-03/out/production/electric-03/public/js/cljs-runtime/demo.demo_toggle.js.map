{"version":3,"sources":["demo/demo_toggle.cljc"],"mappings":";AAUA,AAEA","names":[],"sourcesContent":["(ns demo.demo-toggle\r\n  (:require\r\n   [hyperfiddle.electric :as e]\r\n   [hyperfiddle.electric-dom2 :as dom]\r\n   [hyperfiddle.electric-ui4 :as ui]))\r\n\r\n; a full stack function with both frontend and backend parts,\r\n; all defined in the same expression\r\n\r\n#?(:clj (defonce !x (atom true))) ; server state\r\n(e/def x (e/server (e/watch !x))) ; reactive signal derived from atom\r\n\r\n(e/defn Toggle []\r\n  (e/client\r\n    (dom/h1 (dom/text \"Toggle Client/Server\"))\r\n\r\n    (dom/div\r\n      (dom/text \"number type here is: \"\r\n        (case x\r\n          true (e/client (pr-str (type 1))) ; javascript number type\r\n          false (e/server (pr-str (type 1)))))) ; java number type\r\n\r\n    (dom/div (dom/text \"current site: \"\r\n               (case x\r\n                 true \"ClojureScript (client)\"\r\n                 false \"Clojure (server)\")))\r\n\r\n    (ui/button (e/fn []\r\n                 (e/server (swap! !x not)))\r\n      (dom/text \"toggle client/server\"))))\r\n"]}