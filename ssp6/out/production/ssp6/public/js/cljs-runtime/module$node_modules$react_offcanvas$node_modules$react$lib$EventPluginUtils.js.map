{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$EventPluginUtils.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/EventPluginUtils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$EventPluginUtils\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginUtils\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `Mount`: [required] Module that can convert between React dom IDs and\n *   actual node references.\n */\nvar injection = {\n  Mount: null,\n  injectMount: function (InjectedMount) {\n    injection.Mount = InjectedMount;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;\n    }\n  }\n};\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;\n}\n\nvar validateEventDispatches;\nif (process.env.NODE_ENV !== 'production') {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchIDs = event._dispatchIDs;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var idsIsArr = Array.isArray(dispatchIDs);\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @param {function} listener Application-level callback\n * @param {string} domID DOM id to pass to the callback.\n */\nfunction executeDispatch(event, simulated, listener, domID) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = injection.Mount.getNode(domID);\n  if (simulated) {\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);\n  } else {\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);\n  }\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, simulated) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, simulated, dispatchListeners, dispatchIDs);\n  }\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\n        return dispatchIDs[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchIDs)) {\n      return dispatchIDs;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchIDs = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchID = event._dispatchIDs;\n  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;\n  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n\n  getNode: function (id) {\n    return injection.Mount.getNode(id);\n  },\n  getID: function (node) {\n    return injection.Mount.getID(node);\n  },\n\n  injection: injection\n};\n\nmodule.exports = EventPluginUtils;\n};"],
"names":["shadow$provide","global","require","module","exports","executeDispatch","event","simulated","listener","domID","type","currentTarget","injection","Mount","getNode","ReactErrorUtils","invokeGuardedCallbackWithCatch","invokeGuardedCallback","EventConstants","invariant","warning","injectMount","InjectedMount","getID","topLevelTypes","validateEventDispatches","dispatchListeners","_dispatchListeners","dispatchIDs","_dispatchIDs","listenersIsArr","Array","isArray","idsIsArr","IDsLen","length","listenersLen","EventPluginUtils","isEndish","topLevelType","topMouseUp","topTouchEnd","topTouchCancel","isMoveish","topMouseMove","topTouchMove","isStartish","topMouseDown","topTouchStart","executeDirectDispatch","dispatchListener","dispatchID","undefined","res","executeDispatchesInOrder","i","isPropagationStopped","executeDispatchesInOrderStopAtTrue","ret","hasDispatches","id","node"]
}
