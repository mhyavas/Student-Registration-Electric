{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$ReactServerRendering.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAA,+EAAA,CAAoG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAc5I,IAAIC,6BAA+BH,OAAA,CAAQ,yFAAR,CAAnC,CACII,aAAeJ,OAAA,CAAQ,yEAAR,CADnB,CAEIK,qBAAuBL,OAAA,CAAQ,iFAAR,CAF3B,CAGIM,oBAAsBN,OAAA,CAAQ,gFAAR,CAH1B;AAIIO,4BAA8BP,OAAA,CAAQ,wFAAR,CAJlC,CAKIQ,gCAAkCR,OAAA,CAAQ,4FAAR,CALtC,CAMIS,aAAeT,OAAA,CAAQ,yEAAR,CANnB,CAQIU,YAAcV,OAAA,CAAQ,0CAAR,CARlB,CASIW,0BAA4BX,OAAA,CAAQ,sFAAR,CAThC;AAUIY,UAAYZ,OAAA,CAAQ,wCAAR,CAwDhBC,OAAOC,CAAAA,OAAP,CAAiB,CACfW,eAnDFA,QAAuB,CAACC,OAAD,CAAU,CAC9BV,YAAaW,CAAAA,cAAb,CAA4BD,OAA5B,CAAD,CAA+KE,IAAAA,EAA/K,CAAgFJ,SAAA,CAAU,CAAA,CAAV,CAAiB,uDAAjB,CAGhF,IAAI,CACFH,YAAaQ,CAAAA,SAAUC,CAAAA,sBAAvB,CAA8CX,2BAA9C,CAEA,KAAIY,GAAKd,oBAAqBe,CAAAA,iBAArB,EACT,KAAAC,YAAcb,+BAAgCc,CAAAA,SAAhC,CAA0C,CAAA,CAA1C,CAEd,OAAOD,YAAYE,CAAAA,OAAZ,CAAoB,QAAS,EAAG,CAErC,IAAIC,OADoBb,yBAAAc,CAA0BX,OAA1BW,CAAmC,IAAnCA,CACOC,CAAAA,cAAlB,CAAiCP,EAAjC;AAAqCE,WAArC,CAAkDX,WAAlD,CACb,OAAOJ,oBAAoBqB,CAAAA,mBAApB,CAAwCH,MAAxC,CAH8B,CAAhC,CAIJ,IAJI,CANL,CAAJ,OAWU,CACRhB,+BAAgCoB,CAAAA,OAAhC,CAAwCP,WAAxC,CAGA,CAAAZ,YAAaQ,CAAAA,SAAUC,CAAAA,sBAAvB,CAA8Cf,4BAA9C,CAJQ,CAfqB,CAkDhB,CAEf0B,qBAxBFA,QAA6B,CAACf,OAAD,CAAU,CACpCV,YAAaW,CAAAA,cAAb,CAA4BD,OAA5B,CAAD,CAAqLE,IAAAA,EAArL,CAAgFJ,SAAA,CAAU,CAAA,CAAV,CAAiB,6DAAjB,CAGhF,IAAI,CACFH,YAAaQ,CAAAA,SAAUC,CAAAA,sBAAvB,CAA8CX,2BAA9C,CAEA,KAAIY,GAAKd,oBAAqBe,CAAAA,iBAArB,EACT;IAAAC,YAAcb,+BAAgCc,CAAAA,SAAhC,CAA0C,CAAA,CAA1C,CAEd,OAAOD,YAAYE,CAAAA,OAAZ,CAAoB,QAAS,EAAG,CAErC,MADwBZ,0BAAAc,CAA0BX,OAA1BW,CAAmC,IAAnCA,CACCC,CAAAA,cAAlB,CAAiCP,EAAjC,CAAqCE,WAArC,CAAkDX,WAAlD,CAF8B,CAAhC,CAGJ,IAHI,CANL,CAAJ,OAUU,CACRF,+BAAgCoB,CAAAA,OAAhC,CAAwCP,WAAxC,CAGA,CAAAZ,YAAaQ,CAAAA,SAAUC,CAAAA,sBAAvB,CAA8Cf,4BAA9C,CAJQ,CAd2B,CAsBtB,CAhF2H;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/ReactServerRendering.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$ReactServerRendering\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule ReactServerRendering\n */\n'use strict';\n\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactServerBatchingStrategy = require('./ReactServerBatchingStrategy');\nvar ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup\n */\nfunction renderToString(element) {\n  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;\n\n  var transaction;\n  try {\n    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\n\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(false);\n\n    return transaction.perform(function () {\n      var componentInstance = instantiateReactComponent(element, null);\n      var markup = componentInstance.mountComponent(id, transaction, emptyObject);\n      return ReactMarkupChecksum.addChecksumToMarkup(markup);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n    // Revert to the DOM batching strategy since these two renderers\n    // currently share these stateful modules.\n    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n  }\n}\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup, without the extra React ID and checksum\n * (for generating static pages)\n */\nfunction renderToStaticMarkup(element) {\n  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;\n\n  var transaction;\n  try {\n    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\n\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(true);\n\n    return transaction.perform(function () {\n      var componentInstance = instantiateReactComponent(element, null);\n      return componentInstance.mountComponent(id, transaction, emptyObject);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n    // Revert to the DOM batching strategy since these two renderers\n    // currently share these stateful modules.\n    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n  }\n}\n\nmodule.exports = {\n  renderToString: renderToString,\n  renderToStaticMarkup: renderToStaticMarkup\n};\n};"],
"names":["shadow$provide","global","require","module","exports","ReactDefaultBatchingStrategy","ReactElement","ReactInstanceHandles","ReactMarkupChecksum","ReactServerBatchingStrategy","ReactServerRenderingTransaction","ReactUpdates","emptyObject","instantiateReactComponent","invariant","renderToString","element","isValidElement","undefined","injection","injectBatchingStrategy","id","createReactRootID","transaction","getPooled","perform","markup","componentInstance","mountComponent","addChecksumToMarkup","release","renderToStaticMarkup"]
}
