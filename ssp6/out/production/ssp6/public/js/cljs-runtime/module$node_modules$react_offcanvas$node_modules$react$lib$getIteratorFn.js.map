{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$getIteratorFn.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,wEAAA,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgBrI,IAAIC,gBAAoC,UAApCA,GAAkB,MAAOC,OAAzBD,EAAkDC,MAAOC,CAAAA,QAwB7DJ,OAAOC,CAAAA,OAAP,CAPAI,QAAsB,CAACC,aAAD,CAAgB,CAChCC,aAAAA,CAAaD,aAAbC,GAA+BL,eAA/BK,EAAkDD,aAAA,CAAcJ,eAAd,CAAlDK,EAAoFD,aAAA,CAjB/DE,YAiB+D,CAApFD,CACJ,IAA0B,UAA1B,GAAI,MAAOA,cAAX,CACE,MAAOA,cAH2B,CAjC+F;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/getIteratorFn.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$getIteratorFn\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getIteratorFn\n * @typechecks static-only\n */\n\n'use strict';\n\n/* global Symbol */\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n};"],
"names":["shadow$provide","global","require","module","exports","ITERATOR_SYMBOL","Symbol","iterator","getIteratorFn","maybeIterable","iteratorFn","FAUX_ITERATOR_SYMBOL"]
}
