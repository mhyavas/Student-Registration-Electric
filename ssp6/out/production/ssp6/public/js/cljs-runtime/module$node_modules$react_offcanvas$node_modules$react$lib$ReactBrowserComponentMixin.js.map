{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$ReactBrowserComponentMixin.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,qFAAA,CAA0G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAclJ,IAAIC,iBAAmBH,OAAA,CAAQ,6EAAR,CAAvB,CAEII,YAAcJ,OAAA,CAAQ,wEAAR,CAFlB,CAGIK,QAAUL,OAAA,CAAQ,sCAAR,CAmBdC,OAAOC,CAAAA,OAAP,CAfiCI,CAQ/BC,WAAYA,QAAS,EAAG,CACkBF,OAAA,CAAQ,IAAKG,CAAAA,WAAL,CAAA,kBAAR,CAAsC,sFAAtC;AAAmIL,gBAAiBM,CAAAA,GAAjB,CAAqB,IAArB,CAA2BC,CAAAA,OAA3B,EAAnI,EAA2K,IAAKC,CAAAA,OAAhL,EAA2L,SAA3L,CACxC,KAAKH,CAAAA,WAAL,CAAA,kBAAA,CAA+B,CAAA,CAC/B,OAAOJ,YAAA,CAAY,IAAZ,CAHe,CAROE,CArBiH;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/ReactBrowserComponentMixin.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$ReactBrowserComponentMixin\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserComponentMixin\n */\n\n'use strict';\n\nvar ReactInstanceMap = require('./ReactInstanceMap');\n\nvar findDOMNode = require('./findDOMNode');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnKey = '_getDOMNodeDidWarn';\n\nvar ReactBrowserComponentMixin = {\n  /**\n   * Returns the DOM node rendered by this component.\n   *\n   * @return {DOMElement} The root node of this component.\n   * @final\n   * @protected\n   */\n  getDOMNode: function () {\n    process.env.NODE_ENV !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;\n    this.constructor[didWarnKey] = true;\n    return findDOMNode(this);\n  }\n};\n\nmodule.exports = ReactBrowserComponentMixin;\n};"],
"names":["shadow$provide","global","require","module","exports","ReactInstanceMap","findDOMNode","warning","ReactBrowserComponentMixin","getDOMNode","constructor","get","getName","tagName"]
}
