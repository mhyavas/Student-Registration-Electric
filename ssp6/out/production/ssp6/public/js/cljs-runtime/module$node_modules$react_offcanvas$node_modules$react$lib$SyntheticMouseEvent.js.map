{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticMouseEvent.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,8EAAA,CAAmG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmE3IC,QAASA,oBAAmB,CAACC,cAAD,CAAiBC,cAAjB,CAAiCC,WAAjC,CAA8CC,iBAA9C,CAAiE,CAC3FC,gBAAiBC,CAAAA,IAAjB,CAAsB,IAAtB,CAA4BL,cAA5B,CAA4CC,cAA5C,CAA4DC,WAA5D,CAAyEC,iBAAzE,CAD2F,CApD7F,IAAIC,iBAAmBR,OAAA,CAAQ,6EAAR,CAAvB,CACIU,gBAAkBV,OAAA,CAAQ,4EAAR,CAQlBW;MAAAA,CAAsB,CACxBC,QAAS,IADe,CAExBC,QAAS,IAFe,CAGxBC,QAAS,IAHe,CAIxBC,QAAS,IAJe,CAKxBC,QAAS,IALe,CAMxBC,SAAU,IANc,CAOxBC,OAAQ,IAPgB,CAQxBC,QAAS,IARe,CASxBC,iBAf0BpB,OAAAqB,CAAQ,kFAARA,CAMF,CAUxBC,OAAQA,QAAS,CAACC,KAAD,CAAQ,CAIvB,IAAID,OAASC,KAAMD,CAAAA,MACnB,OAAI,OAAJ,EAAeC,MAAf,CACSD,MADT,CAOkB,CAAX,GAAAA,MAAA,CAAe,CAAf,CAA8B,CAAX,GAAAA,MAAA,CAAe,CAAf,CAAmB,CAZtB,CAVD,CAwBxBE,QAAS,IAxBe,CAyBxBC,cAAeA,QAAS,CAACF,KAAD,CAAQ,CAC9B,MAAOA,MAAME,CAAAA,aAAb,GAA+BF,KAAMG,CAAAA,WAAN,GAAsBH,KAAMI,CAAAA,UAA5B,CAAyCJ,KAAMK,CAAAA,SAA/C,CAA2DL,KAAMG,CAAAA,WAAhG,CAD8B,CAzBR,CA6BxBG,MAAOA,QAAS,CAACN,KAAD,CAAQ,CACtB,MAAO,OAAA;AAAWA,KAAX,CAAmBA,KAAMM,CAAAA,KAAzB,CAAiCN,KAAMT,CAAAA,OAAvC,CAAiDJ,eAAgBoB,CAAAA,iBADlD,CA7BA,CAgCxBC,MAAOA,QAAS,CAACR,KAAD,CAAQ,CACtB,MAAO,OAAA,EAAWA,MAAX,CAAmBA,KAAMQ,CAAAA,KAAzB,CAAiCR,KAAMR,CAAAA,OAAvC,CAAiDL,eAAgBsB,CAAAA,gBADlD,CAhCA,CA+C1BxB,iBAAiByB,CAAAA,YAAjB,CAA8B9B,mBAA9B,CAAmDQ,MAAnD,CAEAV,OAAOC,CAAAA,OAAP,CAAiBC,mBAzE0H;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/SyntheticMouseEvent.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticMouseEvent\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticMouseEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function (event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  // \"Proprietary\" Interface.\n  pageX: function (event) {\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function (event) {\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n};"],
"names":["shadow$provide","global","require","module","exports","SyntheticMouseEvent","dispatchConfig","dispatchMarker","nativeEvent","nativeEventTarget","SyntheticUIEvent","call","ViewportMetrics","MouseEventInterface","screenX","screenY","clientX","clientY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","getEventModifierState","button","event","buttons","relatedTarget","fromElement","srcElement","toElement","pageX","currentScrollLeft","pageY","currentScrollTop","augmentClass"]
}
