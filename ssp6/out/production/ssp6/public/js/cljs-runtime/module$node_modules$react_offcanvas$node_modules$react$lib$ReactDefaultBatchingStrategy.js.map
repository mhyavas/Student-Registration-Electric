{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$ReactDefaultBatchingStrategy.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,uFAAA,CAA4G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkCpJC,QAASA,wCAAuC,EAAG,CACjD,IAAKC,CAAAA,uBAAL,EADiD,CApB/CC,MAAAA,CAAeL,OAAA,CAAQ,yEAAR,CACfM,QAAAA,CAAcN,OAAA,CAAQ,wEAAR,CAElB,KAAIO,OAASP,OAAA,CAAQ,0EAAR,CACTQ,QAAAA;AAAgBR,OAAA,CAAQ,4CAAR,CAEpB,KAAIS,sBAAwB,CAC1BC,WAAYF,OADc,CAE1BG,MAAOA,QAAS,EAAG,CACjBC,4BAA6BC,CAAAA,iBAA7B,CAAiD,CAAA,CADhC,CAFO,CAA5B,CAYIC,qBAAuB,CALCC,CAC1BL,WAAYF,OADcO,CAE1BJ,MAAON,MAAaW,CAAAA,mBAAoBC,CAAAA,IAAjC,CAAsCZ,MAAtC,CAFmBU,CAKD,CAAwBN,qBAAxB,CAM3BF,OAAA,CAAOJ,uCAAwCe,CAAAA,SAA/C,CAA0DZ,OAAYa,CAAAA,KAAtE,CAA6E,CAC3EC,uBAAwBA,QAAS,EAAG,CAClC,MAAON,qBAD2B,CADuC,CAA7E,CAMA,KAAIO,YAAc,IAAIlB,uCAAtB,CAEIS;AAA+B,CACjCC,kBAAmB,CAAA,CADc,CAOjCS,eAAgBA,QAAS,CAACC,QAAD,CAAWC,CAAX,CAAcC,CAAd,CAAiBC,CAAjB,CAAoBC,CAApB,CAAuBC,CAAvB,CAA0B,CACjD,IAAIC,uBAAyBjB,4BAA6BC,CAAAA,iBAE1DD,6BAA6BC,CAAAA,iBAA7B,CAAiD,CAAA,CAG7CgB,uBAAJ,CACEN,QAAA,CAASC,CAAT,CAAYC,CAAZ,CAAeC,CAAf,CAAkBC,CAAlB,CAAqBC,CAArB,CADF,CAGEP,WAAYS,CAAAA,OAAZ,CAAoBP,QAApB,CAA8B,IAA9B,CAAoCC,CAApC,CAAuCC,CAAvC,CAA0CC,CAA1C,CAA6CC,CAA7C,CAAgDC,CAAhD,CAT+C,CAPlB,CAqBnC3B,OAAOC,CAAAA,OAAP,CAAiBU,4BAnEmI;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/ReactDefaultBatchingStrategy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$ReactDefaultBatchingStrategy\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultBatchingStrategy\n */\n\n'use strict';\n\nvar ReactUpdates = require('./ReactUpdates');\nvar Transaction = require('./Transaction');\n\nvar assign = require('./Object.assign');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function () {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\nassign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  }\n});\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function (callback, a, b, c, d, e) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      callback(a, b, c, d, e);\n    } else {\n      transaction.perform(callback, null, a, b, c, d, e);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n};"],
"names":["shadow$provide","global","require","module","exports","ReactDefaultBatchingStrategyTransaction","reinitializeTransaction","ReactUpdates","Transaction","assign","emptyFunction","RESET_BATCHED_UPDATES","initialize","close","ReactDefaultBatchingStrategy","isBatchingUpdates","TRANSACTION_WRAPPERS","FLUSH_BATCHED_UPDATES","flushBatchedUpdates","bind","prototype","Mixin","getTransactionWrappers","transaction","batchedUpdates","callback","a","b","c","d","e","alreadyBatchingUpdates","perform"]
}
