{"version":3,"sources":["contrib/assert.cljc"],"mappings":";AAWA","names":[],"sourcesContent":["(ns contrib.assert\r\n  #?(:cljs (:require-macros contrib.assert))\r\n  (:require [hyperfiddle.rcf :refer [tests]]))\r\n\r\n(defmacro check\r\n  ([v] `(check some? ~v))\r\n  ([pred v]\r\n   `(let [pred# ~pred, v# ~v]\r\n      (when-not (pred# v#) (throw (ex-info (str \"check failed: (\" (pr-str '~pred) \" \" (pr-str '~v) \") for \" (pr-str v#)) {})))\r\n      v#)))\r\n\r\n(tests\r\n  (check nil) :throws #?(:clj clojure.lang.ExceptionInfo :cljs js/Error)\r\n  (check odd? 2) :throws #?(:clj clojure.lang.ExceptionInfo :cljs js/Error)\r\n  (check odd? 1) := 1)"]}