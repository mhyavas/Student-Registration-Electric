{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticTouchEvent.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,8EAAA,CAAmG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAwC3IC,QAASA,oBAAmB,CAACC,cAAD,CAAiBC,cAAjB,CAAiCC,WAAjC,CAA8CC,iBAA9C,CAAiE,CAC3FC,gBAAiBC,CAAAA,IAAjB,CAAsB,IAAtB,CAA4BL,cAA5B,CAA4CC,cAA5C,CAA4DC,WAA5D,CAAyEC,iBAAzE,CAD2F,CAzB7F,IAAIC,iBAAmBR,OAAA,CAAQ,6EAAR,CAQnBU,OAAAA,CAAsB,CACxBC,QAAS,IADe,CAExBC,cAAe,IAFS,CAGxBC,eAAgB,IAHQ,CAIxBC,OAAQ,IAJgB,CAKxBC,QAAS,IALe;AAMxBC,QAAS,IANe,CAOxBC,SAAU,IAPc,CAQxBC,iBAd0BlB,OAAAmB,CAAQ,kFAARA,CAMF,CAqB1BX,iBAAiBY,CAAAA,YAAjB,CAA8BjB,mBAA9B,CAAmDO,MAAnD,CAEAT,OAAOC,CAAAA,OAAP,CAAiBC,mBA9C0H;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/SyntheticTouchEvent.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticTouchEvent\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticTouchEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;\n};"],
"names":["shadow$provide","global","require","module","exports","SyntheticTouchEvent","dispatchConfig","dispatchMarker","nativeEvent","nativeEventTarget","SyntheticUIEvent","call","TouchEventInterface","touches","targetTouches","changedTouches","altKey","metaKey","ctrlKey","shiftKey","getModifierState","getEventModifierState","augmentClass"]
}
