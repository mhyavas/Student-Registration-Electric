{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$Danger.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/Danger.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$Danger\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Danger\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getMarkupWrap = require('fbjs/lib/getMarkupWrap');\nvar invariant = require('fbjs/lib/invariant');\n\nvar OPEN_TAG_NAME_EXP = /^(<[^ \\/>]+)/;\nvar RESULT_INDEX_ATTR = 'data-danger-index';\n\n/**\n * Extracts the `nodeName` from a string of markup.\n *\n * NOTE: Extracting the `nodeName` does not require a regular expression match\n * because we make assumptions about React-generated markup (i.e. there are no\n * spaces surrounding the opening tag and there is at least one attribute).\n *\n * @param {string} markup String of markup.\n * @return {string} Node name of the supplied markup.\n * @see http://jsperf.com/extract-nodename\n */\nfunction getNodeName(markup) {\n  return markup.substring(1, markup.indexOf(' '));\n}\n\nvar Danger = {\n\n  /**\n   * Renders markup into an array of nodes. The markup is expected to render\n   * into a list of root nodes. Also, the length of `resultList` and\n   * `markupList` should be the same.\n   *\n   * @param {array<string>} markupList List of markup strings to render.\n   * @return {array<DOMElement>} List of rendered nodes.\n   * @internal\n   */\n  dangerouslyRenderMarkup: function (markupList) {\n    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;\n    var nodeName;\n    var markupByNodeName = {};\n    // Group markup by `nodeName` if a wrap is necessary, else by '*'.\n    for (var i = 0; i < markupList.length; i++) {\n      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;\n      nodeName = getNodeName(markupList[i]);\n      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';\n      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];\n      markupByNodeName[nodeName][i] = markupList[i];\n    }\n    var resultList = [];\n    var resultListAssignmentCount = 0;\n    for (nodeName in markupByNodeName) {\n      if (!markupByNodeName.hasOwnProperty(nodeName)) {\n        continue;\n      }\n      var markupListByNodeName = markupByNodeName[nodeName];\n\n      // This for-in loop skips the holes of the sparse array. The order of\n      // iteration should follow the order of assignment, which happens to match\n      // numerical index order, but we don't rely on that.\n      var resultIndex;\n      for (resultIndex in markupListByNodeName) {\n        if (markupListByNodeName.hasOwnProperty(resultIndex)) {\n          var markup = markupListByNodeName[resultIndex];\n\n          // Push the requested markup with an additional RESULT_INDEX_ATTR\n          // attribute.  If the markup does not start with a < character, it\n          // will be discarded below (with an appropriate console.error).\n          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,\n          // This index will be parsed back out below.\n          '$1 ' + RESULT_INDEX_ATTR + '=\"' + resultIndex + '\" ');\n        }\n      }\n\n      // Render each group of markup with similar wrapping `nodeName`.\n      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.\n      );\n\n      for (var j = 0; j < renderNodes.length; ++j) {\n        var renderNode = renderNodes[j];\n        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {\n\n          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);\n          renderNode.removeAttribute(RESULT_INDEX_ATTR);\n\n          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;\n\n          resultList[resultIndex] = renderNode;\n\n          // This should match resultList.length and markupList.length when\n          // we're done.\n          resultListAssignmentCount += 1;\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Danger: Discarding unexpected node:', renderNode);\n        }\n      }\n    }\n\n    // Although resultList was populated out of order, it should now be a dense\n    // array.\n    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;\n\n    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;\n\n    return resultList;\n  },\n\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;\n    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;\n    !(oldChild.tagName.toLowerCase() !== 'html') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;\n\n    var newChild;\n    if (typeof markup === 'string') {\n      newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n    } else {\n      newChild = markup;\n    }\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n  }\n\n};\n\nmodule.exports = Danger;\n};"],
"names":["shadow$provide","global","require","module","exports","ExecutionEnvironment","createNodesFromMarkup","emptyFunction","getMarkupWrap","invariant","OPEN_TAG_NAME_EXP","Danger","dangerouslyRenderMarkup","markupList","canUseDOM","undefined","nodeName","markupByNodeName","i","length","markup","substring","indexOf","resultList","resultListAssignmentCount","hasOwnProperty","markupListByNodeName","resultIndex","replace","renderNodes","join","j","renderNode","hasAttribute","RESULT_INDEX_ATTR","getAttribute","removeAttribute","console","error","dangerouslyReplaceNodeWithMarkup","oldChild","tagName","toLowerCase","newChild","parentNode","replaceChild"]
}
