shadow$provide.module$node_modules$react_offcanvas$node_modules$react$lib$EventPropagators=function(global,require,module,exports){function accumulateDirectionalDispatches(domID,upwards,event){warning(domID,"Dispatching id must not be null");if(upwards=getListener(domID,event.dispatchConfig.phasedRegistrationNames[upwards?PropagationPhases.bubbled:PropagationPhases.captured]))event._dispatchListeners=accumulateInto(event._dispatchListeners,upwards),event._dispatchIDs=accumulateInto(event._dispatchIDs,
domID)}function accumulateTwoPhaseDispatchesSingle(event){event&&event.dispatchConfig.phasedRegistrationNames&&EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker,accumulateDirectionalDispatches,event)}function accumulateTwoPhaseDispatchesSingleSkipTarget(event){event&&event.dispatchConfig.phasedRegistrationNames&&EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker,accumulateDirectionalDispatches,event)}function accumulateDispatches(id,
ignoredDirection,event){event&&event.dispatchConfig.registrationName&&(ignoredDirection=getListener(id,event.dispatchConfig.registrationName))&&(event._dispatchListeners=accumulateInto(event._dispatchListeners,ignoredDirection),event._dispatchIDs=accumulateInto(event._dispatchIDs,id))}function accumulateDirectDispatchesSingle(event){event&&event.dispatchConfig.registrationName&&accumulateDispatches(event.dispatchMarker,null,event)}global=require("module$node_modules$react_offcanvas$node_modules$react$lib$EventConstants");
var EventPluginHub=require("module$node_modules$react_offcanvas$node_modules$react$lib$EventPluginHub"),warning=require("module$node_modules$fbjs$lib$warning"),accumulateInto=require("module$node_modules$react_offcanvas$node_modules$react$lib$accumulateInto"),forEachAccumulated=require("module$node_modules$react_offcanvas$node_modules$react$lib$forEachAccumulated"),PropagationPhases=global.PropagationPhases,getListener=EventPluginHub.getListener;module.exports={accumulateTwoPhaseDispatches:function(events){forEachAccumulated(events,
accumulateTwoPhaseDispatchesSingle)},accumulateTwoPhaseDispatchesSkipTarget:function(events){forEachAccumulated(events,accumulateTwoPhaseDispatchesSingleSkipTarget)},accumulateDirectDispatches:function(events){forEachAccumulated(events,accumulateDirectDispatchesSingle)},accumulateEnterLeaveDispatches:function(leave,enter,fromID,toID){EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID,toID,accumulateDispatches,leave,enter)}}}
//# sourceMappingURL=module$node_modules$react_offcanvas$node_modules$react$lib$EventPropagators.js.map
