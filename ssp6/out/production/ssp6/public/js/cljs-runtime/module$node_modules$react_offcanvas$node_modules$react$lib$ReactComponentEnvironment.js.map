{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$ReactComponentEnvironment.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oFAAA,CAAyG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAcjJ,IAAIC,UAAYH,OAAA,CAAQ,wCAAR,CAAhB,CAEII,SAAW,CAAA,CAFf,CAIIC,0BAA4B,CAO9BC,yBAA0B,IAPI,CAa9BC,0BAA2B,IAbG,CAmB9BC,uBAAwB,IAnBM,CAqB9BC,UAAW,CACTC,kBAAmBA,QAAS,CAACC,WAAD,CAAc,CACtCP,QAAF,CAAqDD,SAAA,CAAU,CAAA,CAAV,CAAiB,uEAAjB,CAArD,CAAoKS,IAAAA,EACpKP,0BAA0BC,CAAAA,wBAA1B;AAAqDK,WAAYL,CAAAA,wBACjED,0BAA0BE,CAAAA,yBAA1B,CAAsDI,WAAYJ,CAAAA,yBAClEF,0BAA0BG,CAAAA,sBAA1B,CAAmDG,WAAYH,CAAAA,sBAC/DJ,SAAA,CAAW,CAAA,CAL6B,CADjC,CArBmB,CAiChCH,OAAOC,CAAAA,OAAP,CAAiBG,yBAnDgI;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/ReactComponentEnvironment.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$ReactComponentEnvironment\"] = function(global,require,module,exports) {\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentEnvironment\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable environment dependent cleanup hook. (server vs.\n   * browser etc). Example: A browser system caches DOM nodes based on component\n   * ID and must remove that cache entry when this instance is unmounted.\n   */\n  unmountIDFromEnvironment: null,\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkupByID: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function (environment) {\n      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;\n      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;\n      ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n};"],
"names":["shadow$provide","global","require","module","exports","invariant","injected","ReactComponentEnvironment","unmountIDFromEnvironment","replaceNodeWithMarkupByID","processChildrenUpdates","injection","injectEnvironment","environment","undefined"]
}
