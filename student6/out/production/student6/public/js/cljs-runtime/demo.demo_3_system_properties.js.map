{"version":3,"sources":["demo/demo_3_system_properties.cljc"],"mappings":";AAiBA","names":[],"sourcesContent":["(ns demo.demo-3-system-properties\r\n  (:require\r\n   [clojure.string :as str]\r\n   [hyperfiddle.electric :as e]\r\n   [hyperfiddle.electric-dom2 :as dom]\r\n   [hyperfiddle.electric-ui4 :as ui]))\r\n\r\n; A web view that queries the backend JVM environment and writes it to the\r\n; frontend dom, all in a single composed expression.\r\n; The p/for is stabilized with a \"react key\" for efficient DOM maintenance.\r\n\r\n#?(:clj\r\n   (defn system-properties [?s]\r\n     (->> (System/getProperties)\r\n       (filter (fn [[k v]] (str/includes? (str/lower-case (str k)) (str/lower-case (str ?s)))))\r\n       (into {}))))\r\n\r\n(e/defn App []\r\n  (e/client\r\n    (dom/h1 (dom/text \"JVM System Properties search\"))\r\n    (let [!search (atom \"\")\r\n          search (e/watch !search)]\r\n      (e/server\r\n        (let [system-props (e/offload #(sort-by key (system-properties search)))\r\n              matched-count (count system-props)]\r\n          (e/client\r\n            (dom/div (dom/props {:style {:color \"gray\"}}) (dom/text matched-count \" matches\"))\r\n            (ui/input search (e/fn [v] (reset! !search v))\r\n              (dom/props {:type \"search\" :placeholder \"java.home\"}))\r\n            (dom/table\r\n              (e/server\r\n                (e/for-by first [[k v] system-props]\r\n                  (e/client\r\n                    (dom/tr\r\n                      (dom/td (dom/text k))\r\n                      (dom/td (dom/props {:style {:white-space :nowrap}}) (dom/text v)))))))))))))\r\n"]}