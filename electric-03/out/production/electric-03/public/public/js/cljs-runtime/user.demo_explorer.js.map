{"version":3,"sources":["user/demo_explorer.cljc"],"mappings":";AAYA,oCAAA,pCAAKA;AAEL,AAcA,AAaA","names":["user.demo-explorer/unicode-folder"],"sourcesContent":["(ns user.demo-explorer\r\n  (:require [clojure.datafy :refer [datafy]]\r\n            [clojure.core.protocols :refer [nav]]\r\n            #?(:clj clojure.java.io)\r\n            [contrib.data :refer [treelister]]\r\n            [contrib.datafy-fs #?(:clj :as :cljs :as-alias) fs]\r\n            contrib.str\r\n            [hyperfiddle.electric :as e]\r\n            [hyperfiddle.electric-dom2 :as dom]\r\n            [hyperfiddle.history :as router]\r\n            [contrib.gridsheet :as gridsheet :refer [Explorer]]))\r\n\r\n(def unicode-folder \"\\uD83D\\uDCC2\") ; \ud83d\udcc2\r\n\r\n(e/defn Render-cell [m a]\r\n  (let [v (a m)]\r\n    (case a\r\n      ::fs/name (case (::fs/kind m)\r\n                  ::fs/dir (let [absolute-path (::fs/absolute-path m)]\r\n                             (e/client (router/link absolute-path (dom/text v))))\r\n                  (::fs/other ::fs/symlink ::fs/unknown-kind) (e/client (dom/text v))\r\n                  (e/client (dom/text v)))\r\n      ::fs/modified (e/client (some-> v .toLocaleDateString dom/text))\r\n      ::fs/kind (case (::fs/kind m)\r\n                  ::fs/dir (e/client (dom/text unicode-folder))\r\n                  (e/client (some-> v name dom/text)))\r\n      (e/client (dom/text (str v))))))\r\n\r\n(e/defn Dir [x]\r\n  (let [m (datafy x)\r\n        xs (nav m ::fs/children (::fs/children m))]\r\n    (e/client (dom/h1 (dom/text (e/server (::fs/absolute-path m)))))\r\n    (Explorer.\r\n      (treelister xs ::fs/children #(contrib.str/includes-str? (::fs/name %) %2))\r\n      {::dom/style {:height \"calc((20 + 1) * 24px)\"}\r\n       ::gridsheet/page-size 20\r\n       ::gridsheet/row-height 24\r\n       ::gridsheet/Format Render-cell\r\n       ::gridsheet/columns [::fs/name ::fs/modified ::fs/size ::fs/kind]\r\n       ::gridsheet/grid-template-columns \"auto 8em 5em 3em\"})))\r\n\r\n(e/defn DirectoryExplorer []\r\n  (e/client\r\n    (dom/link (dom/props {:rel :stylesheet, :href \"user/gridsheet-optional.css\"}))\r\n    (dom/div (dom/props {:class \"user-gridsheet-demo\"})\r\n      (binding [router/build-route (fn [[self state local-route] local-route']\r\n                                     ; root local links through this entrypoint\r\n                                     `[DirectoryExplorer ~state ~local-route'])]\r\n        (e/server\r\n          (let [[self s route] (e/client router/route)\r\n                fs-path (or route (fs/absolute-path \"./\"))]\r\n            (e/client\r\n              (router/router 1 ; focus state slot, todo: fix IndexOutOfBounds exception\r\n                (e/server\r\n                  (Dir. (clojure.java.io/file fs-path)))))))))))\r\n\r\n; Improvements\r\n; Native search\r\n; lazy folding/unfolding directories (no need for pagination)\r\n; forms (currently table hardcoded with recursive pull)\r\n"]}