{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$CSSPropertyOperations.js",
"lineCount":6,
"mappings":"AAAAA,cAAA,CAAA,gFAAA,CAAqG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAe7I,IAAIC,YAAcH,OAAA,CAAQ,wEAAR,CACdI,QAAAA,CAAuBJ,OAAA,CAAQ,mDAAR,CACvBK,OAAAA,CAAYL,OAAA,CAAQ,sEAAR,CAEhB,KAAIM,kBAAoBN,OAAA,CAAQ,gDAAR,CAAxB,CACIO,oBAAsBP,OAAA,CAAQ,gFAAR,CAD1B;AAEIQ,mBAAqBR,OAAA,CAAQ,iDAAR,CAFzB,CAGIS,kBAAoBT,OAAA,CAAQ,gDAAR,CAHxB,CAIIU,QAAUV,OAAA,CAAQ,sCAAR,CAJd,CAMIW,iBAAmBF,iBAAA,CAAkB,QAAS,CAACG,SAAD,CAAY,CAC5D,MAAOJ,mBAAA,CAAmBI,SAAnB,CADqD,CAAvC,CANvB,CAUIC,wBAA0B,CAAA,CAV9B,CAWIC,mBAAqB,UACzB,IAAIV,OAAqBW,CAAAA,SAAzB,CAAoC,CAC9BC,OAAAA,CAAYC,QAASC,CAAAA,aAAT,CAAuB,KAAvB,CAA8BC,CAAAA,KAC9C,IAAI,CAEFH,OAAUI,CAAAA,IAAV,CAAiB,EAFf,CAGF,MAAOC,CAAP,CAAU,CACVR,uBAAA,CAA0B,CAAA,CADhB,CAIoCS,IAAAA,EAAhD,GAAIL,QAASM,CAAAA,eAAgBJ,CAAAA,KAAMK,CAAAA,QAAnC;CACEV,kBADF,CACuB,YADvB,CATkC,CAgBlC,IAAIW,4BAA8B,wBAAlC,CAGIC,kCAAoC,OAHxC,CAKIC,iBAAmB,EALvB,CAMIC,kBAAoB,EANxB,CAuCIC,eAAiBA,QAAS,CAACC,IAAD,CAAOC,KAAP,CAAc,CAClB,CAAC,CAAzB,CAAID,IAAKE,CAAAA,OAAL,CAAa,GAAb,CAAJ,CA/BIL,gBAAiBM,CAAAA,cAAjB,CAgCsBH,IAhCtB,CA+BJ,EA/B6CH,gBAAA,CAgCnBG,IAhCmB,CA+B7C,GA3BAH,gBAAA,CA4B0BG,IA5B1B,CACwC,CADf,CAAA,CACe,CAAApB,OAAA,CAAQ,CAAA,CAAR,CAAe,iDAAf,CA2BdoB,IA3Bc,CAAwExB,iBAAA,CA2BtFwB,IA3BsF,CAAxE,CA0BxC,EAEWL,2BAA4BS,CAAAA,IAA5B,CAAiCJ,IAAjC,CAAJ,CAxBHH,gBAAiBM,CAAAA,cAAjB,CAyBuBH,IAzBvB,CAwBG,EAxBsCH,gBAAA,CAyBlBG,IAzBkB,CAwBtC;CApBPH,gBAAA,CAqB2BG,IArB3B,CACwC,CADf,CAAA,CACe,CAAApB,OAAA,CAAQ,CAAA,CAAR,CAAe,iEAAf,CAoBboB,IApBa,CAoBbA,IApB0GK,CAAAA,MAAL,CAAY,CAAZ,CAAeC,CAAAA,WAAf,EAAxF,CAoBbN,IApByIO,CAAAA,KAAL,CAAW,CAAX,CAAvH,CAmBjC,EAEIX,iCAAkCQ,CAAAA,IAAlC,CAAuCH,KAAvC,CAFJ,GAfHH,iBAAkBK,CAAAA,cAAlB,CAkBgCF,KAlBhC,CAeG,EAfwCH,iBAAA,CAkBXG,KAlBW,CAexC,GAXPH,iBAAA,CAcoCG,KAdpC,CACwC,CADb,CAAA,CACa,CAAArB,OAAA,CAAQ,CAAA,CAAR,CAAe,6EAAf,CAaVoB,IAbU,CAaJC,KAbmHO,CAAAA,OAAN,CAAcZ,iCAAd,CAAiD,EAAjD,CAAzG,CAUjC,EAHmC,CAc1Ca,QAAAA,CAAwB,CAc1BC,sBAAuBA,QAAS,CAACC,MAAD,CAAS,CACvC,IAAIC;AAAa,EAAjB,CACS9B,SAAT,KAASA,SAAT,GAAsB6B,OAAtB,CACE,GAAKA,MAAOR,CAAAA,cAAP,CAAsBrB,SAAtB,CAAL,CAAA,CAGA,IAAI+B,WAAaF,MAAA,CAAO7B,SAAP,CAEfiB,eAAA,CAAejB,SAAf,CAA0B+B,UAA1B,CAEgB,KAAlB,EAAIA,UAAJ,GACED,UACA,EADc/B,gBAAA,CAAiBC,SAAjB,CACd,CAD4C,GAC5C,CAAA8B,UAAA,EAAcnC,mBAAA,CAAoBK,SAApB,CAA+B+B,UAA/B,CAAd,CAA2D,GAF7D,CAPA,CAYF,MAAOD,WAAP,EAAqB,IAfkB,CAdf,CAuC1BE,kBAAmBA,QAAS,CAACC,IAAD,CAAOJ,MAAP,CAAe,CACrCtB,IAAAA,CAAQ0B,IAAK1B,CAAAA,KACjB,KAAKP,IAAIA,SAAT,GAAsB6B,OAAtB,CACE,GAAKA,MAAOR,CAAAA,cAAP,CAAsBrB,SAAtB,CAAL,CAAA,CAIEiB,cAAA,CAAejB,SAAf,CAA0B6B,MAAA,CAAO7B,SAAP,CAA1B,CAEF,KAAI+B,WAAapC,mBAAA,CAAoBK,SAApB;AAA+B6B,MAAA,CAAO7B,SAAP,CAA/B,CACC,QAAlB,GAAIA,SAAJ,GACEA,SADF,CACcE,kBADd,CAGA,IAAI6B,UAAJ,CACExB,IAAA,CAAMP,SAAN,CAAA,CAAmB+B,UADrB,KAIE,IADIG,UACJ,CADgBjC,uBAChB,EAD2CV,WAAY4C,CAAAA,2BAAZ,CAAwCnC,SAAxC,CAC3C,CAGE,IAAKoC,IAAIA,mBAAT,GAAgCF,WAAhC,CACE3B,IAAA,CAAM6B,mBAAN,CAAA,CAA6B,EAJjC,KAOE7B,KAAA,CAAMP,SAAN,CAAA,CAAmB,EArBvB,CAHuC,CAvCjB,CAuE5BP,OAAU4C,CAAAA,cAAV,CAAyBV,OAAzB,CAAgD,uBAAhD,CAAyE,CACvEK,kBAAmB,mBADoD,CAAzE,CAIA3C,OAAOC,CAAAA,OAAP,CAAiBqC,OA/K4H;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/CSSPropertyOperations.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$CSSPropertyOperations\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactPerf = require('./ReactPerf');\n\nvar camelizeStyleName = require('fbjs/lib/camelizeStyleName');\nvar dangerousStyleValue = require('./dangerousStyleValue');\nvar hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');\nvar memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');\nvar warning = require('fbjs/lib/warning');\n\nvar processStyleName = memoizeStringOnly(function (styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar hasShorthandPropertyBug = false;\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  var tempStyle = document.createElement('div').style;\n  try {\n    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n    tempStyle.font = '';\n  } catch (e) {\n    hasShorthandPropertyBug = true;\n  }\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n\n  var warnHyphenatedStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;\n  };\n\n  var warnBadVendoredStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon. ' + 'Try \"%s: %s\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   */\n  var warnValidStyle = function (name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @return {?string}\n   */\n  createMarkupForStyles: function (styles) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styleValue);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   */\n  setValueForStyles: function (node, styles) {\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styles[styleName]);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName]);\n      if (styleName === 'float') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {\n  setValueForStyles: 'setValueForStyles'\n});\n\nmodule.exports = CSSPropertyOperations;\n};"],
"names":["shadow$provide","global","require","module","exports","CSSProperty","ExecutionEnvironment","ReactPerf","camelizeStyleName","dangerousStyleValue","hyphenateStyleName","memoizeStringOnly","warning","processStyleName","styleName","hasShorthandPropertyBug","styleFloatAccessor","canUseDOM","tempStyle","document","createElement","style","font","e","undefined","documentElement","cssFloat","badVendoredStyleNamePattern","badStyleValueWithSemicolonPattern","warnedStyleNames","warnedStyleValues","warnValidStyle","name","value","indexOf","hasOwnProperty","test","charAt","toUpperCase","slice","replace","CSSPropertyOperations","createMarkupForStyles","styles","serialized","styleValue","setValueForStyles","node","expansion","shorthandPropertyExpansions","individualStyleName","measureMethods"]
}
