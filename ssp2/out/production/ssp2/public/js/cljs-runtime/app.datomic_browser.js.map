{"version":3,"sources":["app/datomic_browser.cljc"],"mappings":";;;;AAkBA,AACA,AAEA,AAIA,AAKA,AAYA,AAsBA,AAAKA,mCAAa,wEAAA,2CAAA,4DAAA,2CAAA,AAAA,1NAACC,gDAAQC,mPAC6BC;AAKxD,AAiBA","names":["app.datomic-browser/read-edn-str","cljs.core.partial","clojure.edn/read-string","app.datomic_browser.goog$module$goog$math$Long.fromString"],"sourcesContent":["(ns app.datomic-browser\r\n  \"must have datomic on classpath, and must load 'test ns\"\r\n  #?(:cljs (:import [goog.math Long])) ; only this require syntax passes shadow in this file, why?\r\n  (:require clojure.edn\r\n            contrib.ednish\r\n            app.customer\r\n            app.supplier\r\n            [contrib.str :refer [any-matches?]]\r\n            [hyperfiddle.electric-ui4 :as ui4]\r\n            #?(:clj [contrib.datomic-contrib :as dx])\r\n            #?(:cljs contrib.datomic-cloud-contrib)\r\n            [contrib.gridsheet :as gridsheet :refer [Explorer]]\r\n            [hyperfiddle.electric :as e]\r\n            [hyperfiddle.electric-dom2 :as dom]\r\n            [hyperfiddle.history :as history]\r\n            [missionary.core :as m]\r\n            #?(:clj [datomic.client.api :as dt])))\r\n\r\n(e/def conn)\r\n(e/def db)\r\n\r\n(e/defn CreateSupplier []\r\n        (e/client\r\n          (dom/text \"Create Supplier Page\")))\r\n\r\n(e/defn CreateCustomer []\r\n        (e/client\r\n          (dom/text \"Create Customer Page\")))\r\n\r\n\r\n(e/defn MainPage []\r\n        (e/client\r\n          (dom/div\r\n            (history/link [::customer] (dom/text \"Customer Side\")))\r\n          (dom/div\r\n            (history/link [::supplier] (dom/text \"Supplier Side\")))\r\n          (dom/div\r\n            (history/link [::create-supplier] (dom/text \"Create Supplier\")))\r\n          (dom/div\r\n            (history/link [::create-customer] (dom/text \"Create Customer\")))))\r\n\r\n\r\n(e/defn Page [[page x]]\r\n        (e/server\r\n          (binding [conn @(requiring-resolve 'user/datomic-conn)]\r\n            (binding [db (dt/db conn)]\r\n              (e/client\r\n                (dom/h1 (dom/text \"Software Sourcing Platform\"))\r\n                (dom/link (dom/props {:rel :stylesheet, :href \"gridsheet-optional.css\"}))\r\n                (dom/div (dom/text \"Nav: \")\r\n                         (history/link [::summary] (dom/text \"home\")) (dom/text \" \"))))))\r\n\r\n\r\n\r\n\r\n\r\n    (case page\r\n      ::summary (history/router 1 (e/server (MainPage.)))\r\n      ::customer (history/router 1 (e/server (app.customer/CustomerPage.)))\r\n      ::supplier (history/router 1 (e/server (app.supplier/SupplierPage.)))\r\n      ::create-supplier (history/router 1 (e/server (CreateSupplier.)))\r\n      ::create-customer (history/router 1 (e/server (CreateCustomer.)))\r\n      (e/client (dom/text \"no matching route: \" (pr-str page)))))\r\n\r\n(def read-edn-str (partial clojure.edn/read-string\r\n                    {:readers #?(:cljs {'goog.math/Long goog.math.Long/fromString} ; datomic cloud long ids\r\n                                 :clj {})}))\r\n\r\n\r\n\r\n(e/defn DatomicBrowser []\r\n        (e/client\r\n          (binding [dom/node js/document.body\r\n                    history/encode contrib.ednish/encode-uri\r\n                    history/decode #(or (contrib.ednish/decode-path % read-edn-str) [::summary])]\r\n\r\n            (history/router (history/HTML5-History.)\r\n                            (dom/pre (dom/text (contrib.str/pprint-str history/route)))\r\n                            (e/server\r\n                              (binding [conn @(requiring-resolve 'user/datomic-conn)]\r\n                                (binding [db (dt/db conn)]\r\n                                  (e/client (Page. history/route)))))))))\r\n\r\n\r\n\r\n\r\n\r\n(comment\r\n\r\n\r\n  ;end\r\n  ,)"]}