{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$ReactClass.js",
"lineCount":22,
"mappings":"AAAAA,cAAA,CAAA,qEAAA,CAA0F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyDlIC,QAASA,aAAY,EAAG,CACjBC,cAAL,GACEA,cACwC,CADvB,CAAA,CACuB,CAAAC,OAAA,CAAQ,CAAA,CAAR,CAAe,kGAAf,CAF1C,CADsB,CAmTxBC,QAASA,gBAAe,CAACC,WAAD,CAAcC,OAAd,CAAuBC,QAAvB,CAAiC,CACvD,IAAKC,IAAIA,QAAT,GAAqBF,QAArB,CACMA,OAAQG,CAAAA,cAAR,CAAuBD,QAAvB,CAAJ,EAG0CL,OAAA,CAAqC,UAArC,GAAQ,MAAOG,QAAA,CAAQE,QAAR,CAAf,CAAiD,mFAAjD;AAA2IH,WAAYK,CAAAA,WAAvJ,EAAsK,YAAtK,CAAoLC,0BAAA,CAA2BJ,QAA3B,CAApL,CAA0NC,QAA1N,CALW,CA4BzDI,QAASA,qBAAoB,CAACP,WAAD,CAAcQ,IAAd,CAAoB,CAC/C,GAAKA,IAAL,CAAA,CAIkB,UAAlB,GAAE,MAAOA,KAAT,CAAwEC,SAAA,CAAU,CAAA,CAAV,CAAiB,wGAAjB,CAAxE,CAA8NC,IAAAA,EAC5NC,aAAaC,CAAAA,cAAb,CAA4BJ,IAA5B,CAAF,CAA8EC,SAAA,CAAU,CAAA,CAAV,CAAiB,kGAAjB,CAA9E,CAA8NC,IAAAA,EAE9N,KAAIG,MAAQb,WAAYc,CAAAA,SAKpBN,KAAKJ,CAAAA,cAAL,CAAoBW,UAApB,CAAJ;AACEC,kBAAmBC,CAAAA,MAAnB,CAA0BjB,WAA1B,CAAuCQ,IAAKS,CAAAA,MAA5C,CAGF,KAAKC,IAAIA,IAAT,GAAiBV,KAAjB,CACE,GAAKA,IAAKJ,CAAAA,cAAL,CAAoBc,IAApB,CAAL,EAIIA,IAJJ,GAIaH,UAJb,CAIA,CAKA,IAAII,SAAWX,IAAA,CAAKU,IAAL,CAAf,CACuBL,eAAAA,KADvB,CAC8BK,cAAAA,IAD9B,CA5CEE,WAAaC,mBAAoBjB,CAAAA,cAApB,CAAmCc,aAAnC,CAAA,CAA2CG,mBAAA,CAAoBH,aAApB,CAA3C,CAAuE,IAGpFI,gBAAgBlB,CAAAA,cAAhB,CAA+Bc,aAA/B,CAAJ,GACIE,UAAF,GAAiBG,UAAWC,CAAAA,aAA5B,CAAqFf,SAAA,CAAU,CAAA,CAAV,CAAiB,0JAAjB;AAAuLS,aAAvL,CAArF,CAAuSR,IAAAA,EADzS,CAKIG,eAAMT,CAAAA,cAAN,CAAqBc,aAArB,CAAJ,GACIE,UAAF,GAAiBG,UAAWE,CAAAA,WAA5B,EAA2CL,UAA3C,GAA0DG,UAAWG,CAAAA,kBAArE,CAAmIjB,SAAA,CAAU,CAAA,CAAV,CAAiB,+HAAjB,CAA4JS,aAA5J,CAAnI,CAA0TR,IAAAA,EAD5T,CAuCE,IAAIM,kBAAmBZ,CAAAA,cAAnB,CAAkCc,IAAlC,CAAJ,CACEF,kBAAA,CAAmBE,IAAnB,CAAA,CAAyBlB,WAAzB,CAAsCmB,QAAtC,CADF,KAOMQ,eAKJ,CALyBN,mBAAoBjB,CAAAA,cAApB,CAAmCc,IAAnC,CAKzB,CAJIU,aAIJ,CAJuBf,KAAMT,CAAAA,cAAN,CAAqBc,IAArB,CAIvB;AAHqC,UAGrC,GAHiB,MAAOC,SAGxB,EAFoCQ,cAEpC,EAF2DC,aAE3D,EAFiG,CAAA,CAEjG,GAF+EpB,IAAKqB,CAAAA,QAEpF,CAOMD,aAAJ,EACMR,aAOJ,CAPiBC,mBAAA,CAAoBH,IAApB,CAOjB,CAJES,CAAAA,cAAF,EAAyBP,aAAzB,GAAwCG,UAAWG,CAAAA,kBAAnD,EAAyEN,aAAzE,GAAwFG,UAAWE,CAAAA,WAAnG,CAA2JhB,SAAA,CAAU,CAAA,CAAV,CAAiB,kFAAjB,CAA0GW,aAA1G,CAAsHF,IAAtH,CAA3J,CAA4SR,IAAAA,EAI5S,CAAIU,aAAJ,GAAmBG,UAAWG,CAAAA,kBAA9B,CACEb,KAAA,CAAMK,IAAN,CADF,CACgBY,0BAAA,CAA2BjB,KAAA,CAAMK,IAAN,CAA3B,CAAwCC,QAAxC,CADhB,CAEWC,aAFX,GAE0BG,UAAWE,CAAAA,WAFrC;CAGEZ,KAAA,CAAMK,IAAN,CAHF,CAGgBa,qBAAA,CAAsBlB,KAAA,CAAMK,IAAN,CAAtB,CAAmCC,QAAnC,CAHhB,CARF,GAcEN,KAAA,CAAMK,IAAN,CAIE,CAJYC,QAIZ,CAAwB,UAAxB,GAAI,MAAOA,SAAX,EAAsCX,IAAKH,CAAAA,WAA3C,GACEQ,KAAA,CAAMK,IAAN,CAAYb,CAAAA,WADd,CAC4BG,IAAKH,CAAAA,WADjC,CAC+C,GAD/C,CACqDa,IADrD,CAlBJ,CAPF,EACOL,KAAMmB,CAAAA,kBAIX,GAHEnB,KAAMmB,CAAAA,kBAGR,CAH6B,EAG7B,EADAnB,KAAMmB,CAAAA,kBAAN,CAAyBd,IAAzB,CACA,CADiCC,QACjC,CAAAN,KAAA,CAAMK,IAAN,CAAA,CAAcC,QALhB,CApBF,CArBF,CAD+C,CAuGjDc,QAASA,6BAA4B,CAACC,GAAD,CAAMC,GAAN,CAAW,CAC5CD,GAAF,EAASC,GAAT,EAA+B,QAA/B,GAAgB,MAAOD,IAAvB,EAA0D,QAA1D,GAA2C,MAAOC,IAAlD,CAAiNzB,IAAAA,EAAjN,CAA8GD,SAAA,CAAU,CAAA,CAAV,CAAiB,2DAAjB,CAE9G,KAAK2B,IAAIA,GAAT,GAAgBD,IAAhB,CACMA,GAAI/B,CAAAA,cAAJ,CAAmBgC,GAAnB,CAAJ;CACiB1B,IAAAA,EAAf,GAAEwB,GAAA,CAAIE,GAAJ,CAAF,CAAoE3B,SAAA,CAAU,CAAA,CAAV,CAAiB,wPAAjB,CAA+R2B,GAA/R,CAApE,CAA6X1B,IAAAA,EAC7X,CAAAwB,GAAA,CAAIE,GAAJ,CAAA,CAAWD,GAAA,CAAIC,GAAJ,CAFb,CAKF,OAAOF,IATuC,CAoBhDJ,QAASA,2BAA0B,CAACI,GAAD,CAAMC,GAAN,CAAW,CAC5C,MAAOE,SAAqB,EAAG,CAC7B,IAAIC,EAAIJ,GAAIK,CAAAA,KAAJ,CAAU,IAAV,CAAgBC,SAAhB,CAAR,CACIC,EAAIN,GAAII,CAAAA,KAAJ,CAAU,IAAV,CAAgBC,SAAhB,CACR,IAAS,IAAT,EAAIF,CAAJ,CACE,MAAOG,EACF,IAAS,IAAT,EAAIA,CAAJ,CACL,MAAOH,EAET,KAAII,EAAI,EACRT,6BAAA,CAA6BS,CAA7B;AAAgCJ,CAAhC,CACAL,6BAAA,CAA6BS,CAA7B,CAAgCD,CAAhC,CACA,OAAOC,EAXsB,CADa,CAwB9CX,QAASA,sBAAqB,CAACG,GAAD,CAAMC,GAAN,CAAW,CACvC,MAAOQ,SAAwB,EAAG,CAChCT,GAAIK,CAAAA,KAAJ,CAAU,IAAV,CAAgBC,SAAhB,CACAL,IAAII,CAAAA,KAAJ,CAAU,IAAV,CAAgBC,SAAhB,CAFgC,CADK,CAczCI,QAASA,mBAAkB,CAACC,SAAD,CAAYC,MAAZ,CAAoB,CAC7C,IAAIC,YAAcD,MAAOE,CAAAA,IAAP,CAAYH,SAAZ,CAEhBE,YAAYE,CAAAA,mBAAZ,CAAkCJ,SAClCE,YAAYG,CAAAA,kBAAZ,CAAiCJ,MACjCC,YAAYI,CAAAA,qBAAZ,CAAoC,IACpC,KAAIC,cAAgBP,SAAUQ,CAAAA,WAAYhD,CAAAA,WAA1C,CACIiD,MAAQP,WAAYC,CAAAA,IAExBD,YAAYC,CAAAA,IAAZ,CAAmBO,QAAS,CAACC,OAAD,CAAU,CACpC,IADoC,IAC3BC,KAAOjB,SAAUkB,CAAAA,MADU;AACFC,KAAOC,KAAA,CAAa,CAAP,CAAAH,IAAA,CAAWA,IAAX,CAAkB,CAAlB,CAAsB,CAA5B,CADL,CACqCI,KAAO,CAAhF,CAAmFA,IAAnF,CAA0FJ,IAA1F,CAAgGI,IAAA,EAAhG,CACEF,IAAA,CAAKE,IAAL,CAAY,CAAZ,CAAA,CAAiBrB,SAAA,CAAUqB,IAAV,CAMnB,IAAIL,OAAJ,GAAgBX,SAAhB,EAAyC,IAAzC,GAA6BW,OAA7B,CAC0C1D,OAAA,CAAQ,CAAA,CAAR,CAAe,qFAAf,CAA2GsD,aAA3G,CAD1C,KAEO,IAAI,CAACO,IAAKD,CAAAA,MAAV,CAEL,MADwC5D,QAAA,CAAQ,CAAA,CAAR,CAAe,0KAAf,CAAqMsD,aAArM,CACjCL,CAAAA,WAELe,KAAAA,CAAgBR,KAAMf,CAAAA,KAAN,CAAYQ,WAAZ,CAAyBP,SAAzB,CACpBsB;IAAcb,CAAAA,mBAAd,CAAoCJ,SACpCiB,KAAcZ,CAAAA,kBAAd,CAAmCJ,MACnCgB,KAAcX,CAAAA,qBAAd,CAAsCQ,IACtC,OAAOG,KAlB6B,CAsBxC,OAAOf,YA/BsC,CA3hB3CgB,MAAAA,CAAiBtE,OAAA,CAAQ,2EAAR,CACrB,KAAIkB,aAAelB,OAAA,CAAQ,yEAAR,CAAnB,CACIuE,uBAAyBvE,OAAA,CAAQ,mFAAR,CAD7B,CAEIa,2BAA6Bb,OAAA,CAAQ,uFAAR,CAFjC;AAGIwE,qBAAuBxE,OAAA,CAAQ,iFAAR,CAH3B,CAKIyE,OAASzE,OAAA,CAAQ,0EAAR,CALb,CAMI0E,YAAc1E,OAAA,CAAQ,0CAAR,CANlB,CAOIgB,UAAYhB,OAAA,CAAQ,wCAAR,CACZ2E,QAAAA,CAAY3E,OAAA,CAAQ,wCAAR,CAChB,KAAI4E,MAAQ5E,OAAA,CAAQ,oCAAR,CAAZ,CACIK,QAAUL,OAAA,CAAQ,sCAAR,CADd,CAGIsB;AAAasD,KAAA,CAAM,CAAEpD,OAAQ,IAAV,CAAN,CAHjB,CAQIM,WAAa6C,OAAA,CAAU,CAIzBE,YAAa,IAJY,CASzB7C,YAAa,IATY,CAazBD,cAAe,IAbU,CAmBzBE,mBAAoB,IAnBK,CAAV,CARjB,CA8BI6C,eAAiB,EA9BrB,CAgCI1E,eAAiB,CAAA,CAhCrB,CA8DIwB,oBAAsB,CAQxBJ,OAAQM,UAAWE,CAAAA,WARK,CAiBxB+C,QAASjD,UAAWE,CAAAA,WAjBI,CAyBxBgD,UAAWlD,UAAWE,CAAAA,WAzBE,CAiCxBiD,aAAcnD,UAAWE,CAAAA,WAjCD,CAyCxBkD,kBAAmBpD,UAAWE,CAAAA,WAzCN,CAuDxBmD,gBAAiBrD,UAAWG,CAAAA,kBAvDJ,CAuExBmD,gBAAiBtD,UAAWG,CAAAA,kBAvEJ,CA6ExBoD,gBAAiBvD,UAAWG,CAAAA,kBA7EJ,CA+FxBqD,OAAQxD,UAAW+C,CAAAA,WA/FK;AA0GxBU,mBAAoBzD,UAAWE,CAAAA,WA1GP,CAsHxBwD,kBAAmB1D,UAAWE,CAAAA,WAtHN,CA2IxByD,0BAA2B3D,UAAWE,CAAAA,WA3Id,CAiKxB0D,sBAAuB5D,UAAW+C,CAAAA,WAjKV,CAkLxBc,oBAAqB7D,UAAWE,CAAAA,WAlLR,CAgMxB4D,mBAAoB9D,UAAWE,CAAAA,WAhMP,CA6MxB6D,qBAAsB/D,UAAWE,CAAAA,WA7MT,CA2NxB8D,gBAAiBhE,UAAWC,CAAAA,aA3NJ,CA9D1B,CAsSIR,mBAAqB,CACvBX,YAAaA,QAAS,CAACL,WAAD,CAAcK,WAAd,CAA2B,CAC/CL,WAAYK,CAAAA,WAAZ,CAA0BA,WADqB,CAD1B,CAIvBY,OAAQA,QAAS,CAACjB,WAAD,CAAciB,MAAd,CAAsB,CACrC,GAAIA,MAAJ,CACE,IAAK,IAAIuE;AAAI,CAAb,CAAgBA,CAAhB,CAAoBvE,MAAOyC,CAAAA,MAA3B,CAAmC8B,CAAA,EAAnC,CACEjF,oBAAA,CAAqBP,WAArB,CAAkCiB,MAAA,CAAOuE,CAAP,CAAlC,CAHiC,CAJhB,CAWvBb,kBAAmBA,QAAS,CAAC3E,WAAD,CAAc2E,iBAAd,CAAiC,CAEzD5E,eAAA,CAAgBC,WAAhB,CAA6B2E,iBAA7B,CAAgDX,sBAAuByB,CAAAA,YAAvE,CAEFzF,YAAY2E,CAAAA,iBAAZ,CAAgCT,MAAA,CAAO,EAAP,CAAWlE,WAAY2E,CAAAA,iBAAvB,CAA0CA,iBAA1C,CAJ2B,CAXtC,CAiBvBD,aAAcA,QAAS,CAAC1E,WAAD,CAAc0E,YAAd,CAA4B,CAE/C3E,eAAA,CAAgBC,WAAhB,CAA6B0E,YAA7B,CAA2CV,sBAAuB0B,CAAAA,OAAlE,CAEF1F,YAAY0E,CAAAA,YAAZ,CAA2BR,MAAA,CAAO,EAAP,CAAWlE,WAAY0E,CAAAA,YAAvB,CAAqCA,YAArC,CAJsB,CAjB5B,CA2BvBE,gBAAiBA,QAAS,CAAC5E,WAAD;AAAc4E,eAAd,CAA+B,CAErD5E,WAAY4E,CAAAA,eAAZ,CADE5E,WAAY4E,CAAAA,eAAhB,CACgC9C,0BAAA,CAA2B9B,WAAY4E,CAAAA,eAAvC,CAAwDA,eAAxD,CADhC,CAGgCA,eAJuB,CA3BlC,CAkCvBH,UAAWA,QAAS,CAACzE,WAAD,CAAcyE,SAAd,CAAyB,CAEzC1E,eAAA,CAAgBC,WAAhB,CAA6ByE,SAA7B,CAAwCT,sBAAuB2B,CAAAA,IAA/D,CAEF3F,YAAYyE,CAAAA,SAAZ,CAAwBP,MAAA,CAAO,EAAP,CAAWlE,WAAYyE,CAAAA,SAAvB,CAAkCA,SAAlC,CAJmB,CAlCtB,CAwCvBD,QAASA,QAAS,CAACxE,WAAD,CAAcwE,OAAd,CAAuB,CAgHzC,GA/G0CA,OA+G1C,CAGA,IAAKtD,IAAIA,IAAT,GAlH0CsD,QAkH1C,CAA0B,CACxB,IAAIrD,SAnHoCqD,OAmHzB,CAAQtD,IAAR,CAnHyBsD,QAoH3BpE,CAAAA,cAAR,CAAuBc,IAAvB,CAAL,GAIkBA,IAClB,GAD0BF,mBAC1B,CAAuDP,SAAA,CAAU,CAAA,CAAV;AAAiB,yMAAjB,CAA2OS,IAA3O,CAAvD,CAA6TR,IAAAA,EAI7T,CAFmBQ,IACnB,GA5H2BlB,YA4H3B,CAAwDS,SAAA,CAAU,CAAA,CAAV,CAAiB,sHAAjB,CAAmJS,IAAnJ,CAAxD,CAAsOR,IAAAA,EACtO,CA7H2BV,WA6H3B,CAAYkB,IAAZ,CAAA,CAAoBC,QATpB,CAFwB,CAnHe,CAxClB,CA2CvBU,SAAUA,QAAS,EAAG,EA3CC,CAtSzB,CAqkBIP,gBAAkB,CAMpBsE,aAAcA,QAAS,CAACC,QAAD,CAAWC,QAAX,CAAqB,CAC1C,IAAKC,CAAAA,OAAQC,CAAAA,mBAAb,CAAiC,IAAjC;AAAuCH,QAAvC,CACIC,SAAJ,EACE,IAAKC,CAAAA,OAAQE,CAAAA,eAAb,CAA6B,IAA7B,CAAmCH,QAAnC,CAHwC,CANxB,CAmBpBI,UAAWA,QAAS,EAAG,CACrB,MAAO,KAAKH,CAAAA,OAAQG,CAAAA,SAAb,CAAuB,IAAvB,CADc,CAnBH,CAgCpBC,SAAUA,QAAS,CAACC,YAAD,CAAeN,QAAf,CAAyB,CAExClG,YAAA,EAEF,KAAKmG,CAAAA,OAAQM,CAAAA,eAAb,CAA6B,IAA7B,CAAmCD,YAAnC,CACIN,SAAJ,EACE,IAAKC,CAAAA,OAAQE,CAAAA,eAAb,CAA6B,IAA7B,CAAmCH,QAAnC,CANwC,CAhCxB,CAmDpBQ,aAAcA,QAAS,CAACC,QAAD,CAAWT,QAAX,CAAqB,CAExClG,YAAA,EAEF,KAAKmG,CAAAA,OAAQS,CAAAA,mBAAb,CAAiC,IAAjC,CAAuCD,QAAvC,CACIT,SAAJ,EACE,IAAKC,CAAAA,OAAQE,CAAAA,eAAb,CAA6B,IAA7B,CAAmCH,QAAnC,CANwC,CAnDxB,CArkBtB,CAmoBIW,oBAAsBA,QAAS,EAAG,EACtCvC,OAAA,CAAOuC,mBAAoB3F,CAAAA,SAA3B;AAAsCiD,MAAejD,CAAAA,SAArD,CAAgEQ,eAAhE,CAuGA5B,OAAOC,CAAAA,OAAP,CAhGiB+G,CASfC,YAAaA,QAAS,CAACnG,IAAD,CAAO,CAC3B,IAAIR,YAAcA,QAAS,CAAC4G,KAAD,CAAQlB,OAAR,CAAiBK,OAAjB,CAA0B,CAKTjG,OAAA,CAAQ,IAAR,WAAwBE,YAAxB,CAAqC,uHAArC,CAI1C,IAAI,IAAKgC,CAAAA,kBAAT,CArGJ,IAAK6E,IAAIA,WAAT,GAsG0BhE,KAtGQb,CAAAA,kBAAlC,CAsG0Ba,IArGVb,CAAAA,kBAAmB5B,CAAAA,cAA7B,CAA4CyG,WAA5C,CAAJ,GAqGwBhE,IAnGtB,CAAUgE,WAAV,CAFF,CAE2BjE,kBAAA,CAmGHC,IAnGG,CAmGHA,IApGCb,CAAAA,kBAAVc,CAA6B+D,WAA7B/D,CACY,CAF3B,CAwGE,KAAK8D,CAAAA,KAAL;AAAaA,KACb,KAAKlB,CAAAA,OAAL,CAAeA,OACf,KAAKoB,CAAAA,IAAL,CAAY3C,WACZ,KAAK4B,CAAAA,OAAL,CAAeA,OAAf,EAA0B9B,oBAE1B,KAAK8C,CAAAA,KAAL,CAAa,IAKTC,MAAAA,CAAe,IAAKnC,CAAAA,eAAL,CAAuB,IAAKA,CAAAA,eAAL,EAAvB,CAAgD,IAGrC,YAA5B,GAAI,MAAOmC,MAAX,EAA2C,IAAKnC,CAAAA,eAAgBoC,CAAAA,eAAhE,GAGED,KAHF,CAGiB,IAHjB,CAMwB,SAA1B,GAAE,MAAOA,MAAT,EAAuCpD,KAAMsD,CAAAA,OAAN,CAAcF,KAAd,CAAvC,CAA8GvG,SAAA,CAAU,CAAA,CAAV,CAAiB,qDAAjB,CAAwET,WAAYK,CAAAA,WAApF,EAAmG,yBAAnG,CAA9G,CAAiQK,IAAAA,EAEjQ,KAAKqG,CAAAA,KAAL,CAAaC,KAlCsC,CAoCrDhH,YAAYc,CAAAA,SAAZ,CAAwB,IAAI2F,mBAC5BzG,YAAYc,CAAAA,SAAUuC,CAAAA,WAAtB;AAAoCrD,WAEpCuE,eAAe4C,CAAAA,OAAf,CAAuB5G,oBAAqByC,CAAAA,IAArB,CAA0B,IAA1B,CAAgChD,WAAhC,CAAvB,CAEAO,qBAAA,CAAqBP,WAArB,CAAkCQ,IAAlC,CAGIR,YAAY4E,CAAAA,eAAhB,GACE5E,WAAYoH,CAAAA,YADd,CAC6BpH,WAAY4E,CAAAA,eAAZ,EAD7B,CASM5E,YAAY4E,CAAAA,eAAhB,GACE5E,WAAY4E,CAAAA,eAAgByC,CAAAA,oBAD9B,CACqD,EADrD,CAGIrH,YAAYc,CAAAA,SAAU+D,CAAAA,eAA1B,GACE7E,WAAYc,CAAAA,SAAU+D,CAAAA,eAAgBwC,CAAAA,oBADxC,CAC+D,EAD/D,CAKDrH,YAAYc,CAAAA,SAAUiE,CAAAA,MAAvB,CAAyLrE,IAAAA,EAAzL,CAAwED,SAAA,CAAU,CAAA,CAAV,CAAiB,yEAAjB,CAG9BX;OAAA,CAAQ,CAACE,WAAYc,CAAAA,SAAUwG,CAAAA,qBAA/B,CAAsD,6KAAtD,CAAoP9G,IAAKH,CAAAA,WAAzP,EAAwQ,aAAxQ,CACAP,QAAA,CAAQ,CAACE,WAAYc,CAAAA,SAAUyG,CAAAA,yBAA/B,CAA0D,+FAA1D,CAAgK/G,IAAKH,CAAAA,WAArK,EAAoL,aAApL,CAI1C,KAAKmH,IAAIA,UAAT,GAAuBnG,oBAAvB,CACOrB,WAAYc,CAAAA,SAAZ,CAAsB0G,UAAtB,CAAL;CACExH,WAAYc,CAAAA,SAAZ,CAAsB0G,UAAtB,CADF,CACsC,IADtC,CAKF,OAAOxH,YA5EoB,CATd0G,CAwFfe,UAAW,CACTC,YAAaA,QAAS,CAACC,KAAD,CAAQ,CAC5BpD,cAAeqD,CAAAA,IAAf,CAAoBD,KAApB,CAD4B,CADrB,CAxFIjB,CAnqBiH;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/ReactClass.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$ReactClass\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactClass\n */\n\n'use strict';\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar assign = require('./Object.assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar keyMirror = require('fbjs/lib/keyMirror');\nvar keyOf = require('fbjs/lib/keyOf');\nvar warning = require('fbjs/lib/warning');\n\nvar MIXINS_KEY = keyOf({ mixins: null });\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\nvar SpecPolicy = keyMirror({\n  /**\n   * These methods may be defined only once by the class specification or mixin.\n   */\n  DEFINE_ONCE: null,\n  /**\n   * These methods may be defined by both the class specification and mixins.\n   * Subsequent definitions will be chained. These methods must return void.\n   */\n  DEFINE_MANY: null,\n  /**\n   * These methods are overriding the base class.\n   */\n  OVERRIDE_BASE: null,\n  /**\n   * These methods are similar to DEFINE_MANY, except we assume they return\n   * objects. We try to merge the keys of the return values of all the mixed in\n   * functions. If there is a key conflict we throw.\n   */\n  DEFINE_MANY_MERGED: null\n});\n\nvar injectedMixins = [];\n\nvar warnedSetProps = false;\nfunction warnSetProps() {\n  if (!warnedSetProps) {\n    warnedSetProps = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;\n  }\n}\n\n/**\n * Composite components are higher-level components that compose other composite\n * or native components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will be available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: SpecPolicy.DEFINE_MANY,\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @nosideeffects\n   * @required\n   */\n  render: SpecPolicy.DEFINE_ONCE,\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: SpecPolicy.DEFINE_MANY,\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: SpecPolicy.OVERRIDE_BASE\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function (Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function (Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function (Constructor, childContextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);\n    }\n    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);\n  },\n  contextTypes: function (Constructor, contextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);\n    }\n    Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function (Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function (Constructor, propTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);\n    }\n    Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);\n  },\n  statics: function (Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  },\n  autobind: function () {} };\n\n// noop\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but not in __DEV__\n      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;\n    }\n  }\n}\n\nfunction validateMethodOverride(proto, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (proto.hasOwnProperty(name)) {\n    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classses.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    return;\n  }\n\n  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;\n  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;\n\n  var proto = Constructor.prototype;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above.\n      continue;\n    }\n\n    var property = spec[name];\n    validateMethodOverride(proto, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n      if (shouldAutoBind) {\n        if (!proto.__reactAutoBindMap) {\n          proto.__reactAutoBindMap = {};\n        }\n        proto.__reactAutoBindMap[name] = property;\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride.\n          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (process.env.NODE_ENV !== 'production') {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = (name in RESERVED_SPEC_KEYS);\n    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;\n\n    var isInherited = (name in Constructor);\n    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (process.env.NODE_ENV !== 'production') {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    /* eslint-disable block-scoped-var, no-undef */\n    boundMethod.bind = function (newThis) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;\n      } else if (!args.length) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n      /* eslint-enable */\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  for (var autoBindKey in component.__reactAutoBindMap) {\n    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {\n      var method = component.__reactAutoBindMap[autoBindKey];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n}\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function (newState, callback) {\n    this.updater.enqueueReplaceState(this, newState);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function () {\n    return this.updater.isMounted(this);\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {object} partialProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  setProps: function (partialProps, callback) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnSetProps();\n    }\n    this.updater.enqueueSetProps(this, partialProps);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Replace all the props.\n   *\n   * @param {object} newProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  replaceProps: function (newProps, callback) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnSetProps();\n    }\n    this.updater.enqueueReplaceProps(this, newProps);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback);\n    }\n  }\n};\n\nvar ReactClassComponent = function () {};\nassign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function (spec) {\n    var Constructor = function (props, context, updater) {\n      // This constructor is overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindMap) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;\n\n      this.state = initialState;\n    };\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function (mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n};"],
"names":["shadow$provide","global","require","module","exports","warnSetProps","warnedSetProps","warning","validateTypeDef","Constructor","typeDef","location","propName","hasOwnProperty","displayName","ReactPropTypeLocationNames","mixSpecIntoComponent","spec","invariant","undefined","ReactElement","isValidElement","proto","prototype","MIXINS_KEY","RESERVED_SPEC_KEYS","mixins","name","property","specPolicy","ReactClassInterface","ReactClassMixin","SpecPolicy","OVERRIDE_BASE","DEFINE_MANY","DEFINE_MANY_MERGED","isReactClassMethod","isAlreadyDefined","autobind","createMergedResultFunction","createChainedFunction","__reactAutoBindMap","mergeIntoWithNoDuplicateKeys","one","two","key","mergedResult","a","apply","arguments","b","c","chainedFunction","bindAutoBindMethod","component","method","boundMethod","bind","__reactBoundContext","__reactBoundMethod","__reactBoundArguments","componentName","constructor","_bind","boundMethod.bind","newThis","_len","length","args","Array","_key","reboundMethod","ReactComponent","ReactPropTypeLocations","ReactNoopUpdateQueue","assign","emptyObject","keyMirror","keyOf","DEFINE_ONCE","injectedMixins","statics","propTypes","contextTypes","childContextTypes","getDefaultProps","getInitialState","getChildContext","render","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","updateComponent","i","childContext","context","prop","replaceState","newState","callback","updater","enqueueReplaceState","enqueueCallback","isMounted","setProps","partialProps","enqueueSetProps","replaceProps","newProps","enqueueReplaceProps","ReactClassComponent","ReactClass","createClass","props","autoBindKey","refs","state","initialState","_isMockFunction","isArray","forEach","defaultProps","isReactClassApproved","componentShouldUpdate","componentWillRecieveProps","methodName","injection","injectMixin","mixin","push"]
}
