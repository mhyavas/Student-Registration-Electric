shadow$provide.module$node_modules$react_offcanvas$node_modules$react$lib$ReactDOMSelect=function(global,require,module,exports){function updateOptionsIfPendingUpdateAndMounted(){if(this._rootNodeID&&this._wrapperState.pendingUpdate){this._wrapperState.pendingUpdate=!1;var props=this._currentElement.props,value=LinkedValueUtils.getValue(props);null!=value&&updateOptions(this,!!props.multiple,value)}}function getDeclarationErrorAddendum(owner){return owner&&(owner=owner.getName())?" Check the render method of `"+
owner+"`.":""}function updateOptions(inst,multiple,propValue){var i;inst=ReactMount.getNode(inst._rootNodeID).options;if(multiple){multiple={};for(i=0;i<propValue.length;i++)multiple[""+propValue[i]]=!0;for(i=0;i<inst.length;i++)propValue=multiple.hasOwnProperty(inst[i].value),inst[i].selected!==propValue&&(inst[i].selected=propValue)}else{multiple=""+propValue;for(i=0;i<inst.length;i++)if(inst[i].value===multiple){inst[i].selected=!0;return}inst.length&&(inst[0].selected=!0)}}function _handleChange(event){event=
LinkedValueUtils.executeOnChange(this._currentElement.props,event);this._wrapperState.pendingUpdate=!0;ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted,this);return event}var LinkedValueUtils=require("module$node_modules$react_offcanvas$node_modules$react$lib$LinkedValueUtils"),ReactMount=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactMount"),ReactUpdates=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactUpdates"),assign=require("module$node_modules$react_offcanvas$node_modules$react$lib$Object_assign"),
warning=require("module$node_modules$fbjs$lib$warning"),valueContextKey="__ReactDOMSelect_value$"+Math.random().toString(36).slice(2),valuePropNames=["value","defaultValue"];module.exports={valueContextKey,getNativeProps:function(inst,props,context){return assign({},props,{onChange:inst._wrapperState.onChange,value:void 0})},mountWrapper:function(inst,props){var owner=inst._currentElement._owner;LinkedValueUtils.checkPropTypes("select",props,owner);for(var i=0;i<valuePropNames.length;i++){var propName=
valuePropNames[i];null!=props[propName]&&(props.multiple?warning(Array.isArray(props[propName]),"The `%s` prop supplied to \x3cselect\x3e must be an array if `multiple` is true.%s",propName,getDeclarationErrorAddendum(owner)):warning(!Array.isArray(props[propName]),"The `%s` prop supplied to \x3cselect\x3e must be a scalar value if `multiple` is false.%s",propName,getDeclarationErrorAddendum(owner)))}owner=LinkedValueUtils.getValue(props);inst._wrapperState={pendingUpdate:!1,initialValue:null!=owner?
owner:props.defaultValue,onChange:_handleChange.bind(inst),wasMultiple:!!props.multiple}},processChildContext:function(inst,props,context){props=assign({},context);props[valueContextKey]=inst._wrapperState.initialValue;return props},postUpdateWrapper:function(inst){var props=inst._currentElement.props;inst._wrapperState.initialValue=void 0;var wasMultiple=inst._wrapperState.wasMultiple;inst._wrapperState.wasMultiple=!!props.multiple;var value=LinkedValueUtils.getValue(props);null!=value?(inst._wrapperState.pendingUpdate=
!1,updateOptions(inst,!!props.multiple,value)):wasMultiple!==!!props.multiple&&(null!=props.defaultValue?updateOptions(inst,!!props.multiple,props.defaultValue):updateOptions(inst,!!props.multiple,props.multiple?[]:""))}}}
//# sourceMappingURL=module$node_modules$react_offcanvas$node_modules$react$lib$ReactDOMSelect.js.map
