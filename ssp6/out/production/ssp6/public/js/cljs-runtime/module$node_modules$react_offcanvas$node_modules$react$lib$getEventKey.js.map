{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$getEventKey.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,sEAAA,CAA2F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAenI,IAAIC,iBAAmBH,OAAA,CAAQ,6EAAR,CAAvB,CAMII,aAAe,CACjB,IAAO,QADU,CAEjB,SAAY,GAFK,CAGjB,KAAQ,WAHS,CAIjB,GAAM,SAJW,CAKjB,MAAS,YALQ,CAMjB,KAAQ,WANS,CAOjB,IAAO,QAPU,CAQjB,IAAO,IARU,CASjB,KAAQ,aATS,CAUjB,KAAQ,aAVS,CAWjB,OAAU,YAXO,CAYjB,gBAAmB,cAZF,CANnB,CA0BIC,eAAiB,CACnB,EAAG,WADgB,CAEnB,EAAG,KAFgB,CAGnB,GAAI,OAHe;AAInB,GAAI,OAJe,CAKnB,GAAI,OALe,CAMnB,GAAI,SANe,CAOnB,GAAI,KAPe,CAQnB,GAAI,OARe,CASnB,GAAI,UATe,CAUnB,GAAI,QAVe,CAWnB,GAAI,GAXe,CAYnB,GAAI,QAZe,CAanB,GAAI,UAbe,CAcnB,GAAI,KAde,CAenB,GAAI,MAfe,CAgBnB,GAAI,WAhBe,CAiBnB,GAAI,SAjBe,CAkBnB,GAAI,YAlBe,CAmBnB,GAAI,WAnBe,CAoBnB,GAAI,QApBe,CAqBnB,GAAI,QArBe,CAsBnB,IAAK,IAtBc,CAsBR,IAAK,IAtBG,CAsBG,IAAK,IAtBR,CAsBc,IAAK,IAtBnB,CAsByB,IAAK,IAtB9B,CAsBoC,IAAK,IAtBzC,CAuBnB,IAAK,IAvBc,CAuBR,IAAK,IAvBG,CAuBG,IAAK,IAvBR,CAuBc,IAAK,KAvBnB,CAuB0B,IAAK,KAvB/B,CAuBsC,IAAK,KAvB3C,CAwBnB,IAAK,SAxBc,CAyBnB,IAAK,YAzBc,CA0BnB,IAAK,MA1Bc,CA8DrBJ,OAAOC,CAAAA,OAAP,CA7BAI,QAAoB,CAACC,WAAD,CAAc,CAChC,GAAIA,WAAYC,CAAAA,GAAhB,CAAqB,CAMnB,IAAIA,IAAMJ,YAAA,CAAaG,WAAYC,CAAAA,GAAzB,CAANA,EAAuCD,WAAYC,CAAAA,GACvD,IAAY,cAAZ;AAAIA,GAAJ,CACE,MAAOA,IARU,CAarB,MAAyB,UAAzB,GAAID,WAAYE,CAAAA,IAAhB,EACMC,WAIG,CAJQP,gBAAA,CAAiBI,WAAjB,CAIR,CAAa,EAAb,GAAAG,WAAA,CAAkB,OAAlB,CAA4BC,MAAOC,CAAAA,YAAP,CAAoBF,WAApB,CALrC,EAOyB,SAAzB,GAAIH,WAAYE,CAAAA,IAAhB,EAA2D,OAA3D,GAAsCF,WAAYE,CAAAA,IAAlD,CAGSJ,cAAA,CAAeE,WAAYM,CAAAA,OAA3B,CAHT,EAGgD,cAHhD,CAKO,EA1ByB,CA1EiG;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/getEventKey.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$getEventKey\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventKey\n * @typechecks static-only\n */\n\n'use strict';\n\nvar getEventCharCode = require('./getEventCharCode');\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  'Esc': 'Escape',\n  'Spacebar': ' ',\n  'Left': 'ArrowLeft',\n  'Up': 'ArrowUp',\n  'Right': 'ArrowRight',\n  'Down': 'ArrowDown',\n  'Del': 'Delete',\n  'Win': 'OS',\n  'Menu': 'ContextMenu',\n  'Apps': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'MozPrintableKey': 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;\n};"],
"names":["shadow$provide","global","require","module","exports","getEventCharCode","normalizeKey","translateToKey","getEventKey","nativeEvent","key","type","charCode","String","fromCharCode","keyCode"]
}
