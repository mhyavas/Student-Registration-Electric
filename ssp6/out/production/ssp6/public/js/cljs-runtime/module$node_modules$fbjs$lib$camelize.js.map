{
"version":3,
"file":"module$node_modules$fbjs$lib$camelize.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAelG,IAAIC,eAAiB,OAiBrBF,OAAOC,CAAAA,OAAP,CANAE,QAAiB,CAACC,MAAD,CAAS,CACxB,MAAOA,OAAOC,CAAAA,OAAP,CAAeH,cAAf,CAA+B,QAAS,CAACI,CAAD,CAAIC,SAAJ,CAAe,CAC5D,MAAOA,UAAUC,CAAAA,WAAV,EADqD,CAAvD,CADiB,CA1BwE;",
"sources":["node_modules/fbjs/lib/camelize.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$camelize\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelize\n * @typechecks\n */\n\n\"use strict\";\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function (_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n};"],
"names":["shadow$provide","global","require","module","exports","_hyphenPattern","camelize","string","replace","_","character","toUpperCase"]
}
