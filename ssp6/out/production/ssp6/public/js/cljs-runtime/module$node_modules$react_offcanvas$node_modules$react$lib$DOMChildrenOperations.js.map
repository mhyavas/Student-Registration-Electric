{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$DOMChildrenOperations.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/DOMChildrenOperations.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$DOMChildrenOperations\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMChildrenOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar Danger = require('./Danger');\nvar ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');\nvar ReactPerf = require('./ReactPerf');\n\nvar setInnerHTML = require('./setInnerHTML');\nvar setTextContent = require('./setTextContent');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nfunction insertChildAt(parentNode, childNode, index) {\n  // By exploiting arrays returning `undefined` for an undefined index, we can\n  // rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. However, using `undefined` is not allowed by all\n  // browsers so we must replace it with `null`.\n\n  // fix render order error in safari\n  // IE8 will throw error when index out of list size.\n  var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);\n\n  parentNode.insertBefore(childNode, beforeChild);\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,\n\n  updateTextContent: setTextContent,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markupList List of markup strings.\n   * @internal\n   */\n  processUpdates: function (updates, markupList) {\n    var update;\n    // Mapping from parent IDs to initial child orderings.\n    var initialChildren = null;\n    // List of children that will be moved or removed.\n    var updatedChildren = null;\n\n    for (var i = 0; i < updates.length; i++) {\n      update = updates[i];\n      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {\n        var updatedIndex = update.fromIndex;\n        var updatedChild = update.parentNode.childNodes[updatedIndex];\n        var parentID = update.parentID;\n\n        !updatedChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;\n\n        initialChildren = initialChildren || {};\n        initialChildren[parentID] = initialChildren[parentID] || [];\n        initialChildren[parentID][updatedIndex] = updatedChild;\n\n        updatedChildren = updatedChildren || [];\n        updatedChildren.push(updatedChild);\n      }\n    }\n\n    var renderedMarkup;\n    // markupList is either a list of markup or just a list of elements\n    if (markupList.length && typeof markupList[0] === 'string') {\n      renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);\n    } else {\n      renderedMarkup = markupList;\n    }\n\n    // Remove updated children first so that `toIndex` is consistent.\n    if (updatedChildren) {\n      for (var j = 0; j < updatedChildren.length; j++) {\n        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);\n      }\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      update = updates[k];\n      switch (update.type) {\n        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\n          insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);\n          break;\n        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\n          insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);\n          break;\n        case ReactMultiChildUpdateTypes.SET_MARKUP:\n          setInnerHTML(update.parentNode, update.content);\n          break;\n        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\n          setTextContent(update.parentNode, update.content);\n          break;\n        case ReactMultiChildUpdateTypes.REMOVE_NODE:\n          // Already removed by the for-loop above.\n          break;\n      }\n    }\n  }\n\n};\n\nReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {\n  updateTextContent: 'updateTextContent'\n});\n\nmodule.exports = DOMChildrenOperations;\n};"],
"names":["shadow$provide","global","require","module","exports","Danger","ReactMultiChildUpdateTypes","ReactPerf","setInnerHTML","setTextContent","invariant","DOMChildrenOperations","dangerouslyReplaceNodeWithMarkup","updateTextContent","processUpdates","updates","markupList","update","initialChildren","updatedChildren","i","length","type","MOVE_EXISTING","REMOVE_NODE","updatedIndex","fromIndex","updatedChild","parentNode","childNodes","parentID","undefined","push","renderedMarkup","dangerouslyRenderMarkup","j","removeChild","k","INSERT_MARKUP","markupIndex","toIndex","beforeChild","index","item","insertBefore","childNode","SET_MARKUP","content","TEXT_CONTENT","measureMethods"]
}
