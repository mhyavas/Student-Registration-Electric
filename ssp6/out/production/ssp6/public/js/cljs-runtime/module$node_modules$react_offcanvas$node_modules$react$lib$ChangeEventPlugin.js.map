{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$ChangeEventPlugin.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/ChangeEventPlugin.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$ChangeEventPlugin\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ChangeEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactUpdates = require('./ReactUpdates');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\nvar isEventSupported = require('./isEventSupported');\nvar isTextInputElement = require('./isTextInputElement');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onChange: null }),\n      captured: keyOf({ onChangeCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementID = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue(false);\n}\n\nfunction startWatchingForChangeEventIE8(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementID = null;\n}\n\nfunction getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topChange) {\n    return topLevelTargetID;\n  }\n}\nfunction handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events\n  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);\n}\n\n/**\n * (For old IE.) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp = {\n  get: function () {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function (val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For old IE.) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\n  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n  // on DOM elements\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n\n/**\n * (For old IE.) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\n  activeElement = null;\n  activeElementID = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For old IE.) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topInput) {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return topLevelTargetID;\n  }\n}\n\n// For IE8 and IE9.\nfunction handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementID;\n    }\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topClick) {\n    return topLevelTargetID;\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n\n    var getTargetIDFunc, handleEventFunc;\n    if (shouldUseChangeEvent(topLevelTarget)) {\n      if (doesChangeEventBubble) {\n        getTargetIDFunc = getTargetIDForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(topLevelTarget)) {\n      if (isInputEventSupported) {\n        getTargetIDFunc = getTargetIDForInputEvent;\n      } else {\n        getTargetIDFunc = getTargetIDForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(topLevelTarget)) {\n      getTargetIDFunc = getTargetIDForClickEvent;\n    }\n\n    if (getTargetIDFunc) {\n      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);\n      if (targetID) {\n        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);\n        event.type = 'change';\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;\n};"],
"names":["shadow$provide","global","require","module","exports","manualDispatchChangeEvent","nativeEvent","event","SyntheticEvent","getPooled","eventTypes","change","activeElementID","getEventTarget","EventPropagators","accumulateTwoPhaseDispatches","ReactUpdates","batchedUpdates","runEventInBatch","EventPluginHub","enqueueEvents","processEventQueue","stopWatchingForChangeEventIE8","activeElement","detachEvent","getTargetIDForChangeEvent","topLevelType","topLevelTarget","topLevelTargetID","topLevelTypes","topChange","handleEventsForChangeEventIE8","topFocus","attachEvent","topBlur","stopWatchingForValueChange","value","handlePropertyChange","activeElementValueProp","activeElementValue","propertyName","srcElement","getTargetIDForInputEvent","topInput","handleEventsForInputEventIE","Object","getOwnPropertyDescriptor","constructor","prototype","defineProperty","newValueProp","getTargetIDForInputEventIE","topSelectionChange","topKeyUp","topKeyDown","getTargetIDForClickEvent","topClick","EventConstants","ExecutionEnvironment","isEventSupported","isTextInputElement","keyOf","phasedRegistrationNames","bubbled","onChange","captured","onChangeCapture","dependencies","doesChangeEventBubble","canUseDOM","document","documentMode","isInputEventSupported","get","call","set","val","ChangeEventPlugin","extractEvents","nativeEventTarget","getTargetIDFunc","handleEventFunc","nodeName","toLowerCase","type","targetID"]
}
