{
"version":3,
"file":"module$node_modules$fbjs$lib$hyphenate.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAenG,IAAIC,kBAAoB,UAkBxBF,OAAOC,CAAAA,OAAP,CAJAE,QAAkB,CAACC,MAAD,CAAS,CACzB,MAAOA,OAAOC,CAAAA,OAAP,CAAeH,iBAAf,CAAkC,KAAlC,CAAyCI,CAAAA,WAAzC,EADkB,CA7BwE;",
"sources":["node_modules/fbjs/lib/hyphenate.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$hyphenate\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenate\n * @typechecks\n */\n\n'use strict';\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n};"],
"names":["shadow$provide","global","require","module","exports","_uppercasePattern","hyphenate","string","replace","toLowerCase"]
}
