shadow$provide.module$node_modules$react_offcanvas$node_modules$react$lib$DOMChildrenOperations=function(global,require,module,exports){var Danger=require("module$node_modules$react_offcanvas$node_modules$react$lib$Danger"),ReactMultiChildUpdateTypes=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactMultiChildUpdateTypes");global=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactPerf");var setInnerHTML=require("module$node_modules$react_offcanvas$node_modules$react$lib$setInnerHTML"),
setTextContent=require("module$node_modules$react_offcanvas$node_modules$react$lib$setTextContent"),invariant=require("module$node_modules$fbjs$lib$invariant");require={dangerouslyReplaceNodeWithMarkup:Danger.dangerouslyReplaceNodeWithMarkup,updateTextContent:setTextContent,processUpdates:function(updates,markupList){for(var update,initialChildren=null,updatedChildren=null,i=0;i<updates.length;i++)if(update=updates[i],update.type===ReactMultiChildUpdateTypes.MOVE_EXISTING||update.type===ReactMultiChildUpdateTypes.REMOVE_NODE){var updatedIndex=
update.fromIndex,updatedChild=update.parentNode.childNodes[updatedIndex];update=update.parentID;updatedChild?void 0:invariant(!1,"processUpdates(): Unable to find child %s of element. This probably means the DOM was unexpectedly mutated (e.g., by the browser), usually due to forgetting a \x3ctbody\x3e when using tables, nesting tags like \x3cform\x3e, \x3cp\x3e, or \x3ca\x3e, or using non-SVG elements in an \x3csvg\x3e parent. Try inspecting the child nodes of the element with React ID `%s`.",updatedIndex,
update);initialChildren=initialChildren||{};initialChildren[update]=initialChildren[update]||[];initialChildren[update][updatedIndex]=updatedChild;updatedChildren=updatedChildren||[];updatedChildren.push(updatedChild)}markupList=markupList.length&&"string"===typeof markupList[0]?Danger.dangerouslyRenderMarkup(markupList):markupList;if(updatedChildren)for(update=0;update<updatedChildren.length;update++)updatedChildren[update].parentNode.removeChild(updatedChildren[update]);for(updatedChildren=0;updatedChildren<
updates.length;updatedChildren++)switch(update=updates[updatedChildren],update.type){case ReactMultiChildUpdateTypes.INSERT_MARKUP:i=update.parentNode;updatedIndex=markupList[update.markupIndex];update=update.toIndex;update=update>=i.childNodes.length?null:i.childNodes.item(update);i.insertBefore(updatedIndex,update);break;case ReactMultiChildUpdateTypes.MOVE_EXISTING:i=update.parentNode;updatedIndex=initialChildren[update.parentID][update.fromIndex];update=update.toIndex;update=update>=i.childNodes.length?
null:i.childNodes.item(update);i.insertBefore(updatedIndex,update);break;case ReactMultiChildUpdateTypes.SET_MARKUP:setInnerHTML(update.parentNode,update.content);break;case ReactMultiChildUpdateTypes.TEXT_CONTENT:setTextContent(update.parentNode,update.content)}}};global.measureMethods(require,"DOMChildrenOperations",{updateTextContent:"updateTextContent"});module.exports=require}
//# sourceMappingURL=module$node_modules$react_offcanvas$node_modules$react$lib$DOMChildrenOperations.js.map
