{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticDragEvent.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,6EAAA,CAAkG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA+B1IC,QAASA,mBAAkB,CAACC,cAAD,CAAiBC,cAAjB,CAAiCC,WAAjC,CAA8CC,iBAA9C,CAAiE,CAC1FC,mBAAoBC,CAAAA,IAApB,CAAyB,IAAzB,CAA+BL,cAA/B,CAA+CC,cAA/C,CAA+DC,WAA/D,CAA4EC,iBAA5E,CAD0F,CAhB5F,IAAIC,oBAAsBR,OAAA,CAAQ,gFAAR,CAoB1BQ,oBAAoBE,CAAAA,YAApB,CAAiCP,kBAAjC,CAdyBQ,CACvBC,aAAc,IADSD,CAczB,CAEAV,OAAOC,CAAAA,OAAP;AAAiBC,kBArCyH;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/SyntheticDragEvent.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticDragEvent\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticDragEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;\n};"],
"names":["shadow$provide","global","require","module","exports","SyntheticDragEvent","dispatchConfig","dispatchMarker","nativeEvent","nativeEventTarget","SyntheticMouseEvent","call","augmentClass","DragEventInterface","dataTransfer"]
}
