{"version":3,"sources":["contrib/crypt.cljc"],"mappings":";AASA,8BAAA,9BAAMA,oEAAeC;AAArB,AAKK,IAAMC,WAAS,KAAAC;AAAf,AACE,AAASD,gBAAS,AAACE,6BAA6B,AAACC,wGAAOJ;;AACxD,OAACK,kCAAkC,AAASJ;;AAEnD","names":["contrib.crypt/sha256-base64","o","sha256er","js/goog.crypt.Sha256","js/goog.crypt.stringToByteArray","cljs.core.pr_str","goog.crypt.base64/encodeByteArray"],"sourcesContent":["(ns contrib.crypt\n  (:require #?(:cljs [goog.crypt :as crypt])\n            #?(:cljs [goog.crypt.Sha256])\n            #?(:cljs [goog.crypt.base64 :as base64])\n            [hyperfiddle.rcf :as rcf :refer [% tap tests with]]\n            [contrib.base64])\n  (:import #?(:clj [java.util Base64]))\n  #?(:cljs (:require-macros contrib.crypt)))\n\n(defn sha256-base64 [o]\n  #?(:clj\n     (let [sha256er (java.security.MessageDigest/getInstance \"SHA-256\")]\n       (String. (->> (.getBytes (pr-str o) \"UTF-8\") (.digest sha256er) (.encode (Base64/getEncoder))) \"UTF-8\"))\n     :cljs\n     (let [sha256er (goog.crypt.Sha256.)]\n       (.update sha256er (goog.crypt.stringToByteArray (pr-str o)))\n       (goog.crypt.base64/encodeByteArray (.digest sha256er)))))\n\n(tests\n  (string? (sha256-base64 [:x \"y\"])) := true\n  (string? (sha256-base64 nil))      := true)\n"]}