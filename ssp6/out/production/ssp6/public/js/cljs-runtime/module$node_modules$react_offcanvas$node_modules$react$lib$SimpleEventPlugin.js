shadow$provide.module$node_modules$react_offcanvas$node_modules$react$lib$SimpleEventPlugin=function(global,require,module,exports){global=require("module$node_modules$react_offcanvas$node_modules$react$lib$EventConstants");var EventListener=require("module$node_modules$fbjs$lib$EventListener"),EventPropagators=require("module$node_modules$react_offcanvas$node_modules$react$lib$EventPropagators"),ReactMount=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactMount"),SyntheticClipboardEvent=
require("module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticClipboardEvent"),SyntheticEvent=require("module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticEvent"),SyntheticFocusEvent=require("module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticFocusEvent"),SyntheticKeyboardEvent=require("module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticKeyboardEvent"),SyntheticMouseEvent=require("module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticMouseEvent"),
SyntheticDragEvent=require("module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticDragEvent"),SyntheticTouchEvent=require("module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticTouchEvent"),SyntheticUIEvent=require("module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticUIEvent"),SyntheticWheelEvent=require("module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticWheelEvent"),emptyFunction=require("module$node_modules$fbjs$lib$emptyFunction"),getEventCharCode=
require("module$node_modules$react_offcanvas$node_modules$react$lib$getEventCharCode"),invariant=require("module$node_modules$fbjs$lib$invariant");require=require("module$node_modules$fbjs$lib$keyOf");var topLevelTypes=global.topLevelTypes;global={abort:{phasedRegistrationNames:{bubbled:require({onAbort:!0}),captured:require({onAbortCapture:!0})}},blur:{phasedRegistrationNames:{bubbled:require({onBlur:!0}),captured:require({onBlurCapture:!0})}},canPlay:{phasedRegistrationNames:{bubbled:require({onCanPlay:!0}),
captured:require({onCanPlayCapture:!0})}},canPlayThrough:{phasedRegistrationNames:{bubbled:require({onCanPlayThrough:!0}),captured:require({onCanPlayThroughCapture:!0})}},click:{phasedRegistrationNames:{bubbled:require({onClick:!0}),captured:require({onClickCapture:!0})}},contextMenu:{phasedRegistrationNames:{bubbled:require({onContextMenu:!0}),captured:require({onContextMenuCapture:!0})}},copy:{phasedRegistrationNames:{bubbled:require({onCopy:!0}),captured:require({onCopyCapture:!0})}},cut:{phasedRegistrationNames:{bubbled:require({onCut:!0}),
captured:require({onCutCapture:!0})}},doubleClick:{phasedRegistrationNames:{bubbled:require({onDoubleClick:!0}),captured:require({onDoubleClickCapture:!0})}},drag:{phasedRegistrationNames:{bubbled:require({onDrag:!0}),captured:require({onDragCapture:!0})}},dragEnd:{phasedRegistrationNames:{bubbled:require({onDragEnd:!0}),captured:require({onDragEndCapture:!0})}},dragEnter:{phasedRegistrationNames:{bubbled:require({onDragEnter:!0}),captured:require({onDragEnterCapture:!0})}},dragExit:{phasedRegistrationNames:{bubbled:require({onDragExit:!0}),
captured:require({onDragExitCapture:!0})}},dragLeave:{phasedRegistrationNames:{bubbled:require({onDragLeave:!0}),captured:require({onDragLeaveCapture:!0})}},dragOver:{phasedRegistrationNames:{bubbled:require({onDragOver:!0}),captured:require({onDragOverCapture:!0})}},dragStart:{phasedRegistrationNames:{bubbled:require({onDragStart:!0}),captured:require({onDragStartCapture:!0})}},drop:{phasedRegistrationNames:{bubbled:require({onDrop:!0}),captured:require({onDropCapture:!0})}},durationChange:{phasedRegistrationNames:{bubbled:require({onDurationChange:!0}),
captured:require({onDurationChangeCapture:!0})}},emptied:{phasedRegistrationNames:{bubbled:require({onEmptied:!0}),captured:require({onEmptiedCapture:!0})}},encrypted:{phasedRegistrationNames:{bubbled:require({onEncrypted:!0}),captured:require({onEncryptedCapture:!0})}},ended:{phasedRegistrationNames:{bubbled:require({onEnded:!0}),captured:require({onEndedCapture:!0})}},error:{phasedRegistrationNames:{bubbled:require({onError:!0}),captured:require({onErrorCapture:!0})}},focus:{phasedRegistrationNames:{bubbled:require({onFocus:!0}),
captured:require({onFocusCapture:!0})}},input:{phasedRegistrationNames:{bubbled:require({onInput:!0}),captured:require({onInputCapture:!0})}},keyDown:{phasedRegistrationNames:{bubbled:require({onKeyDown:!0}),captured:require({onKeyDownCapture:!0})}},keyPress:{phasedRegistrationNames:{bubbled:require({onKeyPress:!0}),captured:require({onKeyPressCapture:!0})}},keyUp:{phasedRegistrationNames:{bubbled:require({onKeyUp:!0}),captured:require({onKeyUpCapture:!0})}},load:{phasedRegistrationNames:{bubbled:require({onLoad:!0}),
captured:require({onLoadCapture:!0})}},loadedData:{phasedRegistrationNames:{bubbled:require({onLoadedData:!0}),captured:require({onLoadedDataCapture:!0})}},loadedMetadata:{phasedRegistrationNames:{bubbled:require({onLoadedMetadata:!0}),captured:require({onLoadedMetadataCapture:!0})}},loadStart:{phasedRegistrationNames:{bubbled:require({onLoadStart:!0}),captured:require({onLoadStartCapture:!0})}},mouseDown:{phasedRegistrationNames:{bubbled:require({onMouseDown:!0}),captured:require({onMouseDownCapture:!0})}},
mouseMove:{phasedRegistrationNames:{bubbled:require({onMouseMove:!0}),captured:require({onMouseMoveCapture:!0})}},mouseOut:{phasedRegistrationNames:{bubbled:require({onMouseOut:!0}),captured:require({onMouseOutCapture:!0})}},mouseOver:{phasedRegistrationNames:{bubbled:require({onMouseOver:!0}),captured:require({onMouseOverCapture:!0})}},mouseUp:{phasedRegistrationNames:{bubbled:require({onMouseUp:!0}),captured:require({onMouseUpCapture:!0})}},paste:{phasedRegistrationNames:{bubbled:require({onPaste:!0}),
captured:require({onPasteCapture:!0})}},pause:{phasedRegistrationNames:{bubbled:require({onPause:!0}),captured:require({onPauseCapture:!0})}},play:{phasedRegistrationNames:{bubbled:require({onPlay:!0}),captured:require({onPlayCapture:!0})}},playing:{phasedRegistrationNames:{bubbled:require({onPlaying:!0}),captured:require({onPlayingCapture:!0})}},progress:{phasedRegistrationNames:{bubbled:require({onProgress:!0}),captured:require({onProgressCapture:!0})}},rateChange:{phasedRegistrationNames:{bubbled:require({onRateChange:!0}),
captured:require({onRateChangeCapture:!0})}},reset:{phasedRegistrationNames:{bubbled:require({onReset:!0}),captured:require({onResetCapture:!0})}},scroll:{phasedRegistrationNames:{bubbled:require({onScroll:!0}),captured:require({onScrollCapture:!0})}},seeked:{phasedRegistrationNames:{bubbled:require({onSeeked:!0}),captured:require({onSeekedCapture:!0})}},seeking:{phasedRegistrationNames:{bubbled:require({onSeeking:!0}),captured:require({onSeekingCapture:!0})}},stalled:{phasedRegistrationNames:{bubbled:require({onStalled:!0}),
captured:require({onStalledCapture:!0})}},submit:{phasedRegistrationNames:{bubbled:require({onSubmit:!0}),captured:require({onSubmitCapture:!0})}},suspend:{phasedRegistrationNames:{bubbled:require({onSuspend:!0}),captured:require({onSuspendCapture:!0})}},timeUpdate:{phasedRegistrationNames:{bubbled:require({onTimeUpdate:!0}),captured:require({onTimeUpdateCapture:!0})}},touchCancel:{phasedRegistrationNames:{bubbled:require({onTouchCancel:!0}),captured:require({onTouchCancelCapture:!0})}},touchEnd:{phasedRegistrationNames:{bubbled:require({onTouchEnd:!0}),
captured:require({onTouchEndCapture:!0})}},touchMove:{phasedRegistrationNames:{bubbled:require({onTouchMove:!0}),captured:require({onTouchMoveCapture:!0})}},touchStart:{phasedRegistrationNames:{bubbled:require({onTouchStart:!0}),captured:require({onTouchStartCapture:!0})}},volumeChange:{phasedRegistrationNames:{bubbled:require({onVolumeChange:!0}),captured:require({onVolumeChangeCapture:!0})}},waiting:{phasedRegistrationNames:{bubbled:require({onWaiting:!0}),captured:require({onWaitingCapture:!0})}},
wheel:{phasedRegistrationNames:{bubbled:require({onWheel:!0}),captured:require({onWheelCapture:!0})}}};var topLevelEventsToDispatchConfig={topAbort:global.abort,topBlur:global.blur,topCanPlay:global.canPlay,topCanPlayThrough:global.canPlayThrough,topClick:global.click,topContextMenu:global.contextMenu,topCopy:global.copy,topCut:global.cut,topDoubleClick:global.doubleClick,topDrag:global.drag,topDragEnd:global.dragEnd,topDragEnter:global.dragEnter,topDragExit:global.dragExit,topDragLeave:global.dragLeave,
topDragOver:global.dragOver,topDragStart:global.dragStart,topDrop:global.drop,topDurationChange:global.durationChange,topEmptied:global.emptied,topEncrypted:global.encrypted,topEnded:global.ended,topError:global.error,topFocus:global.focus,topInput:global.input,topKeyDown:global.keyDown,topKeyPress:global.keyPress,topKeyUp:global.keyUp,topLoad:global.load,topLoadedData:global.loadedData,topLoadedMetadata:global.loadedMetadata,topLoadStart:global.loadStart,topMouseDown:global.mouseDown,topMouseMove:global.mouseMove,
topMouseOut:global.mouseOut,topMouseOver:global.mouseOver,topMouseUp:global.mouseUp,topPaste:global.paste,topPause:global.pause,topPlay:global.play,topPlaying:global.playing,topProgress:global.progress,topRateChange:global.rateChange,topReset:global.reset,topScroll:global.scroll,topSeeked:global.seeked,topSeeking:global.seeking,topStalled:global.stalled,topSubmit:global.submit,topSuspend:global.suspend,topTimeUpdate:global.timeUpdate,topTouchCancel:global.touchCancel,topTouchEnd:global.touchEnd,topTouchMove:global.touchMove,
topTouchStart:global.touchStart,topVolumeChange:global.volumeChange,topWaiting:global.waiting,topWheel:global.wheel},type;for(type in topLevelEventsToDispatchConfig)topLevelEventsToDispatchConfig[type].dependencies=[type];var ON_CLICK_KEY=require({onClick:null}),onClickListeners={};module.exports={eventTypes:global,extractEvents:function(topLevelType,topLevelTarget,topLevelTargetID,nativeEvent,nativeEventTarget){topLevelTarget=topLevelEventsToDispatchConfig[topLevelType];if(!topLevelTarget)return null;
switch(topLevelType){case topLevelTypes.topAbort:case topLevelTypes.topCanPlay:case topLevelTypes.topCanPlayThrough:case topLevelTypes.topDurationChange:case topLevelTypes.topEmptied:case topLevelTypes.topEncrypted:case topLevelTypes.topEnded:case topLevelTypes.topError:case topLevelTypes.topInput:case topLevelTypes.topLoad:case topLevelTypes.topLoadedData:case topLevelTypes.topLoadedMetadata:case topLevelTypes.topLoadStart:case topLevelTypes.topPause:case topLevelTypes.topPlay:case topLevelTypes.topPlaying:case topLevelTypes.topProgress:case topLevelTypes.topRateChange:case topLevelTypes.topReset:case topLevelTypes.topSeeked:case topLevelTypes.topSeeking:case topLevelTypes.topStalled:case topLevelTypes.topSubmit:case topLevelTypes.topSuspend:case topLevelTypes.topTimeUpdate:case topLevelTypes.topVolumeChange:case topLevelTypes.topWaiting:var EventConstructor=
SyntheticEvent;break;case topLevelTypes.topKeyPress:if(0===getEventCharCode(nativeEvent))return null;case topLevelTypes.topKeyDown:case topLevelTypes.topKeyUp:EventConstructor=SyntheticKeyboardEvent;break;case topLevelTypes.topBlur:case topLevelTypes.topFocus:EventConstructor=SyntheticFocusEvent;break;case topLevelTypes.topClick:if(2===nativeEvent.button)return null;case topLevelTypes.topContextMenu:case topLevelTypes.topDoubleClick:case topLevelTypes.topMouseDown:case topLevelTypes.topMouseMove:case topLevelTypes.topMouseOut:case topLevelTypes.topMouseOver:case topLevelTypes.topMouseUp:EventConstructor=
SyntheticMouseEvent;break;case topLevelTypes.topDrag:case topLevelTypes.topDragEnd:case topLevelTypes.topDragEnter:case topLevelTypes.topDragExit:case topLevelTypes.topDragLeave:case topLevelTypes.topDragOver:case topLevelTypes.topDragStart:case topLevelTypes.topDrop:EventConstructor=SyntheticDragEvent;break;case topLevelTypes.topTouchCancel:case topLevelTypes.topTouchEnd:case topLevelTypes.topTouchMove:case topLevelTypes.topTouchStart:EventConstructor=SyntheticTouchEvent;break;case topLevelTypes.topScroll:EventConstructor=
SyntheticUIEvent;break;case topLevelTypes.topWheel:EventConstructor=SyntheticWheelEvent;break;case topLevelTypes.topCopy:case topLevelTypes.topCut:case topLevelTypes.topPaste:EventConstructor=SyntheticClipboardEvent}EventConstructor?void 0:invariant(!1,"SimpleEventPlugin: Unhandled event type, `%s`.",topLevelType);topLevelType=EventConstructor.getPooled(topLevelTarget,topLevelTargetID,nativeEvent,nativeEventTarget);EventPropagators.accumulateTwoPhaseDispatches(topLevelType);return topLevelType},didPutListener:function(id,
registrationName,listener){registrationName===ON_CLICK_KEY&&(registrationName=ReactMount.getNode(id),onClickListeners[id]||(onClickListeners[id]=EventListener.listen(registrationName,"click",emptyFunction)))},willDeleteListener:function(id,registrationName){registrationName===ON_CLICK_KEY&&(onClickListeners[id].remove(),delete onClickListeners[id])}}}
//# sourceMappingURL=module$node_modules$react_offcanvas$node_modules$react$lib$SimpleEventPlugin.js.map
