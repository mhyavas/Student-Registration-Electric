shadow$provide.module$node_modules$react_offcanvas$node_modules$react$lib$ChangeEventPlugin=function(global,require,module,exports){function manualDispatchChangeEvent(nativeEvent){nativeEvent=SyntheticEvent.getPooled(eventTypes.change,activeElementID,nativeEvent,getEventTarget(nativeEvent));EventPropagators.accumulateTwoPhaseDispatches(nativeEvent);ReactUpdates.batchedUpdates(runEventInBatch,nativeEvent)}function runEventInBatch(event){EventPluginHub.enqueueEvents(event);EventPluginHub.processEventQueue(!1)}
function stopWatchingForChangeEventIE8(){activeElement&&(activeElement.detachEvent("onchange",manualDispatchChangeEvent),activeElementID=activeElement=null)}function getTargetIDForChangeEvent(topLevelType,topLevelTarget,topLevelTargetID){if(topLevelType===topLevelTypes.topChange)return topLevelTargetID}function handleEventsForChangeEventIE8(topLevelType,topLevelTarget,topLevelTargetID){topLevelType===topLevelTypes.topFocus?(stopWatchingForChangeEventIE8(),activeElement=topLevelTarget,activeElementID=
topLevelTargetID,activeElement.attachEvent("onchange",manualDispatchChangeEvent)):topLevelType===topLevelTypes.topBlur&&stopWatchingForChangeEventIE8()}function stopWatchingForValueChange(){activeElement&&(delete activeElement.value,activeElement.detachEvent("onpropertychange",handlePropertyChange),activeElementValueProp=activeElementValue=activeElementID=activeElement=null)}function handlePropertyChange(nativeEvent){if("value"===nativeEvent.propertyName){var value=nativeEvent.srcElement.value;value!==
activeElementValue&&(activeElementValue=value,manualDispatchChangeEvent(nativeEvent))}}function getTargetIDForInputEvent(topLevelType,topLevelTarget,topLevelTargetID){if(topLevelType===topLevelTypes.topInput)return topLevelTargetID}function handleEventsForInputEventIE(topLevelType,topLevelTarget,topLevelTargetID){topLevelType===topLevelTypes.topFocus?(stopWatchingForValueChange(),activeElement=topLevelTarget,activeElementID=topLevelTargetID,activeElementValue=topLevelTarget.value,activeElementValueProp=
Object.getOwnPropertyDescriptor(topLevelTarget.constructor.prototype,"value"),Object.defineProperty(activeElement,"value",newValueProp),activeElement.attachEvent("onpropertychange",handlePropertyChange)):topLevelType===topLevelTypes.topBlur&&stopWatchingForValueChange()}function getTargetIDForInputEventIE(topLevelType,topLevelTarget,topLevelTargetID){if((topLevelType===topLevelTypes.topSelectionChange||topLevelType===topLevelTypes.topKeyUp||topLevelType===topLevelTypes.topKeyDown)&&activeElement&&
activeElement.value!==activeElementValue)return activeElementValue=activeElement.value,activeElementID}function getTargetIDForClickEvent(topLevelType,topLevelTarget,topLevelTargetID){if(topLevelType===topLevelTypes.topClick)return topLevelTargetID}global=require("module$node_modules$react_offcanvas$node_modules$react$lib$EventConstants");var EventPluginHub=require("module$node_modules$react_offcanvas$node_modules$react$lib$EventPluginHub"),EventPropagators=require("module$node_modules$react_offcanvas$node_modules$react$lib$EventPropagators");
exports=require("module$node_modules$fbjs$lib$ExecutionEnvironment");var ReactUpdates=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactUpdates"),SyntheticEvent=require("module$node_modules$react_offcanvas$node_modules$react$lib$SyntheticEvent"),getEventTarget=require("module$node_modules$react_offcanvas$node_modules$react$lib$getEventTarget"),isEventSupported=require("module$node_modules$react_offcanvas$node_modules$react$lib$isEventSupported"),isTextInputElement=require("module$node_modules$react_offcanvas$node_modules$react$lib$isTextInputElement");
require=require("module$node_modules$fbjs$lib$keyOf");var topLevelTypes=global.topLevelTypes,eventTypes={change:{phasedRegistrationNames:{bubbled:require({onChange:null}),captured:require({onChangeCapture:null})},dependencies:[topLevelTypes.topBlur,topLevelTypes.topChange,topLevelTypes.topClick,topLevelTypes.topFocus,topLevelTypes.topInput,topLevelTypes.topKeyDown,topLevelTypes.topKeyUp,topLevelTypes.topSelectionChange]}},activeElement=null,activeElementID=null,activeElementValue=null,activeElementValueProp=
null,doesChangeEventBubble=!1;exports.canUseDOM&&(doesChangeEventBubble=isEventSupported("change")&&(!("documentMode"in document)||8<document.documentMode));var isInputEventSupported=!1;exports.canUseDOM&&(isInputEventSupported=isEventSupported("input")&&(!("documentMode"in document)||9<document.documentMode));var newValueProp={get:function(){return activeElementValueProp.get.call(this)},set:function(val){activeElementValue=""+val;activeElementValueProp.set.call(this,val)}};module.exports={eventTypes,
extractEvents:function(topLevelType,topLevelTarget,topLevelTargetID,nativeEvent,nativeEventTarget){var getTargetIDFunc,handleEventFunc,nodeName=topLevelTarget.nodeName&&topLevelTarget.nodeName.toLowerCase();"select"===nodeName||"input"===nodeName&&"file"===topLevelTarget.type?doesChangeEventBubble?getTargetIDFunc=getTargetIDForChangeEvent:handleEventFunc=handleEventsForChangeEventIE8:isTextInputElement(topLevelTarget)?isInputEventSupported?getTargetIDFunc=getTargetIDForInputEvent:(getTargetIDFunc=
getTargetIDForInputEventIE,handleEventFunc=handleEventsForInputEventIE):topLevelTarget.nodeName&&"input"===topLevelTarget.nodeName.toLowerCase()&&("checkbox"===topLevelTarget.type||"radio"===topLevelTarget.type)&&(getTargetIDFunc=getTargetIDForClickEvent);if(getTargetIDFunc&&(getTargetIDFunc=getTargetIDFunc(topLevelType,topLevelTarget,topLevelTargetID)))return topLevelType=SyntheticEvent.getPooled(eventTypes.change,getTargetIDFunc,nativeEvent,nativeEventTarget),topLevelType.type="change",EventPropagators.accumulateTwoPhaseDispatches(topLevelType),
topLevelType;handleEventFunc&&handleEventFunc(topLevelType,topLevelTarget,topLevelTargetID)}}}
//# sourceMappingURL=module$node_modules$react_offcanvas$node_modules$react$lib$ChangeEventPlugin.js.map
