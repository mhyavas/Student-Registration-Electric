{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$ReactDOMOption.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,yEAAA,CAA8F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CActI,IAAIC,cAAgBH,OAAA,CAAQ,0EAAR,CAChBI,OAAAA,CAAiBJ,OAAA,CAAQ,2EAAR,CAErB,KAAIK,OAASL,OAAA,CAAQ,0EAAR,CAAb,CACIM,QAAUN,OAAA,CAAQ,sCAAR,CADd,CAGIO,gBAAkBH,MAAeG,CAAAA,eAqErCN;MAAOC,CAAAA,OAAP,CAhEqBM,CACnBC,aAAcA,QAAS,CAACC,IAAD,CAAOC,KAAP,CAAcC,OAAd,CAAuB,CAGFN,OAAA,CAA0B,IAA1B,EAAQK,KAAME,CAAAA,QAAd,CAAgC,4GAAhC,CAItCC,QAAAA,CAAcF,OAAA,CAAQL,eAAR,CAIlB,KAAIM,SAAW,IACf,IAAmB,IAAnB,EAAIC,OAAJ,CAEE,GADAD,QACI,CADO,CAAA,CACP,CAAAE,KAAMC,CAAAA,OAAN,CAAcF,OAAd,CAAJ,CAEE,IAAK,IAAIG,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,OAAYI,CAAAA,MAAhC,CAAwCD,CAAA,EAAxC,CACE,IAAI,EAAJ,CAASH,OAAA,CAAYG,CAAZ,CAAT,GAA4B,EAA5B,CAAiCN,KAAMQ,CAAAA,KAAvC,CAA8C,CAC5CN,QAAA,CAAW,CAAA,CACX,MAF4C,CAA9C,CAHJ,IASEA,SAAA,CAAW,EAAX,CAAgBC,OAAhB,GAAgC,EAAhC,CAAqCH,KAAMQ,CAAAA,KAI/CT,KAAKU,CAAAA,aAAL,CAAqB,CAAYP,QAAZ,CA3BuB,CAD3BL,CA+BnBa,eAAgBA,QAAS,CAACX,IAAD,CAAOC,KAAP,CAAcC,OAAd,CAAuB,CAC1CU,OAAAA;AAAcjB,MAAA,CAAO,CAAEQ,SAAUU,IAAAA,EAAZ,CAAuBC,SAAUD,IAAAA,EAAjC,CAAP,CAAqDZ,KAArD,CAIiB,KAAnC,EAAID,IAAKU,CAAAA,aAAcP,CAAAA,QAAvB,GACES,OAAYT,CAAAA,QADd,CACyBH,IAAKU,CAAAA,aAAcP,CAAAA,QAD5C,CAIA,KAAIY,QAAU,EAIdtB,cAAcuB,CAAAA,OAAd,CAAsBf,KAAMa,CAAAA,QAA5B,CAAsC,QAAS,CAACG,KAAD,CAAQ,CACxC,IAAb,EAAIA,KAAJ,GAGqB,QAArB,GAAI,MAAOA,MAAX,EAAkD,QAAlD,GAAiC,MAAOA,MAAxC,CACEF,OADF,EACaE,KADb,CAG0CrB,OAAA,CAAQ,CAAA,CAAR,CAAe,oEAAf,CAN1C,CADqD,CAAvD,CAWImB,QAAJ,GACEH,OAAYE,CAAAA,QADd,CACyBC,OADzB,CAIA,OAAOH,QA5BuC,CA/B7Bd,CAzBiH;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/ReactDOMOption.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$ReactDOMOption\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactDOMSelect = require('./ReactDOMSelect');\n\nvar assign = require('./Object.assign');\nvar warning = require('fbjs/lib/warning');\n\nvar valueContextKey = ReactDOMSelect.valueContextKey;\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, context) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;\n    }\n\n    // Look up whether this option is 'selected' via context\n    var selectValue = context[valueContextKey];\n\n    // If context key is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === '' + props.value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === '' + props.value;\n      }\n    }\n\n    inst._wrapperState = { selected: selected };\n  },\n\n  getNativeProps: function (inst, props, context) {\n    var nativeProps = assign({ selected: undefined, children: undefined }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      nativeProps.selected = inst._wrapperState.selected;\n    }\n\n    var content = '';\n\n    // Flatten children and warn if they aren't strings or numbers;\n    // invalid types are ignored.\n    ReactChildren.forEach(props.children, function (child) {\n      if (child == null) {\n        return;\n      }\n      if (typeof child === 'string' || typeof child === 'number') {\n        content += child;\n      } else {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;\n      }\n    });\n\n    if (content) {\n      nativeProps.children = content;\n    }\n\n    return nativeProps;\n  }\n\n};\n\nmodule.exports = ReactDOMOption;\n};"],
"names":["shadow$provide","global","require","module","exports","ReactChildren","ReactDOMSelect","assign","warning","valueContextKey","ReactDOMOption","mountWrapper","inst","props","context","selected","selectValue","Array","isArray","i","length","value","_wrapperState","getNativeProps","nativeProps","undefined","children","content","forEach","child"]
}
