shadow$provide.module$node_modules$react_offcanvas$node_modules$react$lib$EventPluginHub=function(global,require,module,exports){function validateInstanceHandle(){warning(InstanceHandle&&InstanceHandle.traverseTwoPhase&&InstanceHandle.traverseEnterLeave,"InstanceHandle not injected before use!")}var EventPluginRegistry=require("module$node_modules$react_offcanvas$node_modules$react$lib$EventPluginRegistry"),EventPluginUtils=require("module$node_modules$react_offcanvas$node_modules$react$lib$EventPluginUtils"),
ReactErrorUtils=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactErrorUtils"),accumulateInto=require("module$node_modules$react_offcanvas$node_modules$react$lib$accumulateInto"),forEachAccumulated=require("module$node_modules$react_offcanvas$node_modules$react$lib$forEachAccumulated"),invariant=require("module$node_modules$fbjs$lib$invariant"),warning=require("module$node_modules$fbjs$lib$warning"),listenerBank={},eventQueue=null,executeDispatchesAndRelease=function(event,
simulated){event&&(EventPluginUtils.executeDispatchesInOrder(event,simulated),event.isPersistent()||event.constructor.release(event))},executeDispatchesAndReleaseSimulated=function(e){return executeDispatchesAndRelease(e,!0)},executeDispatchesAndReleaseTopLevel=function(e){return executeDispatchesAndRelease(e,!1)},InstanceHandle=null;module.exports={injection:{injectMount:EventPluginUtils.injection.injectMount,injectInstanceHandle:function(InjectedInstanceHandle){InstanceHandle=InjectedInstanceHandle;
validateInstanceHandle()},getInstanceHandle:function(){validateInstanceHandle();return InstanceHandle},injectEventPluginOrder:EventPluginRegistry.injectEventPluginOrder,injectEventPluginsByName:EventPluginRegistry.injectEventPluginsByName},eventNameDispatchConfigs:EventPluginRegistry.eventNameDispatchConfigs,registrationNameModules:EventPluginRegistry.registrationNameModules,putListener:function(id,registrationName,listener){"function"!==typeof listener?invariant(!1,"Expected %s listener to be a function, instead got type %s",
registrationName,typeof listener):void 0;(listenerBank[registrationName]||(listenerBank[registrationName]={}))[id]=listener;var PluginModule=EventPluginRegistry.registrationNameModules[registrationName];PluginModule&&PluginModule.didPutListener&&PluginModule.didPutListener(id,registrationName,listener)},getListener:function(id,registrationName){return(registrationName=listenerBank[registrationName])&&registrationName[id]},deleteListener:function(id,registrationName){var PluginModule=EventPluginRegistry.registrationNameModules[registrationName];
PluginModule&&PluginModule.willDeleteListener&&PluginModule.willDeleteListener(id,registrationName);(registrationName=listenerBank[registrationName])&&delete registrationName[id]},deleteAllListeners:function(id){for(var registrationName in listenerBank)if(listenerBank[registrationName][id]){var PluginModule=EventPluginRegistry.registrationNameModules[registrationName];PluginModule&&PluginModule.willDeleteListener&&PluginModule.willDeleteListener(id,registrationName);delete listenerBank[registrationName][id]}},
extractEvents:function(topLevelType,topLevelTarget,topLevelTargetID,nativeEvent,nativeEventTarget){for(var events,plugins=EventPluginRegistry.plugins,i=0;i<plugins.length;i++){var possiblePlugin=plugins[i];possiblePlugin&&(possiblePlugin=possiblePlugin.extractEvents(topLevelType,topLevelTarget,topLevelTargetID,nativeEvent,nativeEventTarget))&&(events=accumulateInto(events,possiblePlugin))}return events},enqueueEvents:function(events){events&&(eventQueue=accumulateInto(eventQueue,events))},processEventQueue:function(simulated){var processingEventQueue=
eventQueue;eventQueue=null;simulated?forEachAccumulated(processingEventQueue,executeDispatchesAndReleaseSimulated):forEachAccumulated(processingEventQueue,executeDispatchesAndReleaseTopLevel);eventQueue?invariant(!1,"processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."):void 0;ReactErrorUtils.rethrowCaughtError()},__purge:function(){listenerBank={}},__getListenerBank:function(){return listenerBank}}}
//# sourceMappingURL=module$node_modules$react_offcanvas$node_modules$react$lib$EventPluginHub.js.map
