{
"version":3,
"file":"module$node_modules$react_date_picker$dist$cjs$shared$dates.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAExHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,MAAR,CAAiBJ,OAAQK,CAAAA,QAAzB,CAAoC,IAAK,EACzC,KAAIC,aAAeR,OAAA,CAAQ,0DAAR,CAqBnBE,QAAQK,CAAAA,QAAR,CAdAA,QAAiB,CAACE,SAAD,CAAYC,IAAZ,CAAkB,CAC/B,OAAQD,SAAR,EACI,KAAK,QAAL,CACI,MAAO,GAAID,YAAaG,CAAAA,cAAjB,EAAiCD,IAAjC,CACX,MAAK,MAAL,CACI,MAAO,GAAIF,YAAaI,CAAAA,YAAjB,EAA+BF,IAA/B,CACX,MAAK,OAAL,CACI,MAAO,GAAIF,YAAaK,CAAAA,aAAjB,EAAgCH,IAAhC,CACX;KAAK,KAAL,CACI,MAAO,GAAIF,YAAaM,CAAAA,WAAjB,EAA8BJ,IAA9B,CACX,SACI,KAAUK,MAAJ,CAAU,qBAAsBC,CAAAA,MAAtB,CAA6BP,SAA7B,CAAV,CAAN,CAVR,CAD+B,CAmCnCP,QAAQI,CAAAA,MAAR,CAdAA,QAAe,CAACG,SAAD,CAAYC,IAAZ,CAAkB,CAC7B,OAAQD,SAAR,EACI,KAAK,QAAL,CACI,MAAO,GAAID,YAAaS,CAAAA,YAAjB,EAA+BP,IAA/B,CACX,MAAK,MAAL,CACI,MAAO,GAAIF,YAAaU,CAAAA,UAAjB,EAA6BR,IAA7B,CACX,MAAK,OAAL,CACI,MAAO,GAAIF,YAAaW,CAAAA,WAAjB,EAA8BT,IAA9B,CACX,MAAK,KAAL,CACI,MAAO,GAAIF,YAAaY,CAAAA,SAAjB,EAA4BV,IAA5B,CACX,SACI,KAAUK,MAAJ,CAAU,qBAAsBC,CAAAA,MAAtB,CAA6BP,SAA7B,CAAV,CAAN,CAVR,CAD6B,CAhCuF;",
"sources":["node_modules/react-date-picker/dist/cjs/shared/dates.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_date_picker$dist$cjs$shared$dates\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEnd = exports.getBegin = void 0;\nvar date_utils_1 = require(\"@wojtekmaj/date-utils\");\n/**\n * Returns the beginning of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nfunction getBegin(rangeType, date) {\n    switch (rangeType) {\n        case 'decade':\n            return (0, date_utils_1.getDecadeStart)(date);\n        case 'year':\n            return (0, date_utils_1.getYearStart)(date);\n        case 'month':\n            return (0, date_utils_1.getMonthStart)(date);\n        case 'day':\n            return (0, date_utils_1.getDayStart)(date);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\nexports.getBegin = getBegin;\n/**\n * Returns the end of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nfunction getEnd(rangeType, date) {\n    switch (rangeType) {\n        case 'decade':\n            return (0, date_utils_1.getDecadeEnd)(date);\n        case 'year':\n            return (0, date_utils_1.getYearEnd)(date);\n        case 'month':\n            return (0, date_utils_1.getMonthEnd)(date);\n        case 'day':\n            return (0, date_utils_1.getDayEnd)(date);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\nexports.getEnd = getEnd;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","getEnd","getBegin","date_utils_1","rangeType","date","getDecadeStart","getYearStart","getMonthStart","getDayStart","Error","concat","getDecadeEnd","getYearEnd","getMonthEnd","getDayEnd"]
}
