{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$isTextInputElement.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,6EAAA,CAAkG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiB1I,IAAIC,oBAAsB,CACxB,MAAS,CAAA,CADe,CAExB,KAAQ,CAAA,CAFgB,CAGxB,SAAY,CAAA,CAHY,CAIxB,iBAAkB,CAAA,CAJM,CAKxB,MAAS,CAAA,CALe,CAMxB,MAAS,CAAA,CANe,CAOxB,OAAU,CAAA,CAPc,CAQxB,SAAY,CAAA,CARY,CASxB,MAAS,CAAA,CATe,CAUxB,OAAU,CAAA,CAVc,CAWxB,IAAO,CAAA,CAXiB,CAYxB,KAAQ,CAAA,CAZgB,CAaxB,KAAQ,CAAA,CAbgB,CAcxB,IAAO,CAAA,CAdiB,CAexB,KAAQ,CAAA,CAfgB,CAuB1BF,OAAOC,CAAAA,OAAP,CALAE,QAA2B,CAACC,IAAD,CAAO,CAChC,IAAIC,SAAWD,IAAXC,EAAmBD,IAAKC,CAAAA,QAAxBA,EAAoCD,IAAKC,CAAAA,QAASC,CAAAA,WAAd,EACxC,OAAOD,SAAP,GAAiC,OAAjC,GAAoBA,QAApB,EAA4CH,mBAAA,CAAoBE,IAAKG,CAAAA,IAAzB,CAA5C,EAA2F,UAA3F,GAA8EF,QAA9E,CAFgC,CAnCwG;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/isTextInputElement.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$isTextInputElement\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextInputElement\n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\nvar supportedInputTypes = {\n  'color': true,\n  'date': true,\n  'datetime': true,\n  'datetime-local': true,\n  'email': true,\n  'month': true,\n  'number': true,\n  'password': true,\n  'range': true,\n  'search': true,\n  'tel': true,\n  'text': true,\n  'time': true,\n  'url': true,\n  'week': true\n};\n\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');\n}\n\nmodule.exports = isTextInputElement;\n};"],
"names":["shadow$provide","global","require","module","exports","supportedInputTypes","isTextInputElement","elem","nodeName","toLowerCase","type"]
}
