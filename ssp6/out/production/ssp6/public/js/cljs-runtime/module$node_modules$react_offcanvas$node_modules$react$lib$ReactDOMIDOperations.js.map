{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$ReactDOMIDOperations.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,+EAAA,CAAoG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAe5I,IAAIC,sBAAwBH,OAAA,CAAQ,kFAAR,CAA5B,CACII,sBAAwBJ,OAAA,CAAQ,kFAAR,CAD5B,CAEIK,WAAaL,OAAA,CAAQ,uEAAR,CACbM,OAAAA,CAAYN,OAAA,CAAQ,sEAAR,CAEhB;IAAIO,UAAYP,OAAA,CAAQ,wCAAR,CAAhB,CAQIQ,wBAA0B,CAC5BC,wBAAyB,sEADG,CAE5BC,MAAO,iDAFqB,CAQ1BC,QAAAA,CAAuB,CAWzBC,mBAAoBA,QAAS,CAACC,EAAD,CAAKC,IAAL,CAAWC,KAAX,CAAkB,CACzCC,EAAAA,CAAOX,UAAWY,CAAAA,OAAX,CAAmBJ,EAAnB,CACTL,wBAAwBU,CAAAA,cAAxB,CAAuCJ,IAAvC,CAAF,CAAyFP,SAAA,CAAU,CAAA,CAAV,CAAiB,6BAAjB,CAAgDC,uBAAA,CAAwBM,IAAxB,CAAhD,CAAzF,CAA6LK,IAAAA,EAKhL,KAAb,EAAIJ,KAAJ,CACEX,qBAAsBgB,CAAAA,mBAAtB,CAA0CJ,EAA1C;AAAgDF,IAAhD,CAAsDC,KAAtD,CADF,CAGEX,qBAAsBiB,CAAAA,sBAAtB,CAA6CL,EAA7C,CAAmDF,IAAnD,CAV2C,CAXtB,CAiCzBQ,qCAAsCA,QAAS,CAACT,EAAD,CAAKU,MAAL,CAAa,CACtDP,EAAAA,CAAOX,UAAWY,CAAAA,OAAX,CAAmBJ,EAAnB,CACXV,sBAAsBqB,CAAAA,gCAAtB,CAAuDR,EAAvD,CAA6DO,MAA7D,CAF0D,CAjCnC,CA6CzBE,kCAAmCA,QAAS,CAACC,OAAD,CAAUH,MAAV,CAAkB,CAC5D,IAAK,IAAII,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,OAAQE,CAAAA,MAA5B,CAAoCD,CAAA,EAApC,CACED,OAAA,CAAQC,CAAR,CAAWE,CAAAA,UAAX,CAAwBxB,UAAWY,CAAAA,OAAX,CAAmBS,OAAA,CAAQC,CAAR,CAAWG,CAAAA,QAA9B,CAE1B3B,sBAAsB4B,CAAAA,cAAtB,CAAqCL,OAArC,CAA8CH,MAA9C,CAJ4D,CA7CrC,CAqD3BjB,OAAU0B,CAAAA,cAAV,CAAyBrB,OAAzB,CAA+C,sBAA/C,CAAuE,CACrEW,qCAAsC,sCAD+B;AAErEG,kCAAmC,mCAFkC,CAAvE,CAKAxB,OAAOC,CAAAA,OAAP,CAAiBS,OA9F2H;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/ReactDOMIDOperations.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$ReactDOMIDOperations\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIDOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar ReactMount = require('./ReactMount');\nvar ReactPerf = require('./ReactPerf');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Errors for properties that should not be updated with `updatePropertyByID()`.\n *\n * @type {object}\n * @private\n */\nvar INVALID_PROPERTY_ERRORS = {\n  dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',\n  style: '`style` must be set using `updateStylesByID()`.'\n};\n\n/**\n * Operations used to process updates to DOM nodes.\n */\nvar ReactDOMIDOperations = {\n\n  /**\n   * Updates a DOM node with new property values. This should only be used to\n   * update DOM properties in `DOMProperty`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} name A valid property name, see `DOMProperty`.\n   * @param {*} value New value of the property.\n   * @internal\n   */\n  updatePropertyByID: function (id, name, value) {\n    var node = ReactMount.getNode(id);\n    !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;\n\n    // If we're updating to null or undefined, we should remove the property\n    // from the DOM node instead of inadvertantly setting to a string. This\n    // brings us in line with the same behavior we have on initial render.\n    if (value != null) {\n      DOMPropertyOperations.setValueForProperty(node, name, value);\n    } else {\n      DOMPropertyOperations.deleteValueForProperty(node, name);\n    }\n  },\n\n  /**\n   * Replaces a DOM node that exists in the document with markup.\n   *\n   * @param {string} id ID of child to be replaced.\n   * @param {string} markup Dangerous markup to inject in place of child.\n   * @internal\n   * @see {Danger.dangerouslyReplaceNodeWithMarkup}\n   */\n  dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {\n    var node = ReactMount.getNode(id);\n    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);\n  },\n\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markup List of markup strings.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function (updates, markup) {\n    for (var i = 0; i < updates.length; i++) {\n      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);\n    }\n    DOMChildrenOperations.processUpdates(updates, markup);\n  }\n};\n\nReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {\n  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',\n  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'\n});\n\nmodule.exports = ReactDOMIDOperations;\n};"],
"names":["shadow$provide","global","require","module","exports","DOMChildrenOperations","DOMPropertyOperations","ReactMount","ReactPerf","invariant","INVALID_PROPERTY_ERRORS","dangerouslySetInnerHTML","style","ReactDOMIDOperations","updatePropertyByID","id","name","value","node","getNode","hasOwnProperty","undefined","setValueForProperty","deleteValueForProperty","dangerouslyReplaceNodeWithMarkupByID","markup","dangerouslyReplaceNodeWithMarkup","dangerouslyProcessChildrenUpdates","updates","i","length","parentNode","parentID","processUpdates","measureMethods"]
}
