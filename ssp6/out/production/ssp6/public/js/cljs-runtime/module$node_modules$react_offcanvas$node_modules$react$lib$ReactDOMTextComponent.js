shadow$provide.module$node_modules$react_offcanvas$node_modules$react$lib$ReactDOMTextComponent=function(global,require,module,exports){var DOMChildrenOperations=require("module$node_modules$react_offcanvas$node_modules$react$lib$DOMChildrenOperations"),DOMPropertyOperations=require("module$node_modules$react_offcanvas$node_modules$react$lib$DOMPropertyOperations"),ReactComponentBrowserEnvironment=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactComponentBrowserEnvironment"),
ReactMount=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactMount");global=require("module$node_modules$react_offcanvas$node_modules$react$lib$Object_assign");var escapeTextContentForBrowser=require("module$node_modules$react_offcanvas$node_modules$react$lib$escapeTextContentForBrowser"),setTextContent=require("module$node_modules$react_offcanvas$node_modules$react$lib$setTextContent"),validateDOMNesting=require("module$node_modules$react_offcanvas$node_modules$react$lib$validateDOMNesting");
require=function(props){};global(require.prototype,{construct:function(text){this._currentElement=text;this._stringText=""+text;this._rootNodeID=null;this._mountIndex=0},mountComponent:function(rootID,transaction,context){context[validateDOMNesting.ancestorInfoContextKey]&&validateDOMNesting("span",null,context[validateDOMNesting.ancestorInfoContextKey]);this._rootNodeID=rootID;if(transaction.useCreateElement)return transaction=context[ReactMount.ownerDocumentContextKey].createElement("span"),DOMPropertyOperations.setAttributeForID(transaction,
rootID),ReactMount.getID(transaction),setTextContent(transaction,this._stringText),transaction;context=escapeTextContentForBrowser(this._stringText);return transaction.renderToStaticMarkup?context:"\x3cspan "+DOMPropertyOperations.createMarkupForID(rootID)+"\x3e"+context+"\x3c/span\x3e"},receiveComponent:function(nextText,transaction){nextText!==this._currentElement&&(this._currentElement=nextText,nextText=""+nextText,nextText!==this._stringText&&(this._stringText=nextText,transaction=ReactMount.getNode(this._rootNodeID),
DOMChildrenOperations.updateTextContent(transaction,nextText)))},unmountComponent:function(){ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID)}});module.exports=require}
//# sourceMappingURL=module$node_modules$react_offcanvas$node_modules$react$lib$ReactDOMTextComponent.js.map
