shadow$provide.module$node_modules$react_csv$lib$core=function(global,require,module,exports){function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}return Array.from(arr)}Object.defineProperty(exports,"__esModule",{value:!0});var _typeof="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?
"symbol":typeof obj},isSafari=exports.isSafari=function(){return/^((?!chrome|android).)*safari/i.test(navigator.userAgent)},isJsons=exports.isJsons=function(array){return Array.isArray(array)&&array.every(function(row){return"object"===("undefined"===typeof row?"undefined":_typeof(row))&&!(row instanceof Array)})},isArrays=exports.isArrays=function(array){return Array.isArray(array)&&array.every(function(row){return Array.isArray(row)})},jsonsHeaders=exports.jsonsHeaders=function(array){return Array.from(array.map(function(json){return Object.keys(json)}).reduce(function(a,
b){return new Set([].concat(_toConsumableArray(a),_toConsumableArray(b)))},[]))},jsons2arrays=exports.jsons2arrays=function(jsons,headers){var headerLabels=headers=headers||jsonsHeaders(jsons),headerKeys=headers;isJsons(headers)&&(headerLabels=headers.map(function(header){return header.label}),headerKeys=headers.map(function(header){return header.key}));jsons=jsons.map(function(object){return headerKeys.map(function(header){return getHeaderValue(header,object)})});return[headerLabels].concat(_toConsumableArray(jsons))},
getHeaderValue=exports.getHeaderValue=function(property,obj){var foundValue=property.replace(/\[([^\]]+)]/g,".$1").split(".").reduce(function(o,p,i,arr){o=o[p];if(void 0===o||null===o)arr.splice(1);else return o},obj);return void 0===foundValue?property in obj?obj[property]:"":foundValue},elementOrEmpty=exports.elementOrEmpty=function(element){return"undefined"===typeof element||null===element?"":element},joiner=exports.joiner=function(data){var separator=1<arguments.length&&void 0!==arguments[1]?
arguments[1]:",",enclosingCharacter=2<arguments.length&&void 0!==arguments[2]?arguments[2]:'"';return data.filter(function(e){return e}).map(function(row){return row.map(function(element){return elementOrEmpty(element)}).map(function(column){return""+enclosingCharacter+column+enclosingCharacter}).join(separator)}).join("\n")},arrays2csv=exports.arrays2csv=function(data,headers,separator,enclosingCharacter){return joiner(headers?[headers].concat(_toConsumableArray(data)):data,separator,enclosingCharacter)},
jsons2csv=exports.jsons2csv=function(data,headers,separator,enclosingCharacter){return joiner(jsons2arrays(data,headers),separator,enclosingCharacter)},string2csv=exports.string2csv=function(data,headers,separator,enclosingCharacter){return headers?headers.join(separator)+"\n"+data:data.replace(/"/g,'""')},toCSV=exports.toCSV=function(data,headers,separator,enclosingCharacter){if(isJsons(data))return jsons2csv(data,headers,separator,enclosingCharacter);if(isArrays(data))return arrays2csv(data,headers,
separator,enclosingCharacter);if("string"===typeof data)return string2csv(data,headers,separator);throw new TypeError('Data should be a "String", "Array of arrays" OR "Array of objects" ');};exports.buildURI=function(data,uFEFF,headers,separator,enclosingCharacter){data=toCSV(data,headers,separator,enclosingCharacter);headers=isSafari()?"application/csv":"text/csv";separator=new Blob([uFEFF?"﻿":"",data],{type:headers});enclosingCharacter=window.URL||window.webkitURL;return"undefined"===typeof enclosingCharacter.createObjectURL?
"data:"+headers+";charset\x3dutf-8,"+(uFEFF?"﻿":"")+data:enclosingCharacter.createObjectURL(separator)}}
//# sourceMappingURL=module$node_modules$react_csv$lib$core.js.map
