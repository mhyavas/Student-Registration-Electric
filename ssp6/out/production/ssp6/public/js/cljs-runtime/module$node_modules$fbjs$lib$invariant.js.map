{
"version":3,
"file":"module$node_modules$fbjs$lib$invariant.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkDnGD,MAAOC,CAAAA,OAAP,CAzBAC,QAAkB,CAACC,SAAD,CAAYC,MAAZ,CAAoBC,CAApB,CAAuBC,CAAvB,CAA0BC,CAA1B,CAA6BC,CAA7B,CAAgCC,CAAhC,CAAmCC,CAAnC,CAAsC,CAEpD,GAAeC,IAAAA,EAAf,GAAIP,MAAJ,CACE,KAAUQ,MAAJ,CAAU,8CAAV,CAAN,CAIJ,GAAI,CAACT,SAAL,CAAgB,CAEd,GAAeQ,IAAAA,EAAf,GAAIP,MAAJ,CACES,SAAA,CAAYD,KAAJ,CAAU,+HAAV,CADV,KAEO,CACL,IAAIE,KAAO,CAACT,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAAUC,CAAV,CAAaC,CAAb,CAAgBC,CAAhB,CAAX,CACIK,SAAW,CACfF,UAAA,CAAYD,KAAJ,CAAUR,MAAOY,CAAAA,OAAP,CAAe,KAAf,CAAsB,QAAS,EAAG,CAClD,MAAOF,KAAA,CAAKC,QAAA,EAAL,CAD2C,CAAlC,CAAV,CAGRF;SAAMI,CAAAA,IAAN,CAAa,qBANR,CASPJ,SAAMK,CAAAA,WAAN,CAAoB,CACpB,MAAML,UAAN,CAdc,CAPsC,CAzB2C;",
"sources":["node_modules/fbjs/lib/invariant.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$invariant\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n};"],
"names":["shadow$provide","global","require","module","exports","invariant","condition","format","a","b","c","d","e","f","undefined","Error","error","args","argIndex","replace","name","framesToPop"]
}
