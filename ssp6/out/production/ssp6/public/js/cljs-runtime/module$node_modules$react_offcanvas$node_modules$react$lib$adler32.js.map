{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$adler32.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,kEAAA,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA0C/HD,MAAOC,CAAAA,OAAP,CArBAC,QAAgB,CAACC,IAAD,CAAO,CAMrB,IALA,IAAIC,EAAI,CAAR,CACIC,EAAI,CADR,CAEIC,EAAI,CAFR,CAGIC,EAAIJ,IAAKK,CAAAA,MAHb,CAIIC,EAAIF,CAAJE,CAAS,CAAA,CACb,CAAOH,CAAP,CAAWG,CAAX,CAAA,CAAc,CACZ,IAAA,CAAOH,CAAP,CAAWI,IAAKC,CAAAA,GAAL,CAASL,CAAT,CAAa,IAAb,CAAmBG,CAAnB,CAAX,CAAkCH,CAAlC,EAAuC,CAAvC,CACED,CAAA,GAAMD,CAAN,EAAWD,IAAKS,CAAAA,UAAL,CAAgBN,CAAhB,CAAX,GAAkCF,CAAlC,EAAuCD,IAAKS,CAAAA,UAAL,CAAgBN,CAAhB,CAAoB,CAApB,CAAvC,GAAkEF,CAAlE,EAAuED,IAAKS,CAAAA,UAAL,CAAgBN,CAAhB,CAAoB,CAApB,CAAvE,GAAkGF,CAAlG,EAAuGD,IAAKS,CAAAA,UAAL,CAAgBN,CAAhB,CAAoB,CAApB,CAAvG,CAEFF,EAAA,EAjBMS,KAkBNR,EAAA,EAlBMQ,KAaM,CAOd,IAAA,CAAOP,CAAP,CAAWC,CAAX,CAAcD,CAAA,EAAd,CACED,CAAA,EAAKD,CAAL,EAAUD,IAAKS,CAAAA,UAAL,CAAgBN,CAAhB,CAIZ,OAFAF,EAEA,CAzBQS,KAyBR,CADAR,CACA,CAzBQQ,KAyBR,EAAgB,EAlBK,CArBwG;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/adler32.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$adler32\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule adler32\n */\n\n'use strict';\n\nvar MOD = 65521;\n\n// adler32 is not cryptographically strong, and is only used to sanity check that\n// markup generated on the server matches the markup generated on the client.\n// This implementation (a modified version of the SheetJS version) has been optimized\n// for our use case, at the expense of conforming to the adler32 specification\n// for non-ascii inputs.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  var i = 0;\n  var l = data.length;\n  var m = l & ~0x3;\n  while (i < m) {\n    for (; i < Math.min(i + 4096, m); i += 4) {\n      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n    }\n    a %= MOD;\n    b %= MOD;\n  }\n  for (; i < l; i++) {\n    b += a += data.charCodeAt(i);\n  }\n  a %= MOD;\n  b %= MOD;\n  return a | b << 16;\n}\n\nmodule.exports = adler32;\n};"],
"names":["shadow$provide","global","require","module","exports","adler32","data","a","b","i","l","length","m","Math","min","charCodeAt","MOD"]
}
