{"version":3,"sources":["demo/demo_chat.cljc"],"mappings":";AAQA,AAEA","names":[],"sourcesContent":["(ns demo.demo-chat\r\n  (:import [hyperfiddle.electric Pending])\r\n  (:require [contrib.data :refer [pad]]\r\n            [hyperfiddle.electric :as e]\r\n            [hyperfiddle.electric-dom2 :as dom]\r\n            [hyperfiddle.electric-ui4 :as ui]))\r\n\r\n#?(:clj (defonce !msgs (atom (list))))\r\n(e/def msgs (e/server (reverse (pad 10 nil (e/watch !msgs)))))\r\n\r\n(e/defn Chat []\r\n  (e/client\r\n    (try\r\n      (dom/h1 (dom/text \"Multiplayer chat app in 30 LOC\"))\r\n      (dom/p (dom/text \"try two tabs!\"))\r\n      (dom/ul (dom/style {:padding-left \"1.5em\"})\r\n        (e/server\r\n          (e/for-by identity [msg msgs]\r\n            (e/client\r\n              (dom/li (dom/style {:visibility (if (nil? msg) \"hidden\" \"visible\")})\r\n                (dom/text msg))))))\r\n\r\n      (dom/input\r\n        (dom/props {:placeholder \"Type a message\"})\r\n        (ui/on-submit (e/fn [v] (e/server (swap! !msgs #(cons v (take 9 %)))))))\r\n      (catch Pending e\r\n        (dom/style {:background-color \"yellow\"})))))\r\n\r\n; A chat app. Open it in two tabs. When you type a message, both tabs update.\r\n; This works because both tabs share a single JVM which means they subscribe to the same atom."]}