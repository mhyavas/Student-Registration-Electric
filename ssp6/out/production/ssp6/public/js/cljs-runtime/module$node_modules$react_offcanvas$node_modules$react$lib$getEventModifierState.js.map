{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$getEventModifierState.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,gFAAA,CAAqG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA8B7IC,QAASA,oBAAmB,CAACC,MAAD,CAAS,CAEnC,IAAIC,YADiBC,IACYD,CAAAA,WACjC,OAAIA,YAAYE,CAAAA,gBAAhB,CACSF,WAAYE,CAAAA,gBAAZ,CAA6BH,MAA7B,CADT,CAIO,CADHI,MACG,CADOC,iBAAA,CAAkBL,MAAlB,CACP,EAAU,CAAC,CAACC,WAAA,CAAYG,MAAZ,CAAZ,CAAmC,CAAA,CAPP,CAVrC,IAAIC,kBAAoB,CACtB,IAAO,QADe,CAEtB,QAAW,SAFW,CAGtB,KAAQ,SAHc,CAItB,MAAS,UAJa,CAwBxBR,OAAOC,CAAAA,OAAP,CAJAQ,QAA8B,CAACL,WAAD,CAAc,CAC1C,MAAOF,oBADmC,CAxCiG;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/getEventModifierState.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$getEventModifierState\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventModifierState\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  'Alt': 'altKey',\n  'Control': 'ctrlKey',\n  'Meta': 'metaKey',\n  'Shift': 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;\n};"],
"names":["shadow$provide","global","require","module","exports","modifierStateGetter","keyArg","nativeEvent","syntheticEvent","getModifierState","keyProp","modifierKeyToProp","getEventModifierState"]
}
