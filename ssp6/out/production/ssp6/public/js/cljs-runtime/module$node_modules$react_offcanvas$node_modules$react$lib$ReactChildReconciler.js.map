{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$ReactChildReconciler.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAA,+EAAA,CAAoG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAsB5IC,QAASA,iBAAgB,CAACC,cAAD,CAAiBC,KAAjB,CAAwBC,IAAxB,CAA8B,CAErD,IAAIC,UAAqCC,IAAAA,EAArCD,GAAYH,cAAA,CAAeE,IAAf,CAE0BG,QAAA,CAAQF,SAAR,CAAmB,sKAAnB,CAAqMD,IAArM,CAE7B,KAAb,EAAID,KAAJ,EAAqBE,SAArB,GACEH,cAAA,CAAeE,IAAf,CADF,CACyBI,yBAAA,CAA0BL,KAA1B;AAAiC,IAAjC,CADzB,CANqD,CAPvD,IAAIM,gBAAkBX,OAAA,CAAQ,4EAAR,CAAtB,CAEIU,0BAA4BV,OAAA,CAAQ,sFAAR,CAFhC,CAGIY,2BAA6BZ,OAAA,CAAQ,uFAAR,CAHjC,CAIIa,oBAAsBb,OAAA,CAAQ,gFAAR,CAJ1B,CAKIS,QAAUT,OAAA,CAAQ,sCAAR,CAsGdC;MAAOC,CAAAA,OAAP,CApF2BY,CASzBC,oBAAqBA,QAAS,CAACC,gBAAD,CAAmBC,WAAnB,CAAgCC,OAAhC,CAAyC,CACrE,GAAwB,IAAxB,EAAIF,gBAAJ,CACE,MAAO,KAELZ,YAAAA,CAAiB,EACrBS,oBAAA,CAAoBG,gBAApB,CAAsCb,gBAAtC,CAAwDC,WAAxD,CACA,OAAOA,YAN8D,CAT9CU,CA4BzBK,eAAgBA,QAAS,CAACC,YAAD,CAAeC,YAAf,CAA6BJ,WAA7B,CAA0CC,OAA1C,CAAmD,CAM1E,GAAI,CAACG,YAAL,EAAqB,CAACD,YAAtB,CACE,MAAO,KAGT,KADAd,IAAIA,IACJ,GAAae,aAAb,CACE,GAAKA,YAAaC,CAAAA,cAAb,CAA4BhB,IAA5B,CAAL,CAAA,CAGA,IAAIiB,UAAYH,YAAZG,EAA4BH,YAAA,CAAad,IAAb,CAAhC,CACIkB,YAAcD,SAAdC,EAA2BD,SAAUE,CAAAA,eADzC;AAEIC,YAAcL,YAAA,CAAaf,IAAb,CACD,KAAjB,EAAIiB,SAAJ,EAAyBX,0BAAA,CAA2BY,WAA3B,CAAwCE,WAAxC,CAAzB,EACEf,eAAgBgB,CAAAA,gBAAhB,CAAiCJ,SAAjC,CAA4CG,WAA5C,CAAyDT,WAAzD,CAAsEC,OAAtE,CACA,CAAAG,YAAA,CAAaf,IAAb,CAAA,CAAqBiB,SAFvB,GAIMA,SAKJ,EAJEZ,eAAgBiB,CAAAA,gBAAhB,CAAiCL,SAAjC,CAA4CjB,IAA5C,CAIF,CADIuB,SACJ,CADwBnB,yBAAA,CAA0BgB,WAA1B,CAAuC,IAAvC,CACxB,CAAAL,YAAA,CAAaf,IAAb,CAAA,CAAqBuB,SATvB,CANA,CAmBF,IAAKvB,IAAL,GAAac,aAAb,CACM,CAAAA,YAAaE,CAAAA,cAAb,CAA4BhB,IAA5B,CAAJ,EAA2Ce,YAA3C,EAA2DA,YAAaC,CAAAA,cAAb,CAA4BhB,IAA5B,CAA3D,EACEK,eAAgBiB,CAAAA,gBAAhB,CAAiCR,YAAA,CAAad,IAAb,CAAjC,CAGJ;MAAOe,aAnCmE,CA5BnDP,CAyEzBgB,gBAAiBA,QAAS,CAACC,gBAAD,CAAmB,CAC3C,IAAKzB,IAAIA,IAAT,GAAiByB,iBAAjB,CACMA,gBAAiBT,CAAAA,cAAjB,CAAgChB,IAAhC,CAAJ,EAEEK,eAAgBiB,CAAAA,gBAAhB,CADoBG,gBAAAC,CAAiB1B,IAAjB0B,CACpB,CAJuC,CAzEpBlB,CAtCiH;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/ReactChildReconciler.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$ReactChildReconciler\"] = function(global,require,module,exports) {\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildReconciler\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactReconciler = require('./ReactReconciler');\n\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nfunction instantiateChild(childInstances, child, name) {\n  // We found a component instance.\n  var keyUnique = childInstances[name] === undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;\n  }\n  if (child != null && keyUnique) {\n    childInstances[name] = instantiateReactComponent(child, null);\n  }\n}\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function (nestedChildNodes, transaction, context) {\n    if (nestedChildNodes == null) {\n      return null;\n    }\n    var childInstances = {};\n    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n    return childInstances;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextChildren Flat child element maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function (prevChildren, nextChildren, transaction, context) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    if (!nextChildren && !prevChildren) {\n      return null;\n    }\n    var name;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      var prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          ReactReconciler.unmountComponent(prevChild, name);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(nextElement, null);\n        nextChildren[name] = nextChildInstance;\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        ReactReconciler.unmountComponent(prevChildren[name]);\n      }\n    }\n    return nextChildren;\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function (renderedChildren) {\n    for (var name in renderedChildren) {\n      if (renderedChildren.hasOwnProperty(name)) {\n        var renderedChild = renderedChildren[name];\n        ReactReconciler.unmountComponent(renderedChild);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;\n};"],
"names":["shadow$provide","global","require","module","exports","instantiateChild","childInstances","child","name","keyUnique","undefined","warning","instantiateReactComponent","ReactReconciler","shouldUpdateReactComponent","traverseAllChildren","ReactChildReconciler","instantiateChildren","nestedChildNodes","transaction","context","updateChildren","prevChildren","nextChildren","hasOwnProperty","prevChild","prevElement","_currentElement","nextElement","receiveComponent","unmountComponent","nextChildInstance","unmountChildren","renderedChildren","renderedChild"]
}
