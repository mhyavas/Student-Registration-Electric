{"version":3,"sources":["contrib/assert.cljc"],"mappings":";AAWA","names":[],"sourcesContent":["(ns contrib.assert\n  #?(:cljs (:require-macros contrib.assert))\n  (:require [hyperfiddle.rcf :refer [tests]]))\n\n(defmacro check\n  ([v] `(check some? ~v))\n  ([pred v]\n   `(let [pred# ~pred, v# ~v]\n      (when-not (pred# v#) (throw (ex-info (str \"check failed: (\" (pr-str '~pred) \" \" (pr-str '~v) \") for \" (pr-str v#)) {})))\n      v#)))\n\n(tests\n  (check nil) :throws #?(:clj clojure.lang.ExceptionInfo :cljs js/Error)\n  (check odd? 2) :throws #?(:clj clojure.lang.ExceptionInfo :cljs js/Error)\n  (check odd? 1) := 1)"],"x_google_ignoreList":[0]}