{"version":3,"sources":["app/t01.cljc"],"mappings":";;;;;;;AAeS,AAAA;;;sBAAA,8BAAAA,pDAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,kDAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,kDAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,oDAAA,pDAAMD,+DAEFE;AAFJ,AAEU,OAACC,kDAAYD,KAAK,4CAAK,AAACE;;;AAFlC,CAAA,oDAAA,pDAAMJ,+DAGFE,KAAKG;AAHT,AAIG,4DAAA,rDAACC,gDAAoBJ,2BAA4BG;;;AAJpD,CAAA,8CAAA,9CAAML;;AAAN,AAKA,AAAA,iBAAA,yBAAAF,1CAAMc;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,oDAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,sDAAA,tDAAME,iEAAQM,KAAOC;AAArB,AACE,OAASD,YAAK,AAACE,sDAAa,6CAAA,mFAAA,hIAACC,yLAAWF;;;AAD1C,CAAA,yCAAA,zCAAMP;;AAAN;AAAA,CAAA,mCAAA,WAAAC,9CAAMD;AAAN,AAAA,IAAAE,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,SAAAD;;;AAAA,AAUT,AAGA,AAGA,AAAKS,uBAAa,wEAAA,2CAAA,4DAAA,2CAAA,AAAA,1NAACC,gDAAQC,mPACoCC;AAE/D","names":["var_args","G__32911","app.t01/create-root","js/Error","node","app.t01.create_root","cljs.core.gensym","id-prefix","js/module$node_modules$react_dom$client.createRoot","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","app.t01/render","seq32912","G__32913","cljs.core/first","cljs.core/next","self__5754__auto__","root","args","reagent.core.as_element","cljs.core.into","app.t01/read-edn-str","cljs.core.partial","clojure.edn/read-string","app.t01.goog$module$goog$math$Long.fromString"],"sourcesContent":["(ns app.t01\r\n  #?(:cljs (:import [goog.math Long]))\r\n  #?(:cljs (:require-macros [app.t01 :refer [with-reagent]]))\r\n  (:require clojure.edn\r\n            contrib.ednish\r\n            [hyperfiddle.electric :as e]\r\n            [hyperfiddle.electric-dom2 :as dom]\r\n            [hyperfiddle.history :as history]\r\n            #?(:cljs [\"react\" :as react])\r\n            #?(:cljs [\"reactive-button\" :as ReactiveButton])\r\n            #?(:cljs [\"react-dom/client\" :as ReactDom])\r\n            #?(:cljs [reagent.core :as r])\r\n            #?(:cljs [reagent.dom :as rdom])\r\n            #?(:cljs [\"react-data-table-component$default\" :as DataTable])))\r\n\r\n#?(:cljs (defn create-root\r\n           \"See https://reactjs.org/docs/react-dom-client.html#createroot\"\r\n           ([node] (create-root node (str (gensym))))\r\n           ([node id-prefix]\r\n            (ReactDom/createRoot node #js {:identifierPrefix id-prefix}))))\r\n#?(:cljs (defn render [root & args]\r\n           (.render root (r/as-element (into [:f>] args)))))\r\n\r\n\r\n(defmacro with-reagent [& args]\r\n  `(dom/div\r\n     (let [root# (create-root dom/node)]\r\n       (render root# ~@args)\r\n       (e/on-unmount #(.unmount root#)))))\r\n\r\n(e/defn MainPage []\r\n  (e/client\r\n    (dom/text \"This is the main page!\")))\r\n(e/defn Page [[page x]]\r\n  (case page\r\n    ::main (history/router 1 (e/server (MainPage.)))))\r\n(def read-edn-str (partial clojure.edn/read-string\r\n                           {:readers #?(:cljs {'goog.math/Long goog.math.Long/fromString} ; datomic cloud long ids\r\n                                        :clj {})}))\r\n(e/defn Test []\r\n  (e/client\r\n    (binding [dom/node js/document.body\r\n              history/encode contrib.ednish/encode-uri\r\n              history/decode #(or (contrib.ednish/decode-path % clojure.edn/read-string) [::summary])]\r\n      (history/router (history/HTML5-History.)\r\n                      #_(set! (.-title js/document) (str (clojure.string/capitalize (name (first history/route))))\r\n                              \" - Datomic Browser\")\r\n                      (dom/pre (dom/text (contrib.str/pprint-str history/route)))\r\n\r\n                      (Page. history/route)))))\r\n\r\n"]}