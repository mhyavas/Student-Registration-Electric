{"version":3,"sources":["wip/tracing.cljc"],"mappings":";AAQA,AAUA,AAMA,AASA,AAKA,AAQA,AAEA","names":[],"sourcesContent":["(ns wip.tracing\r\n  (:require [hyperfiddle.electric :as e]\r\n            [hyperfiddle.electric-dom2 :as dom]\r\n            [contrib.trace :as ct]\r\n            [contrib.trace.datascript-tracer :as ds-tracer]\r\n            [hyperfiddle.electric-ui4 :as ui]\r\n            [clojure.string :as str]))\r\n\r\n(e/defn FizzBuzzText [n]\r\n  (ct/trace :text\r\n    (ct/trace :n n)\r\n    (if-some [strs (ct/trace :strs\r\n                     (transduce (filter identity) conj nil\r\n                       [(when (zero? (mod n 5)) \"Buzz\")\r\n                        (when (zero? (mod n 3)) \"Fizz\")]))]\r\n      (str/join \"\" strs)\r\n      (str n))))\r\n\r\n(e/defn CodeFor [sym height]\r\n  (ui/edn (e/server (nth (:hyperfiddle.electric.impl.compiler/node (meta (eval `(var ~sym)))) 3))\r\n    (e/fn [_])\r\n    (dom/props {:disabled true})\r\n    (dom/style {:display \"block\" :width \"50em\", :height height})))\r\n\r\n(e/defn FizzBuzz []\r\n  (dom/div\r\n    (dom/h2 (dom/text \"an over-engineered fizzbuzz\"))\r\n    (CodeFor. `FizzBuzzText \"22em\")\r\n    (dom/br)\r\n    (let [!n (atom 0), n (e/watch !n)]\r\n      (ui/long n (e/fn [v] (reset! !n v)) (dom/style {:width \"8em\"}))\r\n      (dom/span (dom/text (FizzBuzzText. n))))))\r\n\r\n(e/defn ExceptionOrValue [n]\r\n  (ct/trace :result\r\n    [(ct/trace :throw-on-even (if (even? n) (throw (ex-info \"even!\" {:n n})) n))\r\n     (ct/trace :triple (* n 3))]))\r\n\r\n(e/defn Exceptions []\r\n  (dom/div\r\n    (dom/h2 (dom/text \"exceptions and concurrency\"))\r\n    (CodeFor. `ExceptionOrValue \"8em\")\r\n    (let [!n (atom 0), n (e/watch !n)]\r\n      (ui/long n (e/fn [v] (reset! !n v)) (dom/style {:width \"8em\"}))\r\n      (ExceptionOrValue. n))))\r\n\r\n(e/defn Note [text] (dom/em (dom/style {:display \"block\"}) (dom/text text)))\r\n\r\n(e/defn TracingDemo []\r\n  (e/client\r\n    (ds-tracer/with-defaults\r\n      (FizzBuzz.)\r\n      (dom/br)\r\n      (ds-tracer/DatascriptTraceView.)\r\n      (dom/br)\r\n      (Note. \"It's like println's, but better!\")\r\n      (Note. \"Click on 2 trace values to get the distance between them!\")\r\n      (Note. \"If the values are too close to each other increase the time granularity.\"))\r\n    (ds-tracer/with-defaults\r\n      (Exceptions.)\r\n      (dom/br)\r\n      (ds-tracer/DatascriptTraceView.)\r\n      (dom/br)\r\n      (Note. \"Note that `:triple` runs even if `:throw-on-even!` throws!\")\r\n      (Note. \"That's because Electric code runs concurrently\"))))\r\n"]}