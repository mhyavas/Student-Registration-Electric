shadow$provide.module$node_modules$react_offcanvas$node_modules$react$lib$ReactCompositeComponent=function(global,require,module,exports){function StatelessComponent(Component){}var ReactComponentEnvironment=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactComponentEnvironment"),ReactCurrentOwner=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactCurrentOwner"),ReactElement=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactElement"),
ReactInstanceMap=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactInstanceMap");global=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactPerf");var ReactPropTypeLocations=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactPropTypeLocations"),ReactPropTypeLocationNames=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactPropTypeLocationNames"),ReactReconciler=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactReconciler"),
ReactUpdateQueue=require("module$node_modules$react_offcanvas$node_modules$react$lib$ReactUpdateQueue"),assign=require("module$node_modules$react_offcanvas$node_modules$react$lib$Object_assign"),emptyObject=require("module$node_modules$fbjs$lib$emptyObject"),invariant=require("module$node_modules$fbjs$lib$invariant"),shouldUpdateReactComponent=require("module$node_modules$react_offcanvas$node_modules$react$lib$shouldUpdateReactComponent"),warning=require("module$node_modules$fbjs$lib$warning");StatelessComponent.prototype.render=
function(){var Component=ReactInstanceMap.get(this)._currentElement.type;return Component(this.props,this.context,this.updater)};var nextMountID=1;require={construct:function(element){this._currentElement=element;this._pendingStateQueue=this._pendingElement=this._instance=this._rootNodeID=null;this._pendingForceUpdate=this._pendingReplaceState=!1;this._context=this._renderedComponent=null;this._mountOrder=0;this._pendingCallbacks=this._topLevelWrapper=null},mountComponent:function(rootID,transaction,
context){this._context=context;this._mountOrder=nextMountID++;this._rootNodeID=rootID;var publicProps=this._processProps(this._currentElement.props),publicContext=this._processContext(context),Component=this._currentElement.type,canInstantiate="prototype"in Component;if(canInstantiate){ReactCurrentOwner.current=this;try{var inst=new Component(publicProps,publicContext,ReactUpdateQueue)}finally{ReactCurrentOwner.current=null}}if(!canInstantiate||null===inst||!1===inst||ReactElement.isValidElement(inst)){var renderedElement=
inst;inst=new StatelessComponent(Component)}null==inst.render?warning(!1,"%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`, returned null/false from a stateless component, or tried to render an element whose type is a function that isn't a React component.",Component.displayName||Component.name||"Component"):warning(Component.prototype&&Component.prototype.isReactComponent||!canInstantiate||!(inst instanceof Component),"%s(...): React component classes must extend React.Component.",
Component.displayName||Component.name||"Component");inst.props=publicProps;inst.context=publicContext;inst.refs=emptyObject;inst.updater=ReactUpdateQueue;this._instance=inst;ReactInstanceMap.set(inst,this);warning(!inst.getInitialState||inst.getInitialState.isReactClassApproved,"getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?",this.getName()||"a component");warning(!inst.getDefaultProps||
inst.getDefaultProps.isReactClassApproved,"getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.",this.getName()||"a component");warning(!inst.propTypes,"propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.",this.getName()||"a component");warning(!inst.contextTypes,"contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.",
this.getName()||"a component");warning("function"!==typeof inst.componentShouldUpdate,"%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.",this.getName()||"A component");warning("function"!==typeof inst.componentDidUnmount,"%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?",this.getName()||"A component");warning("function"!==
typeof inst.componentWillRecieveProps,"%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?",this.getName()||"A component");publicProps=inst.state;void 0===publicProps&&(inst.state=publicProps=null);"object"!==typeof publicProps||Array.isArray(publicProps)?invariant(!1,"%s.state: must be set to an object or null",this.getName()||"ReactCompositeComponent"):void 0;this._pendingStateQueue=null;this._pendingForceUpdate=this._pendingReplaceState=!1;inst.componentWillMount&&
(inst.componentWillMount(),this._pendingStateQueue&&(inst.state=this._processPendingState(inst.props,inst.context)));void 0===renderedElement&&(renderedElement=this._renderValidatedComponent());this._renderedComponent=this._instantiateReactComponent(renderedElement);rootID=ReactReconciler.mountComponent(this._renderedComponent,rootID,transaction,this._processChildContext(context));inst.componentDidMount&&transaction.getReactMountReady().enqueue(inst.componentDidMount,inst);return rootID},unmountComponent:function(){var inst=
this._instance;inst.componentWillUnmount&&inst.componentWillUnmount();ReactReconciler.unmountComponent(this._renderedComponent);this._pendingStateQueue=this._instance=this._renderedComponent=null;this._pendingForceUpdate=this._pendingReplaceState=!1;this._topLevelWrapper=this._rootNodeID=this._context=this._pendingElement=this._pendingCallbacks=null;ReactInstanceMap.remove(inst)},_maskContext:function(context){var contextTypes=this._currentElement.type.contextTypes;if(!contextTypes)return emptyObject;
var maskedContext={};for(var contextName in contextTypes)maskedContext[contextName]=context[contextName];return maskedContext},_processContext:function(context){context=this._maskContext(context);var Component=this._currentElement.type;Component.contextTypes&&this._checkPropTypes(Component.contextTypes,context,ReactPropTypeLocations.context);return context},_processChildContext:function(currentContext){var Component=this._currentElement.type,inst=this._instance;if(inst=inst.getChildContext&&inst.getChildContext()){"object"!==
typeof Component.childContextTypes?invariant(!1,"%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().",this.getName()||"ReactCompositeComponent"):void 0;this._checkPropTypes(Component.childContextTypes,inst,ReactPropTypeLocations.childContext);for(var name in inst)name in Component.childContextTypes?void 0:invariant(!1,'%s.getChildContext(): key "%s" is not defined in childContextTypes.',this.getName()||"ReactCompositeComponent",name);return assign({},currentContext,
inst)}return currentContext},_processProps:function(newProps){var Component=this._currentElement.type;Component.propTypes&&this._checkPropTypes(Component.propTypes,newProps,ReactPropTypeLocations.prop);return newProps},_checkPropTypes:function(propTypes,props,location){var componentName=this.getName(),propName;for(propName in propTypes)if(propTypes.hasOwnProperty(propName)){try{"function"!==typeof propTypes[propName]?invariant(!1,"%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.",
componentName||"React class",ReactPropTypeLocationNames[location],propName):void 0;var error=propTypes[propName](props,propName,componentName,location,null,"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED")}catch(ex){error=ex}if(error instanceof Error){var addendum;a:{if(addendum=this._currentElement._owner||null)if(addendum=addendum.getName()){addendum=" Check the render method of `"+addendum+"`.";break a}addendum=""}location===ReactPropTypeLocations.prop?warning(!1,"Failed Composite propType: %s%s",
error.message,addendum):warning(!1,"Failed Context Types: %s%s",error.message,addendum)}}},receiveComponent:function(nextElement,transaction,nextContext){var prevElement=this._currentElement,prevContext=this._context;this._pendingElement=null;this.updateComponent(transaction,prevElement,nextElement,prevContext,nextContext)},performUpdateIfNecessary:function(transaction){null!=this._pendingElement&&ReactReconciler.receiveComponent(this,this._pendingElement||this._currentElement,transaction,this._context);
(null!==this._pendingStateQueue||this._pendingForceUpdate)&&this.updateComponent(transaction,this._currentElement,this._currentElement,this._context,this._context)},updateComponent:function(transaction,prevParentElement,nextParentElement,prevUnmaskedContext,nextUnmaskedContext){prevUnmaskedContext=this._instance;var nextContext=this._context===nextUnmaskedContext?prevUnmaskedContext.context:this._processContext(nextUnmaskedContext);prevParentElement===nextParentElement?prevParentElement=nextParentElement.props:
(prevParentElement=this._processProps(nextParentElement.props),prevUnmaskedContext.componentWillReceiveProps&&prevUnmaskedContext.componentWillReceiveProps(prevParentElement,nextContext));var nextState=this._processPendingState(prevParentElement,nextContext),shouldUpdate=this._pendingForceUpdate||!prevUnmaskedContext.shouldComponentUpdate||prevUnmaskedContext.shouldComponentUpdate(prevParentElement,nextState,nextContext);warning("undefined"!==typeof shouldUpdate,"%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.",
this.getName()||"ReactCompositeComponent");shouldUpdate?(this._pendingForceUpdate=!1,this._performComponentUpdate(nextParentElement,prevParentElement,nextState,nextContext,transaction,nextUnmaskedContext)):(this._currentElement=nextParentElement,this._context=nextUnmaskedContext,prevUnmaskedContext.props=prevParentElement,prevUnmaskedContext.state=nextState,prevUnmaskedContext.context=nextContext)},_processPendingState:function(props,context){var inst=this._instance,queue=this._pendingStateQueue,
replace=this._pendingReplaceState;this._pendingReplaceState=!1;this._pendingStateQueue=null;if(!queue)return inst.state;if(replace&&1===queue.length)return queue[0];var nextState=assign({},replace?queue[0]:inst.state);for(replace=replace?1:0;replace<queue.length;replace++){var partial=queue[replace];assign(nextState,"function"===typeof partial?partial.call(inst,nextState,props,context):partial)}return nextState},_performComponentUpdate:function(nextElement,nextProps,nextState,nextContext,transaction,
unmaskedContext){var inst=this._instance,hasComponentDidUpdate=!!inst.componentDidUpdate;if(hasComponentDidUpdate){var prevProps=inst.props;var prevState=inst.state;var prevContext=inst.context}inst.componentWillUpdate&&inst.componentWillUpdate(nextProps,nextState,nextContext);this._currentElement=nextElement;this._context=unmaskedContext;inst.props=nextProps;inst.state=nextState;inst.context=nextContext;this._updateRenderedComponent(transaction,unmaskedContext);hasComponentDidUpdate&&transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst,
prevProps,prevState,prevContext),inst)},_updateRenderedComponent:function(transaction,context){var prevComponentInstance=this._renderedComponent,prevRenderedElement=prevComponentInstance._currentElement,nextRenderedElement=this._renderValidatedComponent();if(shouldUpdateReactComponent(prevRenderedElement,nextRenderedElement))ReactReconciler.receiveComponent(prevComponentInstance,nextRenderedElement,transaction,this._processChildContext(context));else{var thisID=this._rootNodeID;prevRenderedElement=
prevComponentInstance._rootNodeID;ReactReconciler.unmountComponent(prevComponentInstance);this._renderedComponent=this._instantiateReactComponent(nextRenderedElement);transaction=ReactReconciler.mountComponent(this._renderedComponent,thisID,transaction,this._processChildContext(context));this._replaceNodeWithMarkupByID(prevRenderedElement,transaction)}},_replaceNodeWithMarkupByID:function(prevComponentID,nextMarkup){ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID,nextMarkup)},
_renderValidatedComponentWithoutOwnerOrContext:function(){var inst=this._instance,renderedComponent=inst.render();"undefined"===typeof renderedComponent&&inst.render._isMockFunction&&(renderedComponent=null);return renderedComponent},_renderValidatedComponent:function(){ReactCurrentOwner.current=this;try{var renderedComponent=this._renderValidatedComponentWithoutOwnerOrContext()}finally{ReactCurrentOwner.current=null}null===renderedComponent||!1===renderedComponent||ReactElement.isValidElement(renderedComponent)?
void 0:invariant(!1,"%s.render(): A valid ReactComponent must be returned. You may have returned undefined, an array or some other invalid object.",this.getName()||"ReactCompositeComponent");return renderedComponent},attachRef:function(ref,component){var inst=this.getPublicInstance();null==inst?invariant(!1,"Stateless function components cannot have refs."):void 0;var publicComponentInstance=component.getPublicInstance();component=component&&component.getName?component.getName():"a component";warning(null!=
publicComponentInstance,'Stateless function components cannot be given refs (See ref "%s" in %s created by %s). Attempts to access this ref will fail.',ref,component,this.getName());(inst.refs===emptyObject?inst.refs={}:inst.refs)[ref]=publicComponentInstance},detachRef:function(ref){delete this.getPublicInstance().refs[ref]},getName:function(){var type=this._currentElement.type,constructor=this._instance&&this._instance.constructor;return type.displayName||constructor&&constructor.displayName||type.name||
constructor&&constructor.name||null},getPublicInstance:function(){var inst=this._instance;return inst instanceof StatelessComponent?null:inst},_instantiateReactComponent:null};global.measureMethods(require,"ReactCompositeComponent",{mountComponent:"mountComponent",updateComponent:"updateComponent",_renderValidatedComponent:"_renderValidatedComponent"});module.exports={Mixin:require}}
//# sourceMappingURL=module$node_modules$react_offcanvas$node_modules$react$lib$ReactCompositeComponent.js.map
