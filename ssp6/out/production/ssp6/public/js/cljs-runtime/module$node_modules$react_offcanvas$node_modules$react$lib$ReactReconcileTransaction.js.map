{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$ReactReconcileTransaction.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,oFAAA,CAAyG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA0GjJC,QAASA,0BAAyB,CAACC,SAAD,CAAY,CAC5C,IAAKC,CAAAA,uBAAL,EAMA,KAAKC,CAAAA,oBAAL,CAA4B,CAAA,CAC5B,KAAKC,CAAAA,eAAL,CAAuBC,aAAcC,CAAAA,SAAd,CAAwB,IAAxB,CACvB,KAAKC,CAAAA,gBAAL,CAAwB,CAACN,SAAzB,EAAsCO,oBAAqBD,CAAAA,gBATf,CA3F9C,IAAIF,cAAgBR,OAAA,CAAQ,0EAAR,CAChBY,OAAAA,CAAcZ,OAAA,CAAQ,wEAAR,CAClB;IAAIa,yBAA2Bb,OAAA,CAAQ,qFAAR,CAA/B,CACIW,qBAAuBX,OAAA,CAAQ,iFAAR,CACvBc,QAAAA,CAAsBd,OAAA,CAAQ,gFAAR,CAC1B,KAAIe,YAAcf,OAAA,CAAQ,wEAAR,CAEdgB,QAAAA,CAAShB,OAAA,CAAQ,0EAAR,CAoEb;IAAIiB,qBAAuB,CA9DCC,CAI1BC,WAAYL,OAAoBM,CAAAA,uBAJNF,CAQ1BG,MAAOP,OAAoBQ,CAAAA,gBARDJ,CA8DD,CA9CHK,CAKtBJ,WAAYA,QAAS,EAAG,CACtB,IAAIK,iBAAmBX,wBAAyBY,CAAAA,SAAzB,EACvBZ,yBAAyBa,CAAAA,UAAzB,CAAoC,CAAA,CAApC,CACA,OAAOF,iBAHe,CALFD,CAgBtBF,MAAOA,QAAS,CAACM,iBAAD,CAAoB,CAClCd,wBAAyBa,CAAAA,UAAzB,CAAoCC,iBAApC,CADkC,CAhBdJ,CA8CG,CArBCK,CAI1BT,WAAYA,QAAS,EAAG,CACtB,IAAKZ,CAAAA,eAAgBsB,CAAAA,KAArB,EADsB,CAJED,CAW1BP,MAAOA,QAAS,EAAG,CACjB,IAAKd,CAAAA,eAAgBuB,CAAAA,SAArB,EADiB,CAXOF,CAqBD,CAyD3BZ,QAAA,CAAOb,yBAA0B4B,CAAAA,SAAjC,CAA4ChB,WAAYiB,CAAAA,KAAxD;AA7BYA,CAQVC,uBAAwBA,QAAS,EAAG,CAClC,MAAOhB,qBAD2B,CAR1Be,CAeVE,mBAAoBA,QAAS,EAAG,CAC9B,MAAO,KAAK3B,CAAAA,eADkB,CAftByB,CAuBVG,WAAYA,QAAS,EAAG,CACtB3B,aAAc4B,CAAAA,OAAd,CAAsB,IAAK7B,CAAAA,eAA3B,CACA,KAAKA,CAAAA,eAAL,CAAuB,IAFD,CAvBdyB,CA6BZ,CAEApB,OAAYyB,CAAAA,YAAZ,CAAyBlC,yBAAzB,CAEAF,OAAOC,CAAAA,OAAP,CAAiBC,yBAvJgI;",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/ReactReconcileTransaction.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$ReactReconcileTransaction\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconcileTransaction\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar Transaction = require('./Transaction');\n\nvar assign = require('./Object.assign');\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function () {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n   *   restores the previous value.\n   */\n  close: function (previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function () {\n    this.reactMountReady.notifyAll();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction(forceHTML) {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap procedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\n\nassign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;\n};"],
"names":["shadow$provide","global","require","module","exports","ReactReconcileTransaction","forceHTML","reinitializeTransaction","renderToStaticMarkup","reactMountReady","CallbackQueue","getPooled","useCreateElement","ReactDOMFeatureFlags","PooledClass","ReactBrowserEventEmitter","ReactInputSelection","Transaction","assign","TRANSACTION_WRAPPERS","SELECTION_RESTORATION","initialize","getSelectionInformation","close","restoreSelection","EVENT_SUPPRESSION","currentlyEnabled","isEnabled","setEnabled","previouslyEnabled","ON_DOM_READY_QUEUEING","reset","notifyAll","prototype","Mixin","getTransactionWrappers","getReactMountReady","destructor","release","addPoolingTo"]
}
