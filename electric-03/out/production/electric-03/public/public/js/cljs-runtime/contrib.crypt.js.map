{"version":3,"sources":["contrib/crypt.cljc"],"mappings":";AASA,8BAAA,9BAAMA,oEAAeC;AAArB,AAKK,IAAMC,WAAS,KAAAC;AAAf,AACE,AAASD,gBAAS,AAACE,6BAA6B,AAACC,wGAAOJ;;AACxD,OAACK,kCAAkC,AAASJ;;AAEnD","names":["contrib.crypt/sha256-base64","o","sha256er","js/goog.crypt.Sha256","js/goog.crypt.stringToByteArray","cljs.core.pr_str","goog.crypt.base64/encodeByteArray"],"sourcesContent":["(ns contrib.crypt\r\n  (:require #?(:cljs [goog.crypt :as crypt])\r\n            #?(:cljs [goog.crypt.Sha256])\r\n            #?(:cljs [goog.crypt.base64 :as base64])\r\n            [hyperfiddle.rcf :as rcf :refer [% tap tests with]]\r\n            [contrib.base64])\r\n  (:import #?(:clj [java.util Base64]))\r\n  #?(:cljs (:require-macros contrib.crypt)))\r\n\r\n(defn sha256-base64 [o]\r\n  #?(:clj\r\n     (let [sha256er (java.security.MessageDigest/getInstance \"SHA-256\")]\r\n       (String. (->> (.getBytes (pr-str o) \"UTF-8\") (.digest sha256er) (.encode (Base64/getEncoder))) \"UTF-8\"))\r\n     :cljs\r\n     (let [sha256er (goog.crypt.Sha256.)]\r\n       (.update sha256er (goog.crypt.stringToByteArray (pr-str o)))\r\n       (goog.crypt.base64/encodeByteArray (.digest sha256er)))))\r\n\r\n(tests\r\n  (string? (sha256-base64 [:x \"y\"])) := true\r\n  (string? (sha256-base64 nil))      := true)\r\n"]}