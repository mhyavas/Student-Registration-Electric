shadow$provide.module$node_modules$react_offcanvas$node_modules$react$lib$ReactDefaultPerfAnalysis=function(global,require,module,exports){function getUnchangedComponents(measurement){var cleanComponents={},dirtyLeafIDs=Object.keys(measurement.writes),allIDs=assign({},measurement.exclusive,measurement.inclusive),id;for(id in allIDs){allIDs=!1;for(var i=0;i<dirtyLeafIDs.length;i++)if(0===dirtyLeafIDs[i].indexOf(id)){allIDs=!0;break}measurement.created[id]&&(allIDs=!0);!allIDs&&0<measurement.counts[id]&&
(cleanComponents[id]=!0)}return cleanComponents}var assign=require("module$node_modules$react_offcanvas$node_modules$react$lib$Object_assign"),DOM_OPERATION_TYPES={_mountImageIntoNode:"set innerHTML",INSERT_MARKUP:"set innerHTML",MOVE_EXISTING:"move",REMOVE_NODE:"remove",SET_MARKUP:"set innerHTML",TEXT_CONTENT:"set textContent",setValueForProperty:"update attribute",setValueForAttribute:"update attribute",deleteValueForProperty:"remove attribute",setValueForStyles:"update styles",replaceNodeWithMarkup:"replace",
updateTextContent:"set textContent"};module.exports={getExclusiveSummary:function(measurements){for(var candidates={},displayName,i=0;i<measurements.length;i++){var measurement=measurements[i],allIDs=assign({},measurement.exclusive,measurement.inclusive),id;for(id in allIDs)displayName=measurement.displayNames[id].current,candidates[displayName]=candidates[displayName]||{componentName:displayName,inclusive:0,exclusive:0,render:0,count:0},measurement.render[id]&&(candidates[displayName].render+=measurement.render[id]),
measurement.exclusive[id]&&(candidates[displayName].exclusive+=measurement.exclusive[id]),measurement.inclusive[id]&&(candidates[displayName].inclusive+=measurement.inclusive[id]),measurement.counts[id]&&(candidates[displayName].count+=measurement.counts[id])}measurements=[];for(displayName in candidates)1.2<=candidates[displayName].exclusive&&measurements.push(candidates[displayName]);measurements.sort(function(a,b){return b.exclusive-a.exclusive});return measurements},getInclusiveSummary:function(measurements,
onlyClean){for(var candidates={},inclusiveKey,i=0;i<measurements.length;i++){var measurement=measurements[i],allIDs=assign({},measurement.exclusive,measurement.inclusive),cleanComponents;onlyClean&&(cleanComponents=getUnchangedComponents(measurement));for(var id in allIDs)if(!onlyClean||cleanComponents[id])inclusiveKey=measurement.displayNames[id],inclusiveKey=inclusiveKey.owner+" \x3e "+inclusiveKey.current,candidates[inclusiveKey]=candidates[inclusiveKey]||{componentName:inclusiveKey,time:0,count:0},
measurement.inclusive[id]&&(candidates[inclusiveKey].time+=measurement.inclusive[id]),measurement.counts[id]&&(candidates[inclusiveKey].count+=measurement.counts[id])}measurements=[];for(inclusiveKey in candidates)1.2<=candidates[inclusiveKey].time&&measurements.push(candidates[inclusiveKey]);measurements.sort(function(a,b){return b.time-a.time});return measurements},getDOMSummary:function(measurements){var items=[];measurements.forEach(function(measurement){Object.keys(measurement.writes).forEach(function(id){measurement.writes[id].forEach(function(write){items.push({id,
type:DOM_OPERATION_TYPES[write.type]||write.type,args:write.args})})})});return items},getTotalTime:function(measurements){for(var totalTime=0,i=0;i<measurements.length;i++)totalTime+=measurements[i].totalTime;return totalTime}}}
//# sourceMappingURL=module$node_modules$react_offcanvas$node_modules$react$lib$ReactDefaultPerfAnalysis.js.map
