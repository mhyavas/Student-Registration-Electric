{"version":3,"sources":["demo/demo_2_toggle.cljc"],"mappings":";AAYA,AAEA","names":[],"sourcesContent":["(ns demo.demo-2-toggle\r\n  (:require\r\n   [hyperfiddle.electric :as e]\r\n   [hyperfiddle.electric-dom2 :as dom]\r\n   [hyperfiddle.electric-ui4 :as ui]))\r\n\r\n; A stateful app with a server-side counter\r\n; Electric functions are reactive and incrementally maintained,\r\n; which means that when you make a small change to the state,\r\n; the functions will recompute and you'll get a small adjustment to the DOM\r\n\r\n#?(:clj (defonce !x (atom true))) ; server state\r\n(e/def x (e/server (e/watch !x))) ; reactive signal derived from reference\r\n\r\n(e/defn App []\r\n  (e/client\r\n    (dom/h1 (dom/text \"Toggle\"))\r\n    (ui/button (e/fn [] (e/server (swap! !x not)))\r\n      (dom/text \"toggle client/server\"))\r\n    (dom/p\r\n      (dom/text \"Number type is: \"\r\n        (if (e/server x)\r\n          (e/client (pr-str (type 1))) ; javascript number type\r\n          (e/server (pr-str (type 1)))))))) ; java number type\r\n"]}