{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$SelectEventPlugin.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/SelectEventPlugin.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$SelectEventPlugin\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SelectEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getActiveElement = require('fbjs/lib/getActiveElement');\nvar isTextInputElement = require('./isTextInputElement');\nvar keyOf = require('fbjs/lib/keyOf');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSelect: null }),\n      captured: keyOf({ onSelectCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]\n  }\n};\n\nvar activeElement = null;\nvar activeElementID = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n// Track whether a listener exists for this plugin. If none exist, we do\n// not extract events.\nvar hasListener = false;\nvar ON_SELECT_KEY = keyOf({ onSelect: null });\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    if (!hasListener) {\n      return null;\n    }\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case topLevelTypes.topFocus:\n        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {\n          activeElement = topLevelTarget;\n          activeElementID = topLevelTargetID;\n          lastSelection = null;\n        }\n        break;\n      case topLevelTypes.topBlur:\n        activeElement = null;\n        activeElementID = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case topLevelTypes.topMouseDown:\n        mouseDown = true;\n        break;\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topMouseUp:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case topLevelTypes.topSelectionChange:\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n\n  didPutListener: function (id, registrationName, listener) {\n    if (registrationName === ON_SELECT_KEY) {\n      hasListener = true;\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n};"],
"names":["shadow$provide","global","require","module","exports","constructSelectEvent","nativeEvent","nativeEventTarget","mouseDown","activeElement","getActiveElement","node","ReactInputSelection","hasSelectionCapabilities","start","selectionStart","end","selectionEnd","window","getSelection","selection","anchorNode","anchorOffset","focusNode","focusOffset","document","range","createRange","parentElement","text","top","boundingTop","left","boundingLeft","lastSelection","shallowEqual","currentSelection","syntheticEvent","SyntheticEvent","getPooled","eventTypes","select","activeElementID","type","target","EventPropagators","accumulateTwoPhaseDispatches","EventConstants","ExecutionEnvironment","isTextInputElement","keyOf","topLevelTypes","skipSelectionChangeEvent","canUseDOM","documentMode","phasedRegistrationNames","bubbled","onSelect","captured","onSelectCapture","dependencies","topBlur","topContextMenu","topFocus","topKeyDown","topMouseDown","topMouseUp","topSelectionChange","hasListener","ON_SELECT_KEY","SelectEventPlugin","extractEvents","topLevelType","topLevelTarget","topLevelTargetID","contentEditable","topKeyUp","didPutListener","id","registrationName","listener"]
}
