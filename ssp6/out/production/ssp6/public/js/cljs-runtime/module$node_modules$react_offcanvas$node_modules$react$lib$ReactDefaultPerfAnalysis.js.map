{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$ReactDefaultPerfAnalysis.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/ReactDefaultPerfAnalysis.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$ReactDefaultPerfAnalysis\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerfAnalysis\n */\n\n'use strict';\n\nvar assign = require('./Object.assign');\n\n// Don't try to save users less than 1.2ms (a number I made up)\nvar DONT_CARE_THRESHOLD = 1.2;\nvar DOM_OPERATION_TYPES = {\n  '_mountImageIntoNode': 'set innerHTML',\n  INSERT_MARKUP: 'set innerHTML',\n  MOVE_EXISTING: 'move',\n  REMOVE_NODE: 'remove',\n  SET_MARKUP: 'set innerHTML',\n  TEXT_CONTENT: 'set textContent',\n  'setValueForProperty': 'update attribute',\n  'setValueForAttribute': 'update attribute',\n  'deleteValueForProperty': 'remove attribute',\n  'setValueForStyles': 'update styles',\n  'replaceNodeWithMarkup': 'replace',\n  'updateTextContent': 'set textContent'\n};\n\nfunction getTotalTime(measurements) {\n  // TODO: return number of DOM ops? could be misleading.\n  // TODO: measure dropped frames after reconcile?\n  // TODO: log total time of each reconcile and the top-level component\n  // class that triggered it.\n  var totalTime = 0;\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    totalTime += measurement.totalTime;\n  }\n  return totalTime;\n}\n\nfunction getDOMSummary(measurements) {\n  var items = [];\n  measurements.forEach(function (measurement) {\n    Object.keys(measurement.writes).forEach(function (id) {\n      measurement.writes[id].forEach(function (write) {\n        items.push({\n          id: id,\n          type: DOM_OPERATION_TYPES[write.type] || write.type,\n          args: write.args\n        });\n      });\n    });\n  });\n  return items;\n}\n\nfunction getExclusiveSummary(measurements) {\n  var candidates = {};\n  var displayName;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\n\n    for (var id in allIDs) {\n      displayName = measurement.displayNames[id].current;\n\n      candidates[displayName] = candidates[displayName] || {\n        componentName: displayName,\n        inclusive: 0,\n        exclusive: 0,\n        render: 0,\n        count: 0\n      };\n      if (measurement.render[id]) {\n        candidates[displayName].render += measurement.render[id];\n      }\n      if (measurement.exclusive[id]) {\n        candidates[displayName].exclusive += measurement.exclusive[id];\n      }\n      if (measurement.inclusive[id]) {\n        candidates[displayName].inclusive += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[displayName].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (displayName in candidates) {\n    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[displayName]);\n    }\n  }\n\n  arr.sort(function (a, b) {\n    return b.exclusive - a.exclusive;\n  });\n\n  return arr;\n}\n\nfunction getInclusiveSummary(measurements, onlyClean) {\n  var candidates = {};\n  var inclusiveKey;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\n    var cleanComponents;\n\n    if (onlyClean) {\n      cleanComponents = getUnchangedComponents(measurement);\n    }\n\n    for (var id in allIDs) {\n      if (onlyClean && !cleanComponents[id]) {\n        continue;\n      }\n\n      var displayName = measurement.displayNames[id];\n\n      // Inclusive time is not useful for many components without knowing where\n      // they are instantiated. So we aggregate inclusive time with both the\n      // owner and current displayName as the key.\n      inclusiveKey = displayName.owner + ' > ' + displayName.current;\n\n      candidates[inclusiveKey] = candidates[inclusiveKey] || {\n        componentName: inclusiveKey,\n        time: 0,\n        count: 0\n      };\n\n      if (measurement.inclusive[id]) {\n        candidates[inclusiveKey].time += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[inclusiveKey].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (inclusiveKey in candidates) {\n    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[inclusiveKey]);\n    }\n  }\n\n  arr.sort(function (a, b) {\n    return b.time - a.time;\n  });\n\n  return arr;\n}\n\nfunction getUnchangedComponents(measurement) {\n  // For a given reconcile, look at which components did not actually\n  // render anything to the DOM and return a mapping of their ID to\n  // the amount of time it took to render the entire subtree.\n  var cleanComponents = {};\n  var dirtyLeafIDs = Object.keys(measurement.writes);\n  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\n\n  for (var id in allIDs) {\n    var isDirty = false;\n    // For each component that rendered, see if a component that triggered\n    // a DOM op is in its subtree.\n    for (var i = 0; i < dirtyLeafIDs.length; i++) {\n      if (dirtyLeafIDs[i].indexOf(id) === 0) {\n        isDirty = true;\n        break;\n      }\n    }\n    // check if component newly created\n    if (measurement.created[id]) {\n      isDirty = true;\n    }\n    if (!isDirty && measurement.counts[id] > 0) {\n      cleanComponents[id] = true;\n    }\n  }\n  return cleanComponents;\n}\n\nvar ReactDefaultPerfAnalysis = {\n  getExclusiveSummary: getExclusiveSummary,\n  getInclusiveSummary: getInclusiveSummary,\n  getDOMSummary: getDOMSummary,\n  getTotalTime: getTotalTime\n};\n\nmodule.exports = ReactDefaultPerfAnalysis;\n};"],
"names":["shadow$provide","global","require","module","exports","getUnchangedComponents","measurement","cleanComponents","dirtyLeafIDs","Object","keys","writes","allIDs","assign","exclusive","inclusive","id","isDirty","i","length","indexOf","created","counts","DOM_OPERATION_TYPES","INSERT_MARKUP","MOVE_EXISTING","REMOVE_NODE","SET_MARKUP","TEXT_CONTENT","ReactDefaultPerfAnalysis","getExclusiveSummary","measurements","candidates","displayName","displayNames","current","componentName","render","count","arr","DONT_CARE_THRESHOLD","push","sort","a","b","getInclusiveSummary","onlyClean","inclusiveKey","owner","time","getDOMSummary","items","forEach","write","type","args","getTotalTime","totalTime"]
}
