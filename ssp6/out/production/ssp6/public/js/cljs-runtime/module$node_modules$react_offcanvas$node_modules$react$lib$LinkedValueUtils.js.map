{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$LinkedValueUtils.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/LinkedValueUtils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$LinkedValueUtils\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\\'t want to use valueLink and vice versa.') : invariant(false) : undefined;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\\'t want to use valueLink.') : invariant(false) : undefined;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\\'t want to ' + 'use checkedLink') : invariant(false) : undefined;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: ReactPropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n};"],
"names":["shadow$provide","global","require","module","exports","_assertSingleLink","inputProps","checkedLink","valueLink","invariant","undefined","_assertValueLink","value","onChange","_assertCheckedLink","checked","ReactPropTypes","ReactPropTypeLocations","warning","hasReadOnlyValue","propTypes","props","propName","componentName","type","readOnly","disabled","Error","func","loggedTypeFailures","LinkedValueUtils","checkPropTypes","tagName","owner","hasOwnProperty","error","prop","message","addendum","name","getName","getValue","getChecked","executeOnChange","event","requestChange","target","call"]
}
