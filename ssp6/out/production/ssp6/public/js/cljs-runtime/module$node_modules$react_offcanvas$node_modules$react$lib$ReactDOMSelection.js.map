{
"version":3,
"file":"module$node_modules$react_offcanvas$node_modules$react$lib$ReactDOMSelection.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/react-offcanvas/node_modules/react/lib/ReactDOMSelection.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_offcanvas$node_modules$react$lib$ReactDOMSelection\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelection\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar getNodeForCharacterOffset = require('./getNodeForCharacterOffset');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n  // divs do not seem to expose properties, triggering a \"Permission denied\n  // error\" if any of its properties are accessed. The only seemingly possible\n  // way to avoid erroring is to access a property that typically works for\n  // non-anonymous divs and catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    currentRange.startContainer.nodeType;\n    currentRange.endContainer.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (typeof offsets.end === 'undefined') {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n};"],
"names":["shadow$provide","global","require","module","exports","getIEOffsets","node","selectedRange","document","selection","createRange","selectedLength","text","length","fromStart","duplicate","moveToElementText","setEndPoint","startOffset","start","end","getModernOffsets","window","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","currentRange","getRangeAt","startContainer","nodeType","endContainer","e","rangeLength","toString","tempRange","cloneRange","selectNodeContents","setEnd","endOffset","detectionRange","setStart","isBackward","collapsed","setIEOffsets","offsets","range","moveStart","moveEnd","select","setModernOffsets","getTextContentAccessor","Math","min","extend","temp","startMarker","getNodeForCharacterOffset","endMarker","offset","removeAllRanges","addRange","ExecutionEnvironment","useIEOffsets","canUseDOM","ReactDOMSelection","getOffsets","setOffsets"]
}
