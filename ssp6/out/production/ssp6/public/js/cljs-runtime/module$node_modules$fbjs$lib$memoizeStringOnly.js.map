{
"version":3,
"file":"module$node_modules$fbjs$lib$memoizeStringOnly.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA+B3GD,MAAOC,CAAAA,OAAP,CAVAC,QAA0B,CAACC,QAAD,CAAW,CACnC,IAAIC,MAAQ,EACZ,OAAO,SAAS,CAACC,MAAD,CAAS,CAClBD,KAAME,CAAAA,cAAN,CAAqBD,MAArB,CAAL,GACED,KAAA,CAAMC,MAAN,CADF,CACkBF,QAASI,CAAAA,IAAT,CAAc,IAAd,CAAoBF,MAApB,CADlB,CAGA,OAAOD,MAAA,CAAMC,MAAN,CAJgB,CAFU,CArBsE;",
"sources":["node_modules/fbjs/lib/memoizeStringOnly.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$memoizeStringOnly\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule memoizeStringOnly\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n *\n * @param {function} callback\n * @return {function}\n */\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n};"],
"names":["shadow$provide","global","require","module","exports","memoizeStringOnly","callback","cache","string","hasOwnProperty","call"]
}
