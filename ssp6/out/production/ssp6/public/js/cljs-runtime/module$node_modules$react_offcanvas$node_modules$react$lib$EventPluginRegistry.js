shadow$provide.module$node_modules$react_offcanvas$node_modules$react$lib$EventPluginRegistry=function(global,require,module,exports){function recomputePluginOrdering(){if(EventPluginOrder)for(var pluginName in namesToPlugins){var PluginModule=namesToPlugins[pluginName],pluginIndex=EventPluginOrder.indexOf(pluginName);-1<pluginIndex?void 0:invariant(!1,"EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.",pluginName);if(!EventPluginRegistry.plugins[pluginIndex]){PluginModule.extractEvents?
void 0:invariant(!1,"EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.",pluginName);EventPluginRegistry.plugins[pluginIndex]=PluginModule;pluginIndex=PluginModule.eventTypes;for(var eventName in pluginIndex){var JSCompiler_inline_result=void 0;var dispatchConfig=pluginIndex[eventName],PluginModule$jscomp$0=PluginModule,eventName$jscomp$0=eventName;EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)?invariant(!1,"EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.",
eventName$jscomp$0):void 0;EventPluginRegistry.eventNameDispatchConfigs[eventName$jscomp$0]=dispatchConfig;var phasedRegistrationNames=dispatchConfig.phasedRegistrationNames;if(phasedRegistrationNames){for(JSCompiler_inline_result in phasedRegistrationNames)phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result)&&publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result],PluginModule$jscomp$0,eventName$jscomp$0);JSCompiler_inline_result=!0}else dispatchConfig.registrationName?
(publishRegistrationName(dispatchConfig.registrationName,PluginModule$jscomp$0,eventName$jscomp$0),JSCompiler_inline_result=!0):JSCompiler_inline_result=!1;JSCompiler_inline_result?void 0:invariant(!1,"EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.",eventName,pluginName)}}}}function publishRegistrationName(registrationName,PluginModule,eventName){EventPluginRegistry.registrationNameModules[registrationName]?invariant(!1,"EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.",
registrationName):void 0;EventPluginRegistry.registrationNameModules[registrationName]=PluginModule;EventPluginRegistry.registrationNameDependencies[registrationName]=PluginModule.eventTypes[eventName].dependencies}var invariant=require("module$node_modules$fbjs$lib$invariant"),EventPluginOrder=null,namesToPlugins={},EventPluginRegistry={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},injectEventPluginOrder:function(InjectedEventPluginOrder){EventPluginOrder?
invariant(!1,"EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."):void 0;EventPluginOrder=Array.prototype.slice.call(InjectedEventPluginOrder);recomputePluginOrdering()},injectEventPluginsByName:function(injectedNamesToPlugins){var isOrderingDirty=!1,pluginName;for(pluginName in injectedNamesToPlugins)if(injectedNamesToPlugins.hasOwnProperty(pluginName)){var PluginModule=injectedNamesToPlugins[pluginName];namesToPlugins.hasOwnProperty(pluginName)&&
namesToPlugins[pluginName]===PluginModule||(namesToPlugins[pluginName]?invariant(!1,"EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.",pluginName):void 0,namesToPlugins[pluginName]=PluginModule,isOrderingDirty=!0)}isOrderingDirty&&recomputePluginOrdering()},getPluginModuleForEvent:function(event){event=event.dispatchConfig;if(event.registrationName)return EventPluginRegistry.registrationNameModules[event.registrationName]||null;for(var phase in event.phasedRegistrationNames)if(event.phasedRegistrationNames.hasOwnProperty(phase)){var PluginModule=
EventPluginRegistry.registrationNameModules[event.phasedRegistrationNames[phase]];if(PluginModule)return PluginModule}return null},_resetEventPlugins:function(){EventPluginOrder=null;for(var pluginName in namesToPlugins)namesToPlugins.hasOwnProperty(pluginName)&&delete namesToPlugins[pluginName];EventPluginRegistry.plugins.length=0;pluginName=EventPluginRegistry.eventNameDispatchConfigs;for(var eventName in pluginName)pluginName.hasOwnProperty(eventName)&&delete pluginName[eventName];eventName=EventPluginRegistry.registrationNameModules;
for(var registrationName in eventName)eventName.hasOwnProperty(registrationName)&&delete eventName[registrationName]}};module.exports=EventPluginRegistry}
//# sourceMappingURL=module$node_modules$react_offcanvas$node_modules$react$lib$EventPluginRegistry.js.map
